<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Web.Mvc</name>
    </assembly>
    <members>
        <member name="T:C1.Util.Licensing.BaseLicenseDetector">
            <summary>
            Define a class for detecting license.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.BaseLicenseDetector.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProviderInfo">
            <summary>
            <para>Provides static <see cref="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)"/> methods that 
            should be called from the constructors of licensed classes.</para>
            <para>Also provides a static <see cref="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)"/> method that can 
            be called to show the about box with product and licensing information.</para>
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>Check the <b>ShouldNag</b> property of the returned <see cref="T:C1.Util.Licensing.LicenseInfo"/> 
            to determine whether the licensed class should nag the user. This value is set
            to true in situations where a valid license was not found but a nag dialog
            could not be displayed. In these cases, the licensed class is supposed to nag
            in some other way (with a watermark for example).</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Boolean)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <param name="showNagDialog">Whether the nag dialog should be displayed when a valid license is not found.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>This overload was created for use in WPF. It should be called in the control's constructor
            in order to support license persistence correctly. But it should not show the nag dialog until the
            control is fully loaded, or the VS designer may remain blank.</para>
            <para>So the solution is this:</para>
            <code>
            LicenseInfo _licInfo;
            public LicensedControl()
            {
              // check license but don't nag yet
              _licInfo = ProviderInfo.Validate(typeof(LicensedControl), this, false);
              
              // perform licensing after control is fully loaded
              Loaded += LicensedControl_Loaded;
            }
            void LicensedControl_Loaded(object sender, RoutedEventArgs e)
            {
              // nag after loading
              if (_licInfo.ShouldNag)
              {
                ProviderInfo.ShowAboutBox(this);
              }
            }
            </code>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Nag(System.Type,C1.Util.Licensing.LicenseInfo,System.Boolean)">
            <summary>
            Nag user by showing AboutBox with license information.
            Show it only once per day per assembly.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="li"><see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</param>
            <param name="designTime">Whether we're running at design or run time.</param>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Reflection.Assembly,System.String)">
            <summary>
            Version of Validate used by constructors that take runtime keys.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object.</param>
            <param name="callingAsm">Assembly that contains the owner licensed control.</param>
            <param name="runtimeKey">Any valid C1 runtime key.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the runtime key.</returns>
            <remarks>
            <para>This allows a licensed C1 class to create other C1 objects bypassing 
            license verification for the child objects.</para>
            <para>For extra safety, we check that the owner object is defined in an assembly
            the contains a 'C1ProductInfo' attribute.</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateDesigntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Design time validation. Looks for a license in the registry and saves it in the
            provided <see cref="T:System.ComponentModel.LicenseContext"/>.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
            <remarks>
            Call this method from application-type products (that always require a license to be
            installed in the registry). In this case, the <paramref name="context"/> parameter 
            should be set to null.
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateRuntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Runtime validation.
            Looks for a runtime key stored in the current application's resources.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)">
            <summary>
            Shows the About Box for an instance of a C1 product.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.GetC1Type(System.Object)">
            <summary>
            Get the type whose assembly contains a 'C1ProductInfoAttribute'.
            </summary>
            <param name="instance">Instance of an object whose type is to be checked.</param>
            <returns>The type whose assembly contains a 'C1ProductInfoAttribute'</returns>
        </member>
        <member name="T:C1.Util.Licensing.LicenseInfo">
            <summary>
            Contains information about a license stored in an application.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus,C1.Util.Licensing.ProductLicense)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.LicenseStatus">
            <summary>
            Gets or sets the status of this license (valid, expired, unlicensed).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.License">
            <summary>
            Gets or sets the <see cref="T:C1.Util.Licensing.ProductLicense"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Type">
            <summary>
            Gets or sets the <see cref="P:C1.Util.Licensing.LicenseInfo.Type"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysElapsed">
            <summary>
            Gets the number of evaluation days elapsed.
            Returns -1 for valid licenses.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysLeft">
            <summary>
            Gets the number of evaluation days still left.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.ShouldNag">
            <summary>
            Gets or sets a value that determines whether the caller should
            nag the user. This is the case when the component/control is 
            not licensed, but is not running in interactive mode. So we can't
            show a dialog and the caller is supposed to nag some other way
            (typically by adding watermarks to the UI or output).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsValid">
            <summary>
            Gets a value that determines whether the license found is valid.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsExpired">
            <summary>
            Gets a value that determines whether the license found is expired.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsLocalHost">
            <summary>
            Gets a value that determines whether the component is running under
            localhost and therefore should not nag the user with alert dialogs.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.SafeLicenseContext">
            <summary>
            
            Provides a version of GetSavedLicenseKey that doesn't require
            special permissions.
            
            The code was mostly copied from the .NET framework, but then changed 
            in a few places to require fewer permissions (assembly name, file io, 
            etc). 
            
            The main change is the use of a custom deserializer to read Hashtable 
            objects instead of the original BinaryFormatter, which requires
            permissions.
            
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AboutNameAttribute">
            <summary>
            Attribute used to specify the product name shown on the About Box.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductInfoAttribute">
            <summary>
            Attribute used to attach licensing/product information to assemblies.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProductLicense">
            <summary>
            Represents a license for a product (e.g. C1BarCode, C1Studio Enterprise).
            
            Provides methods for:
            - generating new license keys (administrative task)
            - checking license key validity (used by installer and products)
            - generating and checking runtime keys (used by products)
            - installing/uninstalling licenses (used by installer)
            
            The install/uninstall code requires elevated permissions, and is
            used only by setups and utilities (not by controls). The code is 
            implemented in the ProductLicense.Installer.cs, which controls should
            not include since it won't be useful to them.
            
            When a product is sold, we send the user a license KEY. The user installs
            a license on his machine by providing his name, his company name, and the 
            key.
            
            The <see cref="P:C1.Util.Licensing.ProductLicense.Key"/> is a string in the following format:
            
                AAQYYCC-XX-NNNNNN-DD-DZZZZZZ
                
            Where:
            
                AA:     Product code (should match one of the products in the 
                        product catalog (see ProductInformation.GetProductCatalog()).
                Q:      Quarter when the license key was issued (1, 2, or 3)
                YY:     Year when the license key was issued (e.g., 10 for 2010)
                CC:     Order code, two chars that indicate whether this is a 
                        new sale, upgrade, renewal, special offer, etc.
                XX:     Hash code to ensure key validity.
                NNNNNN: Unique serial number.
                DDD:    Vendor code, three chars
                ZZZZZZ: Combination of random numbers for uniqueness and extra hash.
                
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ItemsBoundControl`1">
            <summary>
            Defines the base class for C1 bound controls.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Control">
            <summary>
            Defines the base class for C1 MVC controls.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Component">
            <summary>
            Defines the base class for C1 MVC components.
            </summary>
            <summary>
            Defines the C1 MVC component class.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.IComponentContainer">
            <summary>
            Defines an interface which has child components.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IComponentContainer.Components">
            <summary>
            Gets the child components.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Component.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Component"/> instance.
            </summary>
            <param name="helper">The html helper.</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.SerializeOptions">
            <summary>
            Serialize the control to a Json string.
            </summary>
            <returns>A JSON string representation of the control.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Component.EnsureUniqueId">
            <summary>
            Ensure the unique id is created.
            </summary>
            <remarks>
            When the component supports callback, 
            this method should be called in the constructor of the component to ensure the component has the unique and fixed id.
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.Component.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the component result to the writer.
            </summary>
            <param name="writer">The specified writer used to render.</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.OnPreRender">
            <summary>
            This method is performed before rendering.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Component.RenderScripts(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Render the scripts.
            </summary>
            <param name="writer">The writer.</param>
            <param name="renderScriptTag">A boolean value indicats whether to render the script tag.</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers the start-up script.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.WriteTo(System.Web.UI.HtmlTextWriter)">
            <summary>
            Writer the process result of current instance to the writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.Mvc.Component.ToHtmlString">
            <summary>
            Returns an HTML-encoded string.
            </summary>
            <returns>An HTML-encoded string.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Component.HandleCallBack(C1.Web.Mvc.CallbackManager)">
            <summary>
            Handle the callback.
            </summary>
            <returns>
            True, if the callback is raised and processed by the component.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.Component.EnsureChildComponents">
            <summary>
            Ensure the child components created.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Component.CreateChildComponents">
            <summary>
            Creates child components.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.Id">
            <summary>
            Gets or sets the component id.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.UrlHelper">
            <summary>
            Gets the url helper.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.Helper">
            <summary>
            Gets or sets the htmlhelper object.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.UniqueId">
            <summary>
            Gets a value which represents the unique id for the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.Components">
            <summary>
            Gets the child components.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientComponent">
            <summary>
            Gets a value which represents the client control constructor with the complete namespace.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientClass">
            <summary>
            The client component type, like: FlexGrid.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientModule">
            <summary>
            The client module, like: c1.mvc.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ClientSubModule">
            <summary>
            The sub module, like: chart, grid.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.HasScripts">
            <summary>
            Gets a boolean value indicates whether current component has the scripts which need to be rendered.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Component.ChildComponentsCreated">
            <summary>
            Gets or sets a boolean value indicates whether child components are created.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ITemplate">
            <summary>
            Defines the interface of template.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ITemplate.TemplateBindings">
            <summary>
            Gets the collection of the template bindings.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ITemplate.IsTemplate">
            <summary>
            Gets or sets a boolean value which indicates whether transfer this control to template mode.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Control.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Control"/> instance
            by using the specified HtmlHelper object and selector.
            </summary>
            <param name="helper">The html helper.</param>
            <param name="selector">The selector used to match the dom elements which the control is attached to.</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.ToTemplate">
            <summary>
            Transfers to template mode.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Control.GetRenderSelector">
            <summary>
            Gets the selector according to the settings.
            If the selector is not set and id is not set, create an id and use it as selector.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Control.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control or the callback result to the writer.
            </summary>
            <param name="writer">The Html writer.</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderMarkup(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control markup.
            </summary>
            <param name="writer">the specified writer used to write the markup.</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders end tag of control.
            </summary>
            <param name="writer">The specified writer used to write the markup.</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderContent(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders content of control.
            </summary>
            <param name="writer">The specified writer used to write the markup.</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders begin tag of control.
            </summary>
            <param name="writer">The specified writer used to write the markup</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the html attributes of control.
            </summary>
            <param name="writer">The specified writer used to write the markup</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RenderScripts(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Renders the scripts.
            </summary>
            <param name="writer">The writer.</param>
            <param name="renderScriptTag">A boolean value indicats whether to render the script tag.</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers the startup scripts.
            </summary>
            <param name="writer">the specified writer used to write the startup scripts.</param>
        </member>
        <member name="M:C1.Web.Mvc.Control.GetWrapperCtorOptions">
            <summary>
            Gets the options for the wrapper constructor.
            </summary>
            <returns>The json text for the options.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Control.OnPreRender">
            <summary>
            This method is performed before rendering.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.CssClass">
            <summary>
            Gets or sets the css class of the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Width">
            <summary>
            Gets or sets the width of the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Height">
            <summary>
            Gets or sets the height of the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.HtmlAttributes">
            <summary>
            Gets the HTML attributes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.CssStyles">
            <summary>
            Gets the CSS style applied in the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.TemplateBindings">
            <summary>
            Gets the collection of the template bindings.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Selector">
            <summary>
            Gets or sets the selector to macth the dom element(s) which the control is attached to.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.OnClientGotFocus">
            <summary>
            Occurs when the control gets the focus.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.OnClientLostFocus">
            <summary>
            Occurs when the control loses the focus.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.IsDisabled">
            <summary>
            Gets or sets a value that determines whether the control is disabled.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.IsTemplate">
            <summary>
            Gets or sets a boolean value which indicates whether transfer this control to template mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.Disabled">
            <summary>
            Deprecated: use <see cref="P:C1.Web.Mvc.Control.IsDisabled"/> instead to avoid confusion with 'disabled' HTML attribute.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.TagKey">
            <summary>
            Gets the System.Web.UI.HtmlTextWriterTag value that corresponds to this Web
            server control. This property is used primarily by control developers. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Control.UniqueId">
            <summary>
            Gets a value which represents the unique id for the control.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Register the startup scripts.
            </summary>
            <param name="writer">the specified writer used to write the startup scripts.</param>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.CreateChildComponents">
            <summary>
            Ensure the child components created.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ItemsBoundControl`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.ItemsBoundControl`1.ShouldSerializeItemsSource">
            <summary>
            Specifies whether the ItemsSource property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSource">
            <summary>
            Gets ItemsSource settings.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSourceId">
            <summary>
            Gets or sets the ItemsSourceId specify which CollectionViewService will be used for this control.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputColorBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputColor"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DropDownBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.DropDown"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FormInputBaseBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FormInputBase"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputBaseBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputBase"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ControlBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Control"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ComponentBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Component"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BaseBuilder`2">
            <summary>
            The base builder for building object.
            </summary>
            <typeparam name="TObject">The object type</typeparam>
            <typeparam name="TBuilder">The builder type</typeparam>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.HideObjectMembers">
            <summary>
            Defines a class to remove the members from <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.Equals(System.Object)">
            <summary>
            Overrides to remove this method.
            </summary>
            <param name="obj">The object.</param>
            <returns>A bool value.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.GetHashCode">
            <summary>
            Overrides to remove the method.
            </summary>
            <returns>An int value.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.ToString">
            <summary>
            Overrides to remove this method.
            </summary>
            <returns>The text.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HideObjectMembers.GetType">
            <summary>
            Overrides to remove this method.
            </summary>
            <returns>The type.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BaseBuilder`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the BaseBuilder class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComponentBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ComponentBuilder`2"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.Component"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComponentBuilder`2.ToHtmlString">
            <summary>
            Get an Html string.
            </summary>
            <returns>An html string.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.CssClass(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.CssClass"/>.
            Sets the css class of the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Width(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.Width"/>.
            Sets the width of the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Height(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.Height"/>.
            Sets the height of the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.OnClientGotFocus(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Control.OnClientGotFocus"/> client event.
            Occurs when the control gets the focus.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.OnClientLostFocus(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Control.OnClientLostFocus"/> client event.
            Occurs when the control loses the focus.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.IsDisabled(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.IsDisabled"/>.
            Sets a value that determines whether the control is disabled.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Disabled(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.Disabled"/>.
            Deprecated: use <see cref="M:C1.Web.Mvc.Fluent.ControlBuilder`2.IsDisabled(System.Boolean)"/> instead to avoid confusion with 'disabled' HTML attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ControlBuilder`2"/> instance to configurate <paramref name="control"/>.
            </summary>
            <param name="control">The <see cref="T:C1.Web.Mvc.Control"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.HtmlAttribute(System.String,System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.HtmlAttributes"/>.
            Sets the HTML attributes.
            </summary>
            <param name="key">The key of the HTML attribute.</param>
            <param name="value">The value of the HTML attribute.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.HtmlAttributes(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.HtmlAttributes"/>.
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.HtmlAttributes"/>.
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.CssStyle(System.String,System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.CssStyles"/>.
            Sets the CSS style applied in the control.
            </summary>
            <param name="key">The key of the CSS property</param>
            <param name="value">The value of the CSS property</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.CssStyles(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Control.CssStyles"/>.
            Sets the CSS style applied in the control.
            </summary>
            <param name="styles">The CSS styles</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.TemplateBind(System.String,System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Control.TemplateBindings"/> client event.
            Sets the collection of the template bindings.
            </summary>
            <remarks>
            When the control works in template mode, bind the property which name is specified 
            to some item which name is specified.
            </remarks>
            <param name="propertyName">The specified property name.</param>
            <param name="boundName">The specified item name in DataContext.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Width(System.Int32)">
            <summary>
            Sets the width of the control in pixel.
            </summary>
            <param name="width">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Height(System.Int32)">
            <summary>
            Sets the height of the control in pixel.
            </summary>
            <param name="height">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.ToTemplate">
            <summary>
            Transfer to the template mode.
            </summary>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilder`2.Id(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Component.Id"/>.
            Sets the id of the control.
            </summary>
            <param name="id">The id.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputBaseBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputBaseBuilder`2"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputBase"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FormInputBaseBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FormInputBaseBuilder`2"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FormInputBase"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FormInputBaseBuilder`2.Name(System.String)">
            <summary>
            Sets the Name property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.DropDownBuilder`2"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.DropDown"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.Text(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.Text"/>.
            Sets the text shown on the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.Placeholder(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.Placeholder"/>.
            Sets the string shown as a hint when the control is empty.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsDroppedDown(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.IsDroppedDown"/>.
            Sets a value indicating whether the drop down is currently visible.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.ShowDropDownButton(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.ShowDropDownButton"/>.
            Sets a value indicating whether the control should display a drop-down button.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.OnClientTextChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DropDown.OnClientTextChanged"/> client event.
            Occurs when the value of the Text property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.OnClientIsDroppedDownChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DropDown.OnClientIsDroppedDownChanged"/> client event.
            Occurs after the drop down is shown or hidden.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.OnClientIsDroppedDownChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DropDown.OnClientIsDroppedDownChanging"/> client event.
            Occurs before the drop down is shown or hidden.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.AutoExpandSelection(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.AutoExpandSelection"/>.
            Sets a value that indicates whether the control should automatically expand the selection to whole words/numbers when the control is clicked.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.DropDownCssClass(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.DropDownCssClass"/>.
            Sets a CSS class name to add to the control's drop-down element.
            </summary>
            <remarks>
            This property is useful when styling the drop-down element, because it is shown as a child of the document body rather than as a child of the control itself, which prevents using CSS selectors based on the parent control.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsRequired(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.IsRequired"/>.
            Sets a value indicating whether the control value must be a non-empty string.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsAnimated(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.IsAnimated"/>.
            Sets a value that indicates whether the control should use a fade-in animation when displaying the drop-down.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`2.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown.IsReadOnly"/>.
            Sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Palette(System.Drawing.Color[])">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputColor.Palette"/>.
            Sets an array that contains the colors in the palette.
            </summary>
            <remarks>
            The palette contains ten colors, represented by an array with ten strings. 
            The first two colors are usually white and black.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Palette(System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputColor.Palette"/>.
            Sets an array that contains the colors in the palette.
            </summary>
            <remarks>
            The palette contains ten colors, represented by an array with ten strings. 
            The first two colors are usually white and black.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.#ctor(C1.Web.Mvc.InputColor)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputColorBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputColor"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Required(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputColor.Required"/>.
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.ShowAlphaChannel(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputColor.ShowAlphaChannel"/>.
            Sets a value indicating whether the ColorPicker allows users to edit the color's alpha channel (transparency).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.InputColor.OnClientValueChanged"/> client event.
            Occurs after a new color is selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputColorBuilder.Value(System.Nullable{System.Drawing.Color})">
            <summary>
            Sets the current color.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeMap`1">
            <summary>
            It displays hierarchical (tree-structured) data as a set of nested rectangles.
            </summary>
            <remarks>
            Each branch of the tree is given a rectangle, which is then tiled with smaller rectangles representing sub-branches. A leaf node's rectangle has an area proportional to a specified dimension of the data. Often the leaf nodes are colored to show a separate dimension of the data.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.FlexChartBase`1">
            <summary>
            The base class of flex chart.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.IExtendable">
            <summary>
            Defines an interface to make a component extendable.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexChartBase`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartBase`1.ShouldSerializeLegend">
            <summary>
            Specifies whether the Legend property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartBase`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers the startup scripts.
            </summary>
            <param name="writer">the specified writer used to write the startup scripts.</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Palette">
            <summary>
            Gets or sets an array of default colors to use for displaying each series.
            </summary>
            <remarks>
             There is a set of predefined palettes in the <see cref="T:C1.Web.Mvc.Chart.Palettes"/> class that you can use.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Extenders">
            <summary>
            Gets the extender collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Footer">
            <summary>
            Gets or sets the text displayed in the chart footer.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Header">
            <summary>
            Gets or sets the text displayed in the chart header.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.ItemFormatter">
            <summary>
            Gets or sets the name of the item formatter function that allows you to customize the appearance of data points.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Legend">
            <summary>
            Gets the chart legend.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.PlotMargin">
            <summary>
            Gets or sets the plot margin in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.SelectionMode">
            <summary>
            Gets or sets an enumerated value indicating whether or what is selected when the user clicks the chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.OnClientRendered">
            <summary>
            Occurs after the chart finishes rendering.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.OnClientRendering">
            <summary>
            Occurs before the chart starts rendering data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.HeaderStyle">
            <summary>
            Get or set the style of Header element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.FooterStyle">
            <summary>
            Get or set the style of FooterStyle.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.OnClientSelectionChanged">
            <summary>
            Occurs after the selection changes, whether programmatically or when the user clicks the chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartBase`1.Tooltip">
            <summary>
            Gets the chart's tooltip.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.TreeMap`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.TreeMap`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Palette">
            <summary>
            Gets or sets an array of default colors to be used in a tree map.
            </summary>
            <remarks>
            The array contains strings that represent CSS colors.
            The array item type could be <see cref="T:System.Drawing.Color"/> or <see cref="T:C1.Web.Mvc.TreeMapItemStyle"/>.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.SelectionMode">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.OnClientSelectionChanged">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.ItemFormatter">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Binding">
            <summary>
            Gets or sets the name of the property of the data item that contains the chart value.
            </summary>
            <remarks>
            This property is used to calculate the size of the node as compared to other node values. The property should contain numeric data.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.BindingName">
            <summary>
            Gets or sets the name of the property containing name of the data item. It is used to show name of the node.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.ChildItemsPath">
            <summary>
            Gets or sets the name of the property (or properties) used to generate child items in hierarchical data.
            </summary>
            <remarks>
            Set this property to an array containing the names of the properties that contain child items at each level, when the items are child items at different levels with different names (e.g. <code>[ 'Accounts', 'Checks', 'Earnings' ]</code>).
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.DataLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Legend">
            <summary>
            Gets the chart legend.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.MaxDepth">
            <summary>
            Gets or sets the maximum number of node levels to show in the current view.
            </summary>
            <remarks>
            Levels will be flattened into the current plane. If your <see cref="T:C1.Web.Mvc.TreeMap`1"/> has more levels than this, you will have to go up or down to see them.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeMap`1.Type">
            <summary>
            Gets or sets the type of the treemap.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.TreeMap`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexChartBase`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ItemsBoundControl`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.ItemsBoundControl`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.ItemsSourceId(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSourceId"/>.
            Sets the ItemsSourceId specify which CollectionViewService will be used for this control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.Bind(System.Action{C1.Web.Mvc.Fluent.CollectionViewServiceBuilder{`0}})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSource"/>.
            Sets ItemsSource settings.
            </summary>
            <param name="build">An action to build the items source.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSource"/>.
            Sets ItemsSource settings with a collection.
            </summary>
            <param name="value">A collection to specify the source collection.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ItemsBoundControlBuilder`3.Bind(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ItemsBoundControl`1.ItemsSource"/>.
            Sets ItemsSource settings with the specified action url.
            </summary>
            <param name="value">An action url to read the data.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexChartBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Footer(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.Footer"/>.
            Sets the text displayed in the chart footer.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Header(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.Header"/>.
            Sets the text displayed in the chart header.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.ItemFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.ItemFormatter"/>.
            Sets the name of the item formatter function that allows you to customize the appearance of data points.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.PlotMargin(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.PlotMargin"/>.
            Sets the plot margin in pixels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.SelectionMode(C1.Web.Mvc.Chart.SelectionMode)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.SelectionMode"/>.
            Sets an enumerated value indicating whether or what is selected when the user clicks the chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.OnClientRendered(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexChartBase`1.OnClientRendered"/> client event.
            Occurs after the chart finishes rendering.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.OnClientRendering(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexChartBase`1.OnClientRendering"/> client event.
            Occurs before the chart starts rendering data.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.HeaderStyle(System.Action{C1.Web.Mvc.Fluent.TitleStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.HeaderStyle"/>.
            Get or set the style of Header element.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.FooterStyle(System.Action{C1.Web.Mvc.Fluent.TitleStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.FooterStyle"/>.
            Get or set the style of FooterStyle.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.OnClientSelectionChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexChartBase`1.OnClientSelectionChanged"/> client event.
            Occurs after the selection changes, whether programmatically or when the user clicks the chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Tooltip(System.Action{C1.Web.Mvc.Fluent.ChartTooltipBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.Tooltip"/>.
            Sets the chart's tooltip.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Palette(System.Drawing.Color[])">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.Palette"/>.
            Sets an array of default colors to be used in a treemap.
            </summary>
            <remarks>
            The array contains strings that represent CSS colors.
            </remarks>
            <param name="colors">The color array</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Palette(System.Collections.Generic.IEnumerable{System.Drawing.Color})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.Palette"/>.
            Sets an array of default colors to be used in a treemap.
            </summary>
            <remarks>
            The array contains strings that represent CSS colors.
            </remarks>
            <param name="colors">The color collection</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBaseBuilder`3.Legend(C1.Web.Mvc.Chart.Position)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.Legend"/>.
            Sets legend's position.
            </summary>
            <param name="position">The position.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.ChildItemsPath(System.String[])">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.ChildItemsPath"/>.
            Sets the name of the property (or properties) used to generate child items in hierarchical data.
            </summary>
            <remarks>
            Set this property to an array containing the names of the properties that contain child items at each level, when the items are child items at different levels with different names (e.g. <code>[ 'Accounts', 'Checks', 'Earnings' ]</code>).
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.BindingName(System.String[])">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.BindingName"/>.
            Sets the name of the property containing name of the data item. It is used to show name of the node.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Palette(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.TreeMapItemStyle,C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder}})">
            <summary>
            Configure <see cref="P:C1.Web.Mvc.TreeMap`1.Palette"/>.
            Sets an array of default colors to be used in a tree map.
            </summary>
            <param name="builder">The builder action.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Palette(System.Collections.Generic.IEnumerable{System.Drawing.Color})">
            <summary>
            Configure <see cref="P:C1.Web.Mvc.TreeMap`1.Palette"/>.
            Sets an array of default colors to be used in a tree map.
            </summary>
            <remarks>
            The array contains strings that represent CSS colors.
            </remarks>
            <param name="colors">The color collection</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.OnClientSelectionChanged(System.String)">
            <summary>
            Overrides to remove this configuration.
            Configurates the <see cref="P:C1.Web.Mvc.FlexChartBase`1.OnClientSelectionChanged"/> client event.
            Occurs after the selection changes, whether programmatically or when the user clicks the chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.SelectionMode(C1.Web.Mvc.Chart.SelectionMode)">
            <summary>
            Overrides to remove this configuration.
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.SelectionMode"/>.
            Sets an enumerated value indicating whether or what is selected when the user clicks the chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.ItemFormatter(System.String)">
            <summary>
            Overrides to remove this configuration.
            Configurates <see cref="P:C1.Web.Mvc.FlexChartBase`1.ItemFormatter"/>.
            Sets the name of the item formatter function that allows you to customize the appearance of data points.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.#ctor(C1.Web.Mvc.TreeMap{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.TreeMap`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Binding(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.Binding"/>.
            Sets the name of the property of the data item that contains the chart value.
            </summary>
            <remarks>
            This property is used to calculate the size of the node as compared to other node values. The property should contain numeric data.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.DataLabel(System.Action{C1.Web.Mvc.Fluent.DataLabelBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.DataLabel"/>.
            
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.MaxDepth(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.MaxDepth"/>.
            Sets the maximum number of node levels to show in the current view.
            </summary>
            <remarks>
            Levels will be flattened into the current plane. If your <see cref="T:C1.Web.Mvc.TreeMap`1"/> has more levels than this, you will have to go up or down to see them.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapBuilder`1.Type(C1.Web.Mvc.TreeMapType)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMap`1.Type"/>.
            Sets the type of the treemap.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.TreeMapItemStyle"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.#ctor(C1.Web.Mvc.TreeMapItemStyle)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.TreeMapItemStyle"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.TreeMapItemStyle"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.TitleColor(System.Drawing.Color)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMapItemStyle.TitleColor"/>.
            Sets the title color.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.MaxColor(System.Drawing.Color)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMapItemStyle.MaxColor"/>.
            Sets the color of the max value.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeMapItemStyleBuilder.MinColor(System.Drawing.Color)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeMapItemStyle.MinColor"/>.
            Sets the color of the min value.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.MultiAutoComplete`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.AutoCompleteBase`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ComboBoxBase`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DropDownBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.DropDown`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.DropDownBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.DropDown`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.Text(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.Text"/>.
            Sets the text shown on the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.Placeholder(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.Placeholder"/>.
            Sets the string shown as a hint when the control is empty.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsDroppedDown(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.IsDroppedDown"/>.
            Sets a value indicating whether the drop down is currently visible.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.ShowDropDownButton(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.ShowDropDownButton"/>.
            Sets a value indicating whether the control should display a drop-down button.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.OnClientTextChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DropDown`1.OnClientTextChanged"/> client event.
            Occurs when the value of the Text property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.OnClientIsDroppedDownChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DropDown`1.OnClientIsDroppedDownChanged"/> client event.
            Occurs after the drop down is shown or hidden.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.OnClientIsDroppedDownChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DropDown`1.OnClientIsDroppedDownChanging"/> client event.
            Occurs before the drop down is shown or hidden.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.AutoExpandSelection(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.AutoExpandSelection"/>.
            Sets a value that indicates whether the control should automatically expand the selection to whole words/numbers when the control is clicked.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.DropDownCssClass(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.DropDownCssClass"/>.
            Sets a CSS class name to add to the control's drop-down element. 
            </summary>
            <remarks>
            This property is useful when styling the drop-down element, because it is shown as a child of the document body rather than as a child of the control itself, which prevents using CSS selectors based on the parent control.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.IsReadOnly"/>.
            Sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsRequired(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.IsRequired"/>.
            Sets a value indicating whether the control value must be a non-empty string.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DropDownBuilder`3.IsAnimated(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DropDown`1.IsAnimated"/>.
            Sets a value that indicates whether the control should use a fade-in animation when displaying the drop-down.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.ComboBoxBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.DisplayMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.DisplayMemberPath"/>.
            Sets the name of the property to use as the visual representation of the items.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedValuePath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.SelectedValuePath"/>.
            Sets the name of the property used to get the SelectedValue from the SelectedItem.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.IsContentHtml(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.IsContentHtml"/>.
            Sets a value indicating whether the drop-down list displays items as plain text or as HTML.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.ItemFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.ItemFormatter"/>.
            Sets a function used to customize the values shown in the drop-down list.
            </summary>
            <remarks>
            The function takes two arguments, the item index and the default text or html, and returns the new text or html to display.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedIndex(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.SelectedIndex"/>.
            Sets the index of the currently selected item in the drop-down list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedItem(`0)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.SelectedItem"/>.
            Sets the item that is currently selected in the drop-down list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.SelectedValue(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.SelectedValue"/>.
            Sets the value of the SelectedItem, obtained using the SelectedValuePath.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.IsEditable(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.IsEditable"/>.
            Sets a value that enables or disables editing of the text in the input element of the ComboBox (defaults to false).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.MaxDropDownHeight(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.MaxDropDownHeight"/>.
            Sets the maximum height of the drop-down list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.MaxDropDownWidth(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.MaxDropDownWidth"/>.
            Sets the maximum width of the drop-down list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.ItemTemplateId(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.ItemTemplateId"/>.
            Sets the id of the template used to generate each list item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.OnClientSelectedIndexChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ComboBoxBase`1.OnClientSelectedIndexChanged"/> client event.
            Occurs when the value of the SelectedIndex property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.ItemTemplateContent(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.ItemTemplateContent"/>.
            Sets the content of the template used to generate each list item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.HeaderPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.HeaderPath"/>.
            Sets the name of a property to use for getting the value displayed in the control's input element.
            </summary>
            <remarks>
            The default value for this property is null, which causes the control to display the same content in the input element as in the selected item of the drop-down list. Use this property if you want to de-couple the value shown in the input element from the values shown in the drop-down list. For example, the input element could show an item's name and the drop-down list could show additional detail.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.IsRequired(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.IsRequired"/>.
            Sets a value that determines whether the control value must be set to a non-null value or whether it can be set to null (by deleting the content of the control).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.Required(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ComboBoxBase`1.Required"/>.
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBaseBuilder`3.OnClientFormatItem(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ComboBoxBase`1.OnClientFormatItem"/> client event.
            Event that fires when items in the drop-down list are created.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.AutoCompleteBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.MinLength(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.MinLength"/>.
            Sets the minimum input length to trigger autocomplete suggestions.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.MaxItems(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.MaxItems"/>.
            Sets the maximum number of items to display in the drop-down list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.Delay(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.Delay"/>.
            Sets the delay, in milliseconds, between when a keystroke occurs and when the search is performed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.CssMatch(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.CssMatch"/>.
            Sets the name of the CSS class used to highlight any parts of the content that match the search terms.
            </summary>
            <remarks>
            By default, this property is set to null, which causes the matching terms to be shown in bold. You can set it to the name of a CSS class to change the way the matches are displayed.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.ItemsSourceFunction(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.ItemsSourceFunction"/>.
            Sets a function that provides list items dynamically as the user types.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.ItemsSourceAction(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.ItemsSourceAction"/>.
            Sets the action name for data.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.SearchMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.SearchMemberPath"/>.
            Sets a string containing a comma-separated list of properties to use when searching for items.
            </summary>
            <remarks>
            By default, the AutoComplete control searches for matches against the property specified by the DisplayMemberPath property. The searchMemberPath property allows you to search using additional properties.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBaseBuilder`3.Name(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AutoCompleteBase`1.Name"/>.
            Sets the name of the control element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedIndexes(System.Int32[])">
            <summary>
            Sets the SelectedIndexes property.
            </summary>
            <remarks>
            Gets or sets a list containing the indexes of the items that are currently selected.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedIndex(System.Int32)">
            <summary>
            Overrides to hide this method.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedItem(`0)">
            <summary>
            Overrides to hide this method.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedValue(System.Object)">
            <summary>
            Overrides to hide this method.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.OnClientSelectedIndexChanged(System.String)">
            <summary>
            Overrides to hide this method.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.#ctor(C1.Web.Mvc.MultiAutoComplete{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.MultiAutoComplete`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.MaxSelectedItems(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiAutoComplete`1.MaxSelectedItems"/>.
            Sets the maximum number of items that can be selected.
            </summary>
            <remarks>
            Setting this property to null (the default value) allows users to pick any number of items.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedMemberPath"/>.
            Sets the name of the property used to control which item will be selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.OnClientSelectedItemsChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.MultiAutoComplete`1.OnClientSelectedItemsChanged"/> client event.
            Occurs when the value of the selectedItems property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.SelectedValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedValues"/>.
            Sets an object array containing the item-values that are currently selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1.ShowDropDownButton(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiAutoComplete`1.ShowDropDownButton"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Extender">
            <summary>
            Defines the base class for C1 MVC extenders.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.IExtender">
            <summary>
            Defines the interface of extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Extender.#ctor(C1.Web.Mvc.Component)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Extender"/> instance.
            </summary>
            <param name="target">The specified component which the extender is applied on.</param>
        </member>
        <member name="M:C1.Web.Mvc.Extender.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the extender result to the writer.
            </summary>
            <param name="writer">The specified writer used to render.</param>
        </member>
        <member name="M:C1.Web.Mvc.Extender.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the extender instance to the writer.
            </summary>
            <param name="writer">the specified writer.</param>
        </member>
        <member name="M:C1.Web.Mvc.Extender.GetTargetInstance">
            <summary>
            Gets the target instance in client.
            </summary>
            <returns>A string indicates the target instance.</returns>
        </member>
        <member name="P:C1.Web.Mvc.Extender.UniqueId">
            <summary>
            Overrides to remove this attribute.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TemplateBindings">
            <summary>
            Represents the template bindings.
            </summary>
            <remarks>
            When creating an instance of this type, the control should be passed. The control owns an instance of <see cref="T:C1.Web.Mvc.TemplateBindings"/>.
            And it should NOT be null.Otherwise, an exception of <see cref="T:System.ArgumentNullException"/> would be thrown.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TemplateBindings.Control">
            <summary>
            Gets the control which owns an instance of <see cref="T:C1.Web.Mvc.TemplateBindings"/>
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartAnimation`1">
            <summary>
            Define an extender to provide built-in animation while loading and updating the chart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartAnimation`1.#ctor(C1.Web.Mvc.FlexChartBase{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ChartAnimation`1"/> instance.
            </summary>
            <param name="target">Target chart which derived from FlexChartBase</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.AnimationMode">
            <summary>
            Gets or sets whether the plot points animate one at a time, series by series, or all at once. The whole animation is still completed within the duration.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.AxisAnimation">
            <summary>
            Gets or sets a value indicating whether animation is applied to the axis.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.Duration">
            <summary>
            Gets or sets the length of entire animation in milliseconds.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAnimation`1.Easing">
            <summary>
            Gets or sets the easing function applied to the animation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.IAnimatable">
            <summary>
            Indicates that the control supports the animation extender.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationLayer`1">
            <summary>
            Define an extender to set the annotation layer for FlexChart and FinancialChart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationLayer`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.AnnotationLayer`1"/> instance.
            </summary>
            <param name="target">A <see cref="T:C1.Web.Mvc.FlexChartCore`1"/> which owns this annotation layer.</param>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationLayer`1.SerializeItems">
            <summary>
            Serializes the AnnotationLayer items to a Json string.
            </summary>
            <returns>A JSON string representation of the items.</returns>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationLayer`1.Items">
            <summary>
            Gets the collection of annotation elements in the AnnotationLayer.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Shape">
            <summary>
            Represents a base class of shape annotations for the AnnotationLayer.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationBase">
            <summary>
            Represents the base class of annotations for the AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationBase.ShouldSerializePosition">
            <summary>
            Specifies whether the Position property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationBase.ShouldSerializeStyle">
            <summary>
            Specifies whether the Style property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.AnnotationBase.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.AnnotationBase"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Attachment">
            <summary>
            Gets or sets the attachment of the annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.IsVisible">
            <summary>
            Gets or sets the visibility of the annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Name">
            <summary>
            Gets or sets the name of the annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Offset">
            <summary>
            Gets or sets the offset of the annotation from the point.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Point">
            <summary>
            Gets or sets the point of the annotation.
            </summary>
            <remarks>
            The coordinates of points depends on the Attachment property. See AnnotationAttachment for further description.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.PointIndex">
            <summary>
            Gets or sets the data point index of the annotation.
            </summary>
            <remarks>
            Applies only when the Attachment property is set to DataIndex.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Position">
            <summary>
            Gets or sets the position of the annotation. 
            </summary>
            <remarks>
            The position is relative to the point.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.SeriesIndex">
            <summary>
            Gets or sets the data series index of the annotation.
            </summary>
            <remarks>
            Applies only when the Attachment property is set to DataIndex.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Style">
            <summary>
            Gets or sets the style of the annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Tooltip">
            <summary>
            Gets or sets the tooltip of the annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AnnotationBase.Type">
            <summary>
            Gets the Annotation type, use for json serialization.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Shape.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Shape"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Shape.Content">
            <summary>
            Gets or sets the text of the annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartGestures`1">
            <summary>
            Define an extender to allow the user to zoom or pan on the specified FlexChart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartGestures`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ChartGestures`1"/> instance.
            </summary>
            <param name="target">A <see cref="T:C1.Web.Mvc.FlexChartCore`1"/> which owns this chart gestures.</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.Enable">
            <summary>
            Gets or sets the enable of the ChartGestures.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.InteractiveAxes">
            <summary>
            Gets or sets the interactive axes of the ChartGestures.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.MouseAction">
            <summary>
            Gets or sets the mouse action of the ChartGestures.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.PosX">
            <summary>
            Gets or sets the initial position of the axis X. 
            </summary>
            <remarks>
            The value represents initial position on the axis when the Scale is less than 1. Otherwise, the Value has no effect. The Value should lie between 0 to 1.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.PosY">
            <summary>
            Gets or sets the initial position of the axis Y. 
            </summary>
            <remarks>
            The value represents initial position on the axis when the Scale is less than 1. Otherwise, the Value has no effect. The Value should lie between 0 to 1.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.ScaleX">
            <summary>
            Gets or sets the initial scale of axis X.
            </summary>
            <remarks>
            The scale should be more than 0 and less than or equal to 1. The scale specifies which part of the range between Min and Max is shown. When scale is 1 (default value), the whole axis range is visible.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartGestures`1.ScaleY">
            <summary>
            Gets or sets the initial scale of axis Y. 
            </summary>
            <remarks>
            The scale should be more than 0 and less than or equal to 1. The scale specifies which part of the range between Min and Max is shown. When scale is 1 (default value), the whole axis range is visible.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.TreeMapItemStyle">
            <summary>
            Defines the colors used for an item in <see cref="T:C1.Web.Mvc.TreeMap`1"/>.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapItemStyle.TitleColor">
            <summary>
            Gets or sets the title color.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapItemStyle.MaxColor">
            <summary>
            Gets or sets the color of the max value.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapItemStyle.MinColor">
            <summary>
            Gets or sets the color of the min value.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeMapLegend">
            <summary>
            Defines a lengend class for TreeMap as it has different default value.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartLegend">
            <summary>
            Represents the chart legend.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartLegend.Position">
            <summary>
            Gets or sets the enumerated value that determines whether and where the legend appears in relation to the chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeMapLegend.Position">
            <summary>
            Gets or sets the enumerated value that determines whether and where the legend appears in relation to the chart.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeMapType">
            <summary>
            Specifies the tree map type.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.TreeMapType.Squarified">
            <summary>
            Shows squarified tree map.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.TreeMapType.Horizontal">
            <summary>
            Shows horizontal squarified tree map.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.TreeMapType.Vertical">
            <summary>
            Shows vertical squarified tree map.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.LineMarker`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.LineMarker`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.LineMarker`1"/> instance.
            </summary>
            <param name="target">A <see cref="T:C1.Web.Mvc.FlexChartCore`1"/> which owns this line marker.</param>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.IsVisible">
            <summary>
            Gets or sets the visibility of the LineMarker.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.SeriesIndex">
            <summary>
            Gets or sets the index of the series in the chart in which the LineMarker appears.
            </summary>
            <remarks>
            This only takes effect when the @see:Interaction property is set to Chart.LineMarkerInteraction.Move.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.HorizontalPosition">
            <summary>
            Gets or sets the horizontal position of the LineMarker relative to the plot area. 
            </summary>
            <remarks>
            Its value range is (0, 1). If the value is null or undefined and @see:Interaction is set to Chart.LineMarkerInteraction.Move, the horizontal position of the marker is calculated automatically based on the pointer's position.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Content">
            <summary>
            Gets or sets the content function that allows to customize the text content of the LineMarker.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.VerticalPosition">
            <summary>
            Gets or sets the vertical position of the LineMarker relative to the plot area. 
            </summary>
            <remarks>
            Its value range is (0, 1). If the value is null or undefined and @see:Interaction is set to Chart.LineMarkerInteraction.Move, the vertical position of the LineMarker is calculated automatically based on the pointer's position.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Alignment">
            <summary>
            Gets or sets the alignment of the LineMarker content.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Lines">
            <summary>
            Gets or sets the visibility of the LineMarker lines.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.Interaction">
            <summary>
            Gets or sets the interaction mode of the LineMarker.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.OnClientPositionChanged">
            <summary>
            Occurs after the LineMarker's position changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.DragThreshold">
            <summary>
            Gets or sets the maximum distance from the horizontal or vertical line that the marker can be dragged.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.DragContent">
            <summary>
            Gets or sets a value indicating whether the content of the marker is draggable when the interaction mode is "Drag."
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.LineMarker`1.DragLines">
            <summary>
            Gets or sets a value indicating whether the lines are linked when the horizontal or vertical line is dragged when the interaction mode is "Drag."
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.RangeSelector`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.RangeSelector`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.RangeSelector`1"/> instance.
            </summary>
            <param name="target">A <see cref="T:C1.Web.Mvc.FlexChartCore`1"/> which owns this range selector.</param>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.IsVisible">
            <summary>
            Gets or sets the visibility of the range selector.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Min">
            <summary>
            Gets or sets the minimum value of the range.
            </summary>
            <remarks>
            If not set, the minimum is calculated automatically.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Max">
            <summary>
            Gets or sets the maximum value of the range.
            </summary>
            <remarks>
            If not set, the maximum is calculated automatically.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Orientation">
            <summary>
            Gets or sets the orientation of the range selector.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.OnClientRangeChanged">
            <summary>
            Occurs after the range changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.Seamless">
            <summary>
            Gets or sets whether the minimal and maximal handler will move seamlessly.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.MinScale">
            <summary>
            Gets or sets the minimum range scale of the range selector. 
            </summary>
            <remarks>
            The minimum scale is between 0 and 1.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.RangeSelector`1.MaxScale">
            <summary>
            Gets or sets the maximum range scale of the range selector. 
            </summary>
            <remarks>
            The maximum scale is between 0 and 1.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.FlexChartCore`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexChartCore`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.ShouldSerializeAxisX">
            <summary>
            Specifies whether the AxisX property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.ShouldSerializeAxisY">
            <summary>
            Specifies whether the AxisY property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexChartCore`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers the startup scripts.
            </summary>
            <param name="writer">the specified writer used to write the startup scripts.</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.AxisX">
            <summary>
            Gets the main X axis.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.AxisY">
            <summary>
            Gets the main Y axis.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.BindingX">
            <summary>
            Gets or sets the name of the property that contains the X data values.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.SymbolSize">
            <summary>
            Gets or sets the size of the symbols used for all Series objects. This property may be overridden by the symbolSize property on each series. (see Series class)
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.InterpolateNulls">
            <summary>
            Gets or sets whether to interpolate null values in the data.  If true, the chart interpolates the value of any missing data based on neighboring points. If false, it leaves a break in lines and areas at the points with null values.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.LegendToggle">
            <summary>
            Gets or sets a value indicating whether clicking legend items toggles the series visibility in the chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.Series">
            <summary>
            Gets the collection of series objects. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.OnClientSeriesVisibilityChanged">
            <summary>
            Occurs when the series visibility changes
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.DataLabel">
            <summary>
            Get or set the style of point data label
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.SelectionIndex">
            <summary>
            Gets or sets the index of selected chart series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.PlotAreas">
            <summary>
            Gets the collection of plotarea objects. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChartCore`1.Binding">
            <summary>
            Gets or sets the name of the property that contains the Y values.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewService`1">
            <summary>
            The control for processing CollectionView.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Service">
            <summary>
            Defines the base class for C1 MVC services.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Service.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Service"/> instance.
            </summary>
            <param name="helper">The html helper.</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the service result to the writer.
            </summary>
            <param name="writer">The specified writer used to render.</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers the start-up script.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.RenderClientService(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the client service to the specified writer.
            </summary>
            <param name="writer">The specified writer</param>
        </member>
        <member name="M:C1.Web.Mvc.Service.RegisterClientService(System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers the client service via the specified writer.
            </summary>
            <param name="writer">The specified writer</param>
            <remarks>
            If the key specified by keyName exists, it will not be registered.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Service.TemplateBindings">
            <summary>
            Gets the collection of the template bindings.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Service.IsTemplate">
            <summary>
            Gets or sets a boolean value which indicates whether transfer this <see cref="T:C1.Web.Mvc.CollectionViewService`1"/> to template mode.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.IItemsSource`1">
            <summary>
            The interface of items source.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.ReadActionUrl">
            <summary>
            Gets and sets the url of read action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.CreateActionUrl">
            <summary>
            Gets and sets the url of create action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.UpdateActionUrl">
            <summary>
            Gets and sets the url of update action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.DeleteActionUrl">
            <summary>
            Gets and sets the url of delete action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.BatchEditActionUrl">
            <summary>
            Gets and sets the url of batch edit action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.PageIndex">
            <summary>
            Gets or sets the page index.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.PageSize">
            <summary>
            Gets or sets the page size. When page size is 0, paging is disabled.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.SourceCollection">
            <summary>
            Gets or sets the source collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.SortDescriptions">
            <summary>
            Gets the sort description collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.GroupDescriptions">
            <summary>
            Gets the group description collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.Filter">
            <summary>
            Gets or sets a method used to determine if an item is suitable for inclusion in the view.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.DisableServerRead">
            <summary>
            Gets or sets whether to disable server-side reading.
            </summary>
            <remarks>When it is set to True, all data will be transfered to the client. 
            Otherwise, only part of data will be transfered.</remarks>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.BatchEdit">
            <summary>
            Gets or sets whether modifications will be sent to the server in batches or as individually requests.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.InitialItemsCount">
            <summary>
            Gets or sets a number value which decides the count of the initial loaded items. 
            </summary>
            <remarks>
            It only works when the DisableServerRead property is false and no paging mode.
            It only accepts a number which equals or greater than 0 or null.
            When it is set to null, that means all the items would be loaded in the client.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.GetError">
            <summary>
            Gets or sets a callback that determines whether a specific property of an item contains validation errors.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.NewItemCreator">
            <summary>
            Gets or sets a function that creates new items for the collection.
            </summary>
            <remarks>
            If the creator function is not supplied, try to create an uninitialized item of the appropriate type.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCurrentChanged">
            <summary>
            Occurs after the current item changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCurrentChanging">
            <summary>
            Occurs before the current item changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientPageChanged">
            <summary>
            Occurs after the page index changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientPageChanging">
            <summary>
            Occurs before the page index changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientSourceCollectionChanging">
            <summary>
            Occurs before the sourceCollection property in client changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientSourceCollectionChanged">
            <summary>
            Occurs after the sourceCollection property in client changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientCollectingQueryData">
            <summary>
            Gets or sets the name JavaScript function which to collect the ajax query data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientQueryData">
            <summary>
            Gets or sets the name JavaScript function which to collect the ajax query data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientQueryComplete">
            <summary>
            Occurs when the query requests complete.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IItemsSource`1.OnClientError">
            <summary>
            Occurs when there are errors from the server side.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ICallbackHandler">
            <summary>
            Defines an interface used to process the callback request.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ICallbackHandler.ProcessCallBack(C1.Web.Mvc.CallbackManager)">
            <summary>
            Handles the callback.
            </summary>
            <remarks>
            Only when the current request is callback and it is raised by itself, this method will be called.
            </remarks>
            <param name="cbm">the callback information</param>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.ShouldSerializeSourceCollection">
            <summary>
            Specifies whether the SourceCollection property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.ShouldSerializeItems">
            <summary>
            Specifies whether the Items property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Refresh">
            <summary>
            Forces to read data.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Create(`0)">
            <summary>
            Adds a new item.
            </summary>
            <param name="item">The item to be added.</param>
            <returns>A <see cref="T:C1.Web.Mvc.CollectionViewItemResult`1"/> indicates the result for the add operation.</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Delete(`0)">
            <summary>
            Deletes an item.
            </summary>
            <param name="item">The item to be deleted.</param>
            <returns>A <see cref="T:C1.Web.Mvc.CollectionViewItemResult`1"/> indicates the result for the delete operation.</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.Update(`0)">
            <summary>
            Updates an item.
            </summary>
            <param name="item">The item to be updated.</param>
            <returns>A <see cref="T:C1.Web.Mvc.CollectionViewItemResult`1"/> indicates the result for the update operation.</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.ProcessCallBack(C1.Web.Mvc.CallbackManager)">
            <summary>
            Process the callback request from client side.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.RenderClientService(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the client service to the specified writer.
            </summary>
            <param name="writer">The specified writer</param>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.RenderScripts(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            Renders the scripts.
            </summary>
            <param name="writer">The writer.</param>
            <param name="renderScriptTag">A boolean value indicats whether to render the script tag.</param>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewService`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers the start-up script.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.ReadActionUrl">
            <summary>
            Gets and sets the url of read action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.CreateActionUrl">
            <summary>
            Gets and sets the url of create action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.UpdateActionUrl">
            <summary>
            Gets and sets the url of update action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.DeleteActionUrl">
            <summary>
            Gets and sets the url of delete action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.DisableServerRead">
            <summary>
            Gets or sets whether to disable server-side sorting, paging and filtering.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.PageIndex">
            <summary>
            Gets or sets the page index.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.PageSize">
            <summary>
            Gets or sets the page size. 0 means to disable paging.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.TotalItemCount">
            <summary>
            Gets the total item count before applying paging.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.SourceCollection">
            <summary>
            Gets or sets the source collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.SortDescriptions">
            <summary>
            Gets the sort descriptions.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.GroupDescriptions">
            <summary>
            Gets the group descriptions.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.Items">
            <summary>
            Gets the items after applying sorting, paging and filtering.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.Filter">
            <summary>
            Gets or sets a method used to determine if an item is suitable for inclusion in the view.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.BatchEditActionUrl">
            <summary>
            Gets or sets the url of batch edit action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.InitialItemsCount">
            <summary>
            Gets or sets a number value which decides the count of the initial loaded items. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.BatchEdit">
            <summary>
            Gets or sets a bool value indicates whether to edit the batch data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientCollectingQueryData">
            <summary>
            Gets or sets the name JavaScript function which to collect the ajax query data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientQueryData">
            <summary>
            Gets or sets the name JavaScript function which to collect the ajax query data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientQueryComplete">
            <summary>
            Occurs when the query requests complete.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.GetError">
            <summary>
            Gets or sets a callback that determines whether a specific property of an item contains validation errors.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientCollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientCurrentChanged">
            <summary>
            Occurs after the current item changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientCurrentChanging">
            <summary>
            Occurs before the current item changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientPageChanged">
            <summary>
            Occurs after the page index changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientPageChanging">
            <summary>
            Occurs before the page index changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientSourceCollectionChanging">
            <summary>
            Occurs before the sourceCollection property in client changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientSourceCollectionChanged">
            <summary>
            Occurs after the sourceCollection property in client changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.NewItemCreator">
            <summary>
            Gets or sets a function that creates new items for the collection.
            </summary>
            <remarks>
            If the creator function is not supplied, try to create an uninitialized item of the appropriate type.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientError">
            <summary>
            Occurs when there are errors from the server side.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientReponseTextParsing">
            <summary>
            Occurs when parsing the response text.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.OnClientRequestDataStringifying">
            <summary>
            Occurs when serializing the request data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewService`1.UniqueId">
            <summary>
            Gets a value which represents the unique id for the control.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.GroupDescription">
            <summary>
            Represents a base class for types defining grouping conditions.
            </summary>
            <summary>
            Represents a base class for types defining grouping conditions.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.GroupDescription.ClientClass">
            <summary>
            Gets the client-side object's class name.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.AutoComplete`1">
            <summary>
            The AutoComplete control is an input control that allows callers to customize the item list as the user types.
            </summary>
            <remarks>
            The control is similar to the ComboBox, except the item source is a function (ItemsSourceFunction) rather than a static list. For example, you can look up items on remote databases as the user types.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.AutoCompleteBase`1">
            <summary>
            The base class for AutoComplete and MultiAutoComplete.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ComboBoxBase`1">
            <summary>
            The ComboBox control allows users to pick strings from lists. The control automatically completes entries as the user types, and allows users to show a drop-down list with the items available.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DropDown`1">
            <summary>
            DropDown control (abstract) contains an input element and a button used to show or hide the drop-down.
            </summary>
            <remarks>
            Derived classes must override the _createDropDown method to create whatever editor they want to show in the drop down area (a list of items, a calendar, a color editor, etc).
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.IDropDown">
            <summary>
            Defines an interface for DropDown.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.AutoExpandSelection">
            <summary>
            Gets or sets a value that indicates whether the control should automatically expand
            the selection to whole words/numbers when the control is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.DropDownCssClass">
            <summary>
            Gets or sets a CSS class name to add to the control's drop-down element.
            </summary>
            <remarks>
            This property is useful when styling the drop-down element, because it is
            shown as a child of the document body rather than as a child of the control
            itself, which prevents using CSS selectors based on the parent control.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsAnimated">
            <summary>
            Gets or sets a value that indicates whether the control should use a fade-in animation
            when displaying the drop-down.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsDroppedDown">
            <summary>
            Gets or sets a value indicating whether the drop down is currently visible.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can modify
            the control value using the mouse and keyboard.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.IsRequired">
            <summary>
            Gets or sets a value indicating whether the control value must be a non-empty string.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.Placeholder">
            <summary>
            Gets or sets the string shown as a hint when the control is empty.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.ShowDropDownButton">
            <summary>
            Gets or sets a value indicating whether the control should display a drop-down button.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.Text">
            <summary>
            Gets or sets the text shown on the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.OnClientIsDroppedDownChanging">
            <summary>
            Occurs before the drop down is shown or hidden.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.OnClientIsDroppedDownChanged">
            <summary>
            Occurs after the drop down is shown or hidden.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.IDropDown.OnClientTextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DropDown`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.DropDown`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.Text">
            <summary>
            Gets or sets the text shown on the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.Placeholder">
            <summary>
            Gets or sets the string shown as a hint when the control is empty.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsDroppedDown">
            <summary>
            Gets or sets a value indicating whether the drop down is currently visible.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.ShowDropDownButton">
            <summary>
            Gets or sets a value indicating whether the control should display a drop-down button.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.OnClientTextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.OnClientIsDroppedDownChanged">
            <summary>
            Occurs after the drop down is shown or hidden.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.OnClientIsDroppedDownChanging">
            <summary>
            Occurs before the drop down is shown or hidden.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.AutoExpandSelection">
            <summary>
            Gets or sets a value that indicates whether the control should automatically expand the selection to whole words/numbers when the control is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.DropDownCssClass">
            <summary>
            Gets or sets a CSS class name to add to the control's drop-down element. 
            </summary>
            <remarks>
            This property is useful when styling the drop-down element, because it is shown as a child of the document body rather than as a child of the control itself, which prevents using CSS selectors based on the parent control.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsRequired">
            <summary>
            Gets or sets a value indicating whether the control value must be a non-empty string.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown`1.IsAnimated">
            <summary>
            Gets or sets a value that indicates whether the control should use a fade-in animation when displaying the drop-down.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ComboBoxBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ComboBoxBase`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.ComboBoxBase`1.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the control or the callback result to the writer.
            </summary>
            <param name="writer">The Html writer.</param>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.DisplayMemberPath">
            <summary>
            Gets or sets the name of the property to use as the visual representation of the items.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedValuePath">
            <summary>
            Gets or sets the name of the property used to get the SelectedValue from the SelectedItem.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.IsContentHtml">
            <summary>
            Gets or sets a value indicating whether the drop-down list displays items as plain text or as HTML.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ItemFormatter">
            <summary>
            Gets or sets a function used to customize the values shown in the drop-down list.
            </summary>
            <remarks>
            The function takes two arguments, the item index and the default text or html, and returns the new text or html to display.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected item in the drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedItem">
            <summary>
            Gets or sets the item that is currently selected in the drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.SelectedValue">
            <summary>
            Gets or sets the value of the SelectedItem, obtained using the SelectedValuePath.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.IsEditable">
            <summary>
            Gets or sets a value that enables or disables editing of the text in the input element of the ComboBox (defaults to false).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height of the drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.MaxDropDownWidth">
            <summary>
            Gets or sets the maximum width of the drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ItemTemplateId">
            <summary>
            Gets or sets the id of the template used to generate each list item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.OnClientSelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ItemTemplateContent">
            <summary>
            Gets or sets the content of the template used to generate each list item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.HeaderPath">
            <summary>
            Gets or sets the name of a property to use for getting the value displayed in the control's input element.
            </summary>
            <remarks>
            The default value for this property is null, which causes the control to display the same content in the input element as in the selected item of the drop-down list. Use this property if you want to de-couple the value shown in the input element from the values shown in the drop-down list. For example, the input element could show an item's name and the drop-down list could show additional detail.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.IsRequired">
            <summary>
            Gets or sets a value that determines whether the control value must be set to a non-null value or whether it can be set to null (by deleting the content of the control).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.Required">
            <summary>
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.ValidationAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ComboBoxBase`1.OnClientFormatItem">
            <summary>
            Event that fires when items in the drop-down list are created.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoCompleteBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.AutoCompleteBase`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.MinLength">
            <summary>
            Gets or sets the minimum input length to trigger autocomplete suggestions.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.MaxItems">
            <summary>
            Gets or sets the maximum number of items to display in the drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.Delay">
            <summary>
            Gets or sets the delay, in milliseconds, between when a keystroke occurs and when the search is performed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.CssMatch">
            <summary>
            Gets or sets the name of the CSS class used to highlight any parts of the content that match the search terms.
            </summary>
            <remarks>
            By default, this property is set to null, which causes the matching terms to be shown in bold. You can set it to the name of a CSS class to change the way the matches are displayed.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.ItemsSourceFunction">
            <summary>
            Gets or sets a function that provides list items dynamically as the user types.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.ItemsSourceAction">
            <summary>
            Gets or sets the action name for data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.SearchMemberPath">
            <summary>
            Gets or sets a string containing a comma-separated list of properties to use when searching for items.
            </summary>
            <remarks>
            By default, the AutoComplete control searches for matches against the property specified by the DisplayMemberPath property. The searchMemberPath property allows you to search using additional properties.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.IsContentHtml">
            <summary>
            Gets or sets a value indicating whether the drop-down list displays items as plain text or as HTML.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.IsEditable">
            <summary>
            Gets or sets a value that enables or disables editing of the text in the input element of the control (defaults to true).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.IsRequired">
            <summary>
            Gets or sets a value that determines whether the control value must be set to a non-null value or whether it can be set to null (by deleting the content of the control).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.AutoCompleteBase`1.Name">
            <summary>
            Gets or sets the name of the control element.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.AutoComplete`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.AutoComplete`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="T:C1.Web.Mvc.BulletGraph">
            <summary>
            The BulletGraph is a type of linear gauge designed specifically for use
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.LinearGaugeBase">
            <summary>
            The LinearGauge displays a linear scale with an indicator
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Gauge">
            <summary>
            Base Gauge control.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Gauge.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Gauge"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Face">
            <summary>
            Gets the Range used to represent the gauge's overall geometry and appearance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Pointer">
            <summary>
            Gets the Range used to represent the gauge's current value.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ShowText">
            <summary>
            Gets or sets which values should be displayed as text in the gauge.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ShowRanges">
            <summary>
            Gets or sets whether the gauge should display the ranges contained in the ranges property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.HasShadow">
            <summary>
            Gets or sets whether the gauge should display a shadow effect.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.IsAnimated">
            <summary>
            Gets or sets whether the gauge should animate value changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Step">
            <summary>
            Gets or sets the amount to add or subtract to the value property when the user presses the arrow keys.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Thickness">
            <summary>
            Gets or sets the thickness of the gauge, on a scale between zero and one.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Value">
            <summary>
            Gets or sets the value displayed on the gauge.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.OnClientValueChanged">
            <summary>
            Occurs when the value shown on the gauge changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Format">
            <summary>
            Gets or sets the format string used for displaying the gauge values as text.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.IsReadOnly">
            <summary>
            Gets or whether the user can edit the value using the mouse and the keyboard.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Min">
            <summary>
            Gets or sets the minimum value that can be displayed on the gauge.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Max">
            <summary>
            Gets or sets the maximum value that can be displayed on the gauge.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Ranges">
            <summary>
            Gets the collection of ranges in this gauge.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.Origin">
            <summary>
            Gets or sets the starting point used for painting the range.
            </summary>
            <remarks>
            By default, this property is set to null, which causes the value range to start at the gauge's minimum value, or zero if the minimum is less than zero.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ThumbSize">
            <summary>
            Gets or sets the size of the element that shows the gauge's current value, in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.ShowTicks">
            <summary>
            Gets or sets a property that determines whether the gauge should display tick marks at each step value.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.GetText">
            <summary>
            Gets or sets a callback that returns customized strings used to display gauge values.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Gauge.TickSpacing">
            <summary>
            Gets or sets the spacing between tickmarks.
            </summary>
            <remarks>
            Set the ShowTicks property to true if you want the gauge to show tickmarks along its face. By default, the interval between tickmarks is defined by the Step property.  Use the TickSpacing property to override the default and use a spacing that is different from the Step value. Set the TickSpacing property to null to revert to the default behavior.
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.LinearGaugeBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.LinearGaugeBase"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.LinearGaugeBase.Direction">
            <summary>
            Gets or sets the direction in which the gauge is filled.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.BulletGraph.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.BulletGraph"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.BulletGraph.Bad">
            <summary>
            Gets or sets a reference value considered bad for the measure.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BulletGraph.Good">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BulletGraph.Target">
            <summary>
            Gets or sets the target value for the measure.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Calendar">
            <summary>
            The Calendar control displays a one-month calendar and allows users to select a date.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.InputBase">
            <summary>
            The base class for all input controls.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputBase"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.Calendar.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Calendar"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.Value">
            <summary>
            Gets or sets the currently selected date.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.Min">
            <summary>
            Gets or sets the earliest date that the user can select in the calendar.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.Max">
            <summary>
            Gets or sets the latest date that the user can select in the calendar.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FirstDayOfWeek">
            <summary>
            Gets or sets a value that represents the first day of the week, the one displayed in the first column of the calendar.
            </summary>
            <remarks>
            Setting this property to null causes the calendar to use the default for the current culture. In the English culture, the first day of the week is Sunday; in most European cultures, the first day of the week is Monday.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.DisplayMonth">
            <summary>
            Gets or sets the month displayed in the calendar.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ShowHeader">
            <summary>
            Gets or sets a value indicating whether the control displays the header area with the current month and navigation buttons.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.MonthView">
            <summary>
            Gets or sets a value indicating whether the calendar displays a month or a year.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ItemFormatter">
            <summary>
            Gets or sets a formatter function to customize dates in the calendar.
            </summary>
            <remarks>
            The formatter function can add any content and any date. It allows complete customization of the appearance and behavior of the calendar.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientValueChanged">
            <summary>
            Occurs after a new date is selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientDisplayMonthChanged">
            <summary>
            Occurs after the DisplayMonth property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.ItemValidator">
            <summary>
            Gets or sets the name of a validator javascript function to determine whether dates are valid for selection.
            </summary>
            <remarks>
            If specified, the validator function should take one parameter representing the date to be tested, and should return false if the date is invalid and should not be selectable.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.OnClientFormatItem">
            <summary>
            Occurs when an element representing a day in the calendar has been created.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.SelectionMode">
            <summary>
            Gets or sets a value that indicates whether users can select days, months, or no values at all.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatDayHeaders">
            <summary>
            Gets or sets the format used to display the headers above the days in month view.
            </summary>
            <remarks>
            The default value for this property is 'ddd'.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatDays">
            <summary>
            Gets or sets the format used to display the days in month view.
            </summary>
            <remarks>
            The default value for this property is 'd ' (the space after the 'd' prevents the format from being interpreted as 'd', the standard format used to represent the short date pattern).
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatMonths">
            <summary>
            Gets or sets the format used to display the months in year view.
            </summary>
            <remarks>
            The default value for this property is 'MMM'.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatYear">
            <summary>
            Gets or sets the format used to display the year above the months in year view.
            </summary>
            <remarks>
            The default value for this property is 'yyyy'.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Calendar.FormatYearMonth">
            <summary>
            Gets or sets the format used to display the month and year above the calendar in month view.
            </summary>
            <remarks>
            The default value for this property is 'y'.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.ColorPicker">
            <summary>
            The ColorPicker control allows users to select a color by clicking on panels to adjust color channels (hue, saturation, brightness, alpha).
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ColorPicker.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ColorPicker"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.ShowAlphaChannel">
            <summary>
            Gets or sets a value indicating whether the ColorPicker allows users to edit the color's alpha channel (transparency).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.ShowColorString">
            <summary>
            Gets or sets a value indicating whether the ColorPicker shows a string representation of the current color.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.OnClientValueChanged">
            <summary>
            Occurs after a new color is selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.Value">
            <summary>
            Gets or sets the currently selected color.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColorPicker.Palette">
            <summary>
            Gets or sets an array that contains the colors in the palette.
            </summary>
            <remarks>
            The palette contains ten colors, represented by an array with ten strings. The first two colors are usually white and black.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.ComboBox`1">
            <summary>
            The ComboBox control allows users to pick strings from lists. The control automatically completes entries as the user types, and allows users to show a drop-down list with the items available.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ComboBox`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ComboBox`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.ComboBox`1.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the control or the callback result to the writer.
            </summary>
            <param name="writer">The Html writer.</param>
        </member>
        <member name="P:C1.Web.Mvc.ComboBox`1.Name">
            <summary>
             Gets or sets the name of the ComboBox control.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DropDown">
            <summary>
            DropDown control (abstract) contains an input element and a button used to show or hide the drop-down.
            </summary>
            <remarks>
            Derived classes must override the _createDropDown method to create whatever editor they want to show in the drop down area (a list of items, a calendar, a color editor, etc).
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.FormInputBase">
            <summary>
            The base class for all form input controls.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FormInputBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FormInputBase"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.FormInputBase.ValidationAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FormInputBase.Name">
            <summary>
             Gets or sets the name of the form input control.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DropDown.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.DropDown"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.Text">
            <summary>
            Gets or sets the text shown on the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.Placeholder">
            <summary>
            Gets or sets the string shown as a hint when the control is empty.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsDroppedDown">
            <summary>
            Gets or sets a value indicating whether the drop down is currently visible.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.ShowDropDownButton">
            <summary>
            Gets or sets a value indicating whether the control should display a drop-down button.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.OnClientTextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.OnClientIsDroppedDownChanged">
            <summary>
            Occurs after the drop down is shown or hidden.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.OnClientIsDroppedDownChanging">
            <summary>
            Occurs before the drop down is shown or hidden.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.AutoExpandSelection">
            <summary>
            Gets or sets a value that indicates whether the control should automatically expand the selection to whole words/numbers when the control is clicked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.DropDownCssClass">
            <summary>
            Gets or sets a CSS class name to add to the control's drop-down element.
            </summary>
            <remarks>
            This property is useful when styling the drop-down element, because it is shown as a child of the document body rather than as a child of the control itself, which prevents using CSS selectors based on the parent control.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsRequired">
            <summary>
            Gets or sets a value indicating whether the control value must be a non-empty string.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsAnimated">
            <summary>
            Gets or sets a value that indicates whether the control should use a fade-in animation when displaying the drop-down.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DropDown.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexChart`1">
            <summary>
            The FlexChart control provides a powerful and flexible way to visualize data.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexChart`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexChart`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexChart`1.ShouldSerializeOptions">
            <summary>
            Specifies whether the Options property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.ChartType">
            <summary>
            Gets or sets the type of chart to create
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.Stacking">
            <summary>
            Gets or sets whether and how series objects are stacked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.Rotated">
            <summary>
            Gets or sets a value indicating whether to flip the axes so X is vertical and Y horizontal.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexChart`1.Options">
            <summary>
            Gets various chart options.  The following options are supported: BubbleMaxSize, BubbleMinSize, GroupWidth. 
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGrid`1">
            <summary>
            The FlexGrid control provides a powerful and flexible way to display and edit data in a tabular format.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridBase`1">
            <summary>
            The FlexGrid control provides a powerful and flexible way to display and edit data in a tabular format.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexGridBase`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.ShouldSerializeSelection">
            <summary>
            Specifies whether the Selection property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.ShouldSerializeColumnLayout">
            <summary>
            Specifies whether the ColumnLayout property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.GetFlatColumns">
            <summary>
            Gets all columns in the grid.
            </summary>
            <returns>Collection of columns.</returns>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override to render the extender startup scripts.
            </summary>
            <param name="writer">The specified writer</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridBase`1.GetColumn(C1.Web.Mvc.ColumnInfo)">
            <summary>
            Gets column by the specified infomation.
            </summary>
            <param name="columnInfo">The column info.</param>
            <returns>The column meets the specified column info.</returns>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowAddNew">
            <summary>
            Gets or sets a value that indicates whether the grid should provide a new row template so users can add items to the source collection.
            </summary>
            <remarks>
            The new row template will not be displayed if the IsReadOnly property
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowDelete">
            <summary>
            Gets or sets a value that indicates whether the grid should delete selected rows when the user presses the Delete key.
            </summary>
            <remarks>
            Selected rows will not be deleted if the IsReadOnly property is set to true.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowDragging">
            <summary>
            Gets or sets whether users are allowed to drag rows and/or columns with the mouse.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowMerging">
            <summary>
            Gets or sets which parts of the grid provide cell merging.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowResizing">
            <summary>
            Gets or sets whether users are allowed to resize rows and/or columns with the mouse.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AllowSorting">
            <summary>
            Gets or sets whether users are allowed to sort columns by clicking the column header cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoClipboard">
            <summary>
            Gets or sets whether the grid should handle clipboard shortcuts.
            </summary>
            <remarks>
            The clipboard commands are as follows:ctrl+C, ctrl+Ins,Copy grid selection to cliboard;ctrl+V, shift+Ins,Paste clipboard text to grid selection.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoGenerateColumns">
            <summary>
            Gets or sets whether the grid should generate columns automatically based on the itemsSource.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.AutoSizeMode">
            <summary>
            Gets or sets which cells should be taken into account when auto-sizing a row or column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ChildItemsPath">
            <summary>
            Gets or sets the name of the property used to generate child rows in hierarchical grids.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.FrozenColumns">
            <summary>
            Gets or sets the number of frozen columns.
            </summary>
            <remarks>
            Frozen columns do not scroll, but the cells they contain may be selected and edited.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.FrozenRows">
            <summary>
            Gets or sets the number of frozen columns.
            </summary>
            <remarks>
            Frozen columns do not scroll, but the cells they contain may be selected and edited.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.GroupHeaderFormat">
            <summary>
            Gets or sets the format string used to create the group header content.
            </summary>
            <remarks>
            The string may contain any text, plus the following replacement strings:
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.HeadersVisibility">
            <summary>
            Gets or sets a value that determines whether the row and column headers are visible.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.IsReadOnly">
            <summary>
            Gets or sets whether the user can edit the grid cells by typing into them.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.SelectionMode">
            <summary>
            Gets or sets the current selection mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowGroups">
            <summary>
            Gets or sets whether the grid should insert group rows to delimit data groups.
            </summary>
            <remarks>
            Data groups are created by modifying the groupDescriptions property of the ICollectionView object used as the grid's itemsSource.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowSort">
            <summary>
            Gets or sets whether the grid should display sort indicators in the column headers.
            </summary>
            <remarks>
            Sorting is controlled by the sortDescriptions property of the ICollectionView object used as the grid's itemsSource.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.TreeIndent">
            <summary>
            Gets or sets the indent used to offset row groups of different levels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizedColumn">
            <summary>
            Occurs after the user auto-sizes a column by double-clicking the right edge of a column header cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizedRow">
            <summary>
            Occurs after the user auto-sizes a row by double-clicking the bottom edge of a row header cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizingColumn">
            <summary>
            Occurs before the user auto-sizes a column by double-clicking the right edge of a column header cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizingRow">
            <summary>
            Occurs before the user auto-sizes a row by double-clicking the bottom edge of a row header cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientBeginningEdit">
            <summary>
            Occurs before a cell enters edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCellEditEnded">
            <summary>
            Occurs when a cell edit has been committed or canceled.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCellEditEnding">
            <summary>
            Occurs when a cell edit is ending.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCopied">
            <summary>
            Occurs after the user has copied the selection content to the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientCopying">
            <summary>
            Occurs when the user is copying the selection content to the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
            <remarks>
            The event handler may cancel the copy operation.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDeletedRow">
            <summary>
            Occurs after the user has deleted a row by pressing the Delete key.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDeletingRow">
            <summary>
            Occurs when the user is deleting a selected row by pressing the Delete key (see the allowDelete property).
            </summary>
            <remarks>
            The event handler may cancel the row deletion.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggedColumn">
            <summary>
            Occurs when the user finishes dragging a column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggedRow">
            <summary>
            Occurs when the user finishes dragging a row.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingColumn">
            <summary>
            Occurs when the user starts dragging a column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingRow">
            <summary>
            Occurs when the user starts dragging a row.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientFormatItem">
            <summary>
            Occurs when an element representing a cell has been created.
            </summary>
            <remarks>
            This event can be used to format cells for display.It is similar in purpose to the itemFormatter property, but has the advantage of allowing multiple independent handlers.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientGroupCollapsedChanged">
            <summary>
            Occurs after a group has been expanded or collapsed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientGroupCollapsedChanging">
            <summary>
            Occurs when a group is about to be expanded or collapsed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientItemsSourceChanged">
            <summary>
            Occurs after the grid has been bound to a new items source.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientLoadedRows">
            <summary>
            Occurs after the grid rows have been bound to the data source.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientLoadingRows">
            <summary>
            Occurs before the grid rows are bound to the data source.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPasted">
            <summary>
            Occurs after the user has pasted content from the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPasting">
            <summary>
            Occurs when the user is pasting content from the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
            <remarks>
            The event handler may cancel the copy operation.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPrepareCellForEdit">
            <summary>
            Occurs when an editor cell is created and before it becomes active.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizedColumn">
            <summary>
            Occurs when the user finishes resizing a column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizedRow">
            <summary>
            Occurs when the user finishes resizing rows.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizingColumn">
            <summary>
            Occurs as columns are resized.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizingRow">
            <summary>
            Occurs as rows are resized.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowAdded">
            <summary>
            Occurs when the user creates a new item by editing the new row template (see the allowAddNew property).
            </summary>
            <remarks>
            The event handler may customize the content of the new item or cancel the new item creation.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditEnded">
            <summary>
            Occurs when a row edit has been committed or canceled.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditEnding">
            <summary>
            Occurs when a row edit is ending, before the changes are committed or canceled.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientScrollPositionChanged">
            <summary>
            Occurs after the control has scrolled.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSelectionChanged">
            <summary>
            Occurs after selection changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSelectionChanging">
            <summary>
            Occurs before selection changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSortedColumn">
            <summary>
            Occurs after the user applies a sort by clicking on a column header.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientSortingColumn">
            <summary>
            Occurs before the user applies a sort by clicking on a column header.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatedLayout">
            <summary>
            Occurs after the grid has updated its internal layout.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatingLayout">
            <summary>
            Occurs before the grid updates its internal layout.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatedView">
            <summary>
            Occurs when the grid finishes creating/updating the elements that  make up the current view.
            </summary>
            <remarks>
            The grid updates the view in response to several actions, including: <ul><li>refreshing the grid or its data source,</li><li>adding, removing, or changing rows or columns,</li><li>resizing or scrolling the grid,</li><li>changing the selection.</li></ul>
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatingView">
            <summary>
            Occurs when the grid starts creating/updating the elements that make up the current view.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ItemFormatter">
            <summary>
            Gets or sets a formatter function used to customize cells on this grid.
            </summary>
            <remarks>
            The formatter function can add any content to any cell. It provides complete flexibility over the appearance and behavior of grid cells.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.Selection">
            <summary>
            Gets or sets the current selection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.Columns">
            <summary>
            Gets the grid's column collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.RowHeadersTemplate">
            <summary>
            Gets the templates applied in row header cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnHeadersTemplate">
            <summary>
            Gets the templates applied in the column header cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.CellsTemplate">
            <summary>
            Gets the templates for the content cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.TopLeftCellsTemplate">
            <summary>
            Gets the templates for the topleft cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.DeferResizing">
            <summary>
            Gets or sets whether row and column resizing should be deferred until.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.SortRowIndex">
            <summary>
            Gets or sets the index of row in the column header panel that shows and changes the current sort.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnLayout">
            <summary>
            Gets or sets a JSON string that defines the current column layout." remarks="The column layout string represents an array with the columns and their properties. It can be used to persist column layouts defined by users so they are preserved across sessions, and can also be used to implement undo/redo functionality in applications that allow users to modify the column layout.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowMarquee">
            <summary>
            Gets or sets a value that indicates whether the grid should display a marquee element around the current selection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowSelectedHeaders">
            <summary>
            Gets or sets a value that indicates whether the grid should add class names to indicate selected header cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.StickyHeaders">
            <summary>
            Gets or sets a value that determines whether column headers should remain when the user scrolls the window.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ImeEnabled">
            <summary>
            Gets or sets a value that determines whether the grid should support Input Method Editors (IME) while not in edit mode.
            </summary>
            <remarks>
            This property is relevant only for sites/applications in Japanese, Chinese, Korean, and other languages that require IME support.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.PreserveOutlineState">
            <summary>
            Gets or sets a value that determines whether the grid should preserve the expanded/collapsed state of nodes when the data is refreshed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.PreserveSelectedState">
            <summary>
            Gets or sets a value that determines whether the grid should preserve the selected state of rows when the data is refreshed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowColumnFooters">
            <summary>
            Gets or sets a bool value which indicates whether to show a group row to display the aggregates in the column footers panel.
            </summary>
            <remarks>
            The aggregated values in the column footers only work when the DisableServerRead property of its ItemsSource is true.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnFootersRowHeaderText">
            <summary>
            Gets or sets the text for the group row header in the column footers panel.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowErrors">
            <summary>
            Gets or sets a value that determines whether the grid should add the 'wj-state-invalid' class to cells that contain validation errors, and tooltips with error descriptions.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ValidateEdits">
            <summary>
            Gets or sets a value that determines whether the grid should remain in edit mode when the user tries to commit edits that fail validation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditStarted">
            <summary>
            Occurs after a row enters edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditStarting">
            <summary>
            Occurs before a row enters edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.NewRowAtTop">
            <summary>
            Gets or sets a value that indicates whether the new row template should be located at the top of the grid or at the bottom.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingColumnOver">
            <summary>
            Occurs as the user drags a column to a new position.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingRowOver">
            <summary>
            Occurs as the user drags a row to a new position.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPastedCell">
            <summary>
            Occurs after the user has pasted content from the clipboard into a cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.OnClientPastingCell">
            <summary>
            Occurs when the user is pasting content from the clipboard into a cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ShowAlternatingRows">
            <summary>
            Gets or sets a value that determines whether the grid should add the 'wj-alt' class to cells in alternating rows.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ColumnFootersTemplate">
            <summary>
            Gets the templates applied in column footers cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.BottomLeftCellsTemplate">
            <summary>
            Gets the templates applied in bottom left cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ScrollPosition">
            <summary>
            Gets or sets the position of the grid's scrollbars.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.CloneFrozenCells">
            <summary>
            Gets or sets a value that determines whether the FlexGrid should clone frozen cells and show them in a separate element to improve perceived performance while scrolling.
            </summary>
            <remarks>
            This property is set to null by default, which causes the grid to select the best setting depending on the browser.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ItemValidator">
            <summary>
            Gets or sets a validator function to determine whether cells contain valid data.
            </summary>
            <remarks>
            If specified, the validator function should take two parameters containing the cell's row and column indices, and should return a string containing the error description.  This property is especially useful when dealing with unbound grids, since bound grids can be validated using the <see cref="P:C1.Web.Mvc.CollectionViewService`1.GetError"/> property instead.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.KeyActionEnter">
            <summary>
            Gets or sets the action to perform when the ENTER key is pressed.
            </summary>
            <remarks>
            The default setting for this property is <see cref="F:C1.Web.Mvc.Grid.KeyAction.MoveDown"/>, which causes the control to move the selection to the next row. This is the standard Excel behavior.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.KeyActionTab">
            <summary>
            Gets or sets the action to perform when the TAB key is pressed.
            </summary>
            <remarks>
            The default setting for this property is <see cref="F:C1.Web.Mvc.Grid.KeyAction.None"/>, which causes the browser to select the next or previous controls on the page when the TAB key is pressed. This is the recommended setting to improve page accessibility.  In previous versions, the default was set to <see cref="F:C1.Web.Mvc.Grid.KeyAction.Cycle"/>, which caused the control to move the selection across and down he grid. This is the standard Excel behavior, but is not good for accessibility.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.RowHeaderPath">
            <summary>
            Gets or sets the name of the property used to create row header cells.
            </summary>
            <remarks>
            Row header cells are not visible or selectable. They are meant for use with accessibility tools.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.Extenders">
            <summary>
            Gets the extender collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridBase`1.ValidationAttributesMap">
            <summary>
            Gets the map of the validation attributes.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGrid`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexGrid`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridDetailProvider`1">
            <summary>
            Define an extender used to set the FlexGridDetailProvider .
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridDetailProvider`1.#ctor(C1.Web.Mvc.FlexGridBase{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexGridDetailProvider`1"/> instance.
            </summary>
            <param name="grid">The grid owns the FlexGridDetailProvider extender.</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.CreateDetailCell">
            <summary>
            Gets or sets the callback function that creates detail cells.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailVisibilityMode">
            <summary>
            Specifies when and how the row details are displayed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.MaxHeight">
            <summary>
            Gets or sets the maximum height of the detail rows, in pixels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.RowHasDetail">
            <summary>
            Gets or sets the callback function that determines whether a row has details.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailRowTemplateId">
            <summary>
            Gets or sets the id of the template for the grid detail row.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailRowTemplateContent">
            <summary>
            Gets or sets the content of the template for the grid detail row.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.DisposeDetailCell">
            <summary>
            Gets or sets the callback function that disposes of detail cells.
            </summary>
            <remarks>
            The callback function takes a Row as a parameter and disposes of any resources associated with the detail cell.This function is optional. Use it in cases where the createDetailCell function allocates resources that are not automatically garbage-collected.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridDetailProvider`1.IsAnimated">
            <summary>
            Gets or sets a value that indicates whether to use animation when showing row details.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridFilter`1">
            <summary>
            Define an extender used to set the flexgrid filter.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridFilter`1.#ctor(C1.Web.Mvc.FlexGridBase{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexGridFilter`1"/> instance.
            </summary>
            <param name="grid">The grid which owns the filter.</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ShowFilterIcons">
            <summary>
            Gets or sets whether the FlexGridFilter should add filter editing buttons to the grid's column headers.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.DefaultFilterType">
            <summary>
            Gets or sets the default filter type to use.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ColumnFilterTypes">
            <summary>
            Gets a dictionary that indicates the FilterType of the specified columns.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.FilterColumns">
            <summary>
            Gets or sets an array containing the names or bindings of the columns that should have filters.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ShowSortButtons">
            <summary>
             Gets or sets a value indicating whether the filter editor should include sort buttons.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.OnClientFilterChanging">
            <summary>
            Occurs when a column filter is about to be edited by the user.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.OnClientFilterChanged">
            <summary>
            Occurs after a column filter has been edited by the user.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.OnClientFilterApplied">
            <summary>
            Occurs after the filter is applied.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridFilter`1.ColumnFilters">
            <summary>
            Gets or sets a list of the column filters.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexGridGroupPanel`1">
            <summary>
            Define an extender used to set the flexgrid group panel.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridGroupPanel`1.#ctor(C1.Web.Mvc.FlexGridBase{`0},System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexGridGroupPanel`1"/> instance.
            </summary>
            <param name="grid">The grid which owns this group panel.</param>
            <param name="selector">The selector specifies the element of the group panel.</param>
        </member>
        <member name="M:C1.Web.Mvc.FlexGridGroupPanel`1.RegisterStartupScript(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the extender instance to the writer.
            </summary>
            <param name="writer">the specified writer.</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.MaxGroups">
            <summary>
            Gets or sets the maximum number of groups allowed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.Selector">
            <summary>
            Gets or sets a value which specifies the selector.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.HideGroupedColumns">
            <summary>
            Gets or sets a value indicating whether the panel hides grouped columns in the owner grid.
            </summary>
            <remarks>
            The FlexGrid displays grouping information in row headers, so it is usually a good idea to hide grouped columns since they display redundant information.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.Placeholder">
            <summary>
            Gets or sets a string to display in the control when it contains no groups.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexGridGroupPanel`1.IsDisabled">
            <summary>
            Gets or sets a value that determines whether the control is disabled.
            </summary>
            <remarks>
            Disabled controls cannot get mouse or keyboard events.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.FlexPie`1">
            <summary>
            The FlexPie control provides pie and doughnut charts with selectable slices.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexPieBase`1">
            <summary>
            The base class of flex pie.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexPieBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexPieBase`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.BindingName">
            <summary>
            Gets or sets the name of the property that contains the name of the data item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.InnerRadius">
            <summary>
            Gets or sets the size of the pie's inner radius.
            </summary>
            <remarks>
            The inner radius is measured as a fraction of the pie radius. The default value for this property is zero, which creates a pie. Setting this property to values greater than zero creates pies with a hole in the middle, also known as doughnut charts.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.IsAnimated">
            <summary>
            Gets or sets a value indicating whether to use animation when items are selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.Offset">
            <summary>
            Gets or sets the offset of the slices from the pie center. 
            </summary>
            <remarks>
            The offset is measured as a fraction of the pie radius.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.Reversed">
            <summary>
            Gets or sets whether angles are reversed (counter-clockwise).
            </summary>
            <remarks>
            The default value is false, which causes angles to be measured in the clockwise direction.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.SelectedItemOffset">
            <summary>
            Gets or sets the offset of the selected slice from the pie center.
            </summary>
            <remarks>
            Offsets are measured as a fraction of the pie radius.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.SelectedItemPosition">
            <summary>
            Gets or sets the position of the selected slice.
            </summary>
            <remarks>
            Setting this property to a value other than 'None' causes the pie to rotate when an item is selected. Note that in order to select slices by clicking the chart, you must set theselectionMode property to "Point".
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.StartAngle">
            <summary>
            Gets or sets the starting angle for the pie slices, in degrees.
            </summary>
            <remarks>
            Angles are measured clockwise, starting at the 9 o'clock position.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.DataLabel">
            <summary>
            Gets the style of point data label.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.SelectedIndex">
            <summary>
            Gets or sets the index of the selected slice.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexPieBase`1.Binding">
            <summary>
            Gets or sets the name of the property that contains the chart values.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexPie`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexPie`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="T:C1.Web.Mvc.FlexRadar`1">
            <summary>
            Radar chart control.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexRadar`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexRadar`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.ChartType">
            <summary>
            Gets or sets the type of radar chart to be created.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.Reversed">
            <summary>
            Gets or sets a value that determines whether angles are reversed (counter-clockwise). The default value is false, which causes angles to be measured in the clockwise direction.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.Stacking">
            <summary>
            Gets or sets a value that determines whether and how the series objects are stacked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.StartAngle">
            <summary>
            Gets or sets the starting angle for the radar, in degrees. Angles are measured clockwise, starting at the 12 o'clock position.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadar`1.TotalAngle">
            <summary>
            Gets or sets the total angle for the radar, in degrees.  Its default value is 360. The value must be greater than 0, or less than or equal to 360.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.InputColor">
            <summary>
            The InputColor control allows users to select colors by typing in HTML-supported color strings, or to pick colors from a drop-down that shows a ColorPicker control.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputColor.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputColor"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.Required">
            <summary>
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.ShowAlphaChannel">
            <summary>
            Gets or sets a value indicating whether the ColorPicker allows users to edit the color's alpha channel (transparency).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.OnClientValueChanged">
            <summary>
            Occurs after a new color is selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.Value">
            <summary>
            Gets or sets the current color.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputColor.Palette">
            <summary>
            Gets or sets an array that contains the colors in the palette.
            </summary>
            <remarks>
            The palette contains ten colors, represented by an array with ten strings. 
            The first two colors are usually white and black.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.InputDate">
            <summary>
            The control allows users to type in dates using any format supported by the Globalize class, or to pick dates from a drop-down box that shows a Calendar control.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.InputDateBase">
            <summary>
            The base class for the controls which allow the users to type in dates.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputDateBase.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputDateBase"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Value">
            <summary>
            Gets or sets the current date.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Required">
            <summary>
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Min">
            <summary>
            Gets or sets the earliest date that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Max">
            <summary>
            Gets or sets the latest date that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Format">
            <summary>
            Gets or sets the format used to display the selected date.
            </summary>
            <remarks>
            The format string is expressed as a .NET-style Date format string.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.Mask">
            <summary>
            Gets or sets a mask to use while editing.
            </summary>
            <remarks>
            The mask format is the same one that the InputMask control uses.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.OnClientValueChanged">
            <summary>
            Occurs after a new date is selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.ItemValidator">
            <summary>
            Gets or sets the name of a validator javascript function to determine whether dates are valid for selection.
            </summary>
            <remarks>
            If specified, the validator function should take one parameter representing the date to be tested, and should return false if the date is invalid and should not be selectable.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.InputType">
            <summary>
            Gets or sets the "type" attribute of the HTML input element hosted by the control.
            </summary>
            <remarks>
            By default, this property is set to "tel", a value that causes mobile devices to show a numeric keypad that includes a negative sign and a decimal separator.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.ItemFormatter">
            <summary>
            Gets or sets a formatter function to customize dates in the drop-down calendar.
            </summary>
            <remarks>
            The formatter function can add any content to any date. It allows complete customization of the appearance and behavior of the calendar.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.IsRequired">
            <summary>
            Gets or sets a value indicating whether the control value must be a Date or whether it can be set to null (by deleting the content of the control).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateBase.SelectionMode">
            <summary>
            Gets or sets a value that indicates whether users can select days, months, or no values at all.
            </summary>
            <remarks>
            This property affects the behavior of the drop-down calendar, but not the format used to display dates.  If you set selectionMode to 'Month', you should normally set the format property to 'MMM yyyy' or some format that does not include the day.
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.InputDate.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputDate"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="T:C1.Web.Mvc.InputDateTime">
            <summary>
            The control allows users to input dates and times, either by typing complete date/time values in any format supported, or by picking dates from a drop-down calendar and times from a drop-down list.  
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputDateTime.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputDateTime"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeFormat">
            <summary>
            Gets or sets the format used to display times in the drop-down list. 
            </summary>
            <remarks>
            This property does not affect the value shown in the control's input element.  
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeMax">
            <summary>
            Gets or sets the latest time that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeMin">
            <summary>
            Gets or sets the earliest time that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputDateTime.TimeStep">
            <summary>
            Gets or sets the number of minutes between entries in the drop-down list of times.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.InputMask">
            <summary>
            The InputMask control provides a way to govern what a user is allowed to input.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputMask.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputMask"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.Value">
            <summary>
            Gets or sets the text currently shown in the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.Mask">
            <summary>
            Gets or sets the mask used to validate the input as the user types.
            </summary>
            <remarks>
            The mask is defined as a string with one or more of the masking characters listed in the InputMask topic.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.PromptChar">
            <summary>
            Gets or sets the symbol used to show input positions in the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.Placeholder">
            <summary>
            Gets or sets the string shown as a hint when the control is empty.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.OnClientValueChanged">
            <summary>
            Occurs when the value of the Value property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.RawValue">
            <summary>
            Gets or sets the raw value of the control (excluding mask literals).
            </summary>
            <remarks>
            The raw value of the control excludes prompt and literal characters.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputMask.IsRequired">
            <summary>
            Gets or sets a value indicating whether the control value must be a non-empty string.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.InputNumber">
            <summary>
            The InputNumber control allows users to enter numbers.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputNumber.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputNumber"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.InputType">
            <summary>
            Gets or sets the "type" attribute of the HTML input element hosted by the control.
            </summary>
            <remarks>
            By default, this property is set to "tel," a value that causes mobile devices to show a numeric keypad that includes a negative sign and a decimal separator.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Value">
            <summary>
            Gets or sets the current value of the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Required">
            <summary>
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Min">
            <summary>
            Gets or sets the smallest number that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Max">
            <summary>
            Gets or sets the largest number that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Step">
            <summary>
            Gets or sets the amount to add or subtract to the Value property when the user clicks the spinner buttons.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Format">
            <summary>
            Gets or sets the format used to display the number being edited (see Globalize).
            </summary>
            <remarks>
            The format string is expressed as a .NET-style standard numeric format string.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Text">
            <summary>
            Gets or sets the text shown in the control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.Placeholder">
            <summary>
            Gets or sets the string shown as a hint when the control is empty.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.ShowSpinner">
            <summary>
            Gets or sets a value indicating whether the control displays spinner buttons to increment or decrement the value (the step property must be set to a non-zero value).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.OnClientTextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.OnClientValueChanged">
            <summary>
            Occurs when the value of the Value property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputNumber.IsRequired">
            <summary>
            Gets or sets a value indicating whether the control value must be a number or whether it can be set to null (by deleting the content of the control).
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.InputTime`1">
            <summary>
            The InputTime control allows users to enter times using any format supported by the Globalize class, or to pick times from a drop-down list.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.InputTime`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.InputTime`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Value">
            <summary>
            Gets or sets the current input time.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Min">
            <summary>
            Gets or sets the earliest time that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Max">
            <summary>
            Gets or sets the latest time that the user can enter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Format">
            <summary>
            Gets or sets the format used to display the selected time (see Globalize).
            </summary>
            <remarks>
            The format string is expressed as a .NET-style time format string.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Mask">
            <summary>
            Gets or sets a mask to use while the user is editing.
            </summary>
            <remarks>
            If specified, the mask must be compatible with the value of the Format property. For example, you can use the mask '99:99 >LL' for entering short times (format 't').
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.OnClientValueChanged">
            <summary>
            Occurs after a new time is selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Step">
            <summary>
            Gets or sets the number of minutes between entries in the drop-down list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.InputType">
            <summary>
            Gets or sets the "type" attribute of the HTML input element hosted by the control.
            </summary>
            <remarks>
            By default, this property is set to "tel", a value that causes mobile devices to show a numeric keypad that includes a negative sign and a decimal separator.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.Name">
            <summary>
             Gets or sets the name of the InputTime control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.InputTime`1.AutoExpandSelection">
            <summary>
            Gets or sets a value that indicates whether the control should automatically 
            expand the selection to whole words/numbers when the control is clicked.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.LinearGauge">
            <summary>
            The LinearGauge displays a linear scale with an indicator
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.LinearGauge.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.LinearGauge"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="T:C1.Web.Mvc.ListBox`1">
            <summary>
            The ListBox control displays a list of items which may contain plain text or HTML, and allows users to select items with the mouse or the keyboard.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ListBox`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ListBox`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.DisplayMemberPath">
            <summary>
            Gets or sets the name of the property to use as the visual representation of the items.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedValuePath">
            <summary>
            Gets or sets the name of the property used to get the SelectedValue from the SelectedItem.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.IsContentHtml">
            <summary>
            Gets or sets a value indicating whether the list displays items as plain text or as HTML.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemFormatter">
            <summary>
            Gets or sets a function used to customize the values shown in the list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected item in the list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedItem">
            <summary>
            Gets or sets the item that is currently selected in the list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.SelectedValue">
            <summary>
            Gets or sets the value of the SelectedItem, obtained using the SelectedValuePath.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.MaxHeight">
            <summary>
            Gets or sets the maximum height of the list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemTemplateId">
            <summary>
            Gets or sets the id of the template used to generate each list item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientSelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientItemsChanged">
            <summary>
            Occurs when the list of items changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.CheckedMemberPath">
            <summary>
            Gets or sets the name of the property used to control checkboxes placed next to each item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientItemChecked">
            <summary>
            Occurs when the current item is checked or unchecked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemTemplateContent">
            <summary>
            Gets or sets the id of the template used to generate each list item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientCheckedItemsChanged">
            <summary>
            Occurs when the value of the @see:checkedItems property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientFormatItem">
            <summary>
            Occurs when an element representing a list item has been created.
            </summary>
            <remarks>
            This event can be used to format list items for display.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientLoadedItems">
            <summary>
            Occurs after the list items are generated.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.OnClientLoadingItems">
            <summary>
            Occurs before the list items are generated.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.CheckedIndexes">
            <summary>
            Gets or sets a list containing the indexes of checked items.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.CheckedValues">
            <summary>
            Gets or sets a list containing the item-values that are currently checked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ListBox`1.ItemRole">
            <summary>
            Gets or sets the value of the "role" attribute added to the list items.
            </summary>
            <remarks>
            The default value for this property is "option".
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.MenuBase`1">
            <summary>
            The Menu control shows a text element with a drop-down list of commands that the user can invoke by click or touch.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MenuBase`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.MenuBase`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.Command">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.CommandPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.CommandParameterPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.OnClientItemClicked">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.Owner">
            <summary>
            Gets or sets the selector string of the element that owns this menu.
            </summary>
            <remarks>
            If we want a context menu, we should hide this menu by setting style or attribute.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.IsButton">
            <summary>
            Gets or sets a value that determines whether menu should act as a split button instead of a regular menu.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.AutoExpandSelection">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuBase`1.HeaderPath">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MultiAutoComplete`1">
            <summary>
            A control control allows users to pick items from lists that contain custom objects or simple strings.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MultiAutoComplete`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.MultiAutoComplete`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.MaxSelectedItems">
            <summary>
            Gets or sets the maximum number of items that can be selected.
            </summary>
            <remarks>
            Setting this property to null (the default value) allows users to pick any number of items.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedMemberPath">
            <summary>
            Gets or sets the name of the property used to control which item will be selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.OnClientSelectedItemsChanged">
            <summary>
            Occurs when the value of the selectedItems property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedIndexes">
            <summary>
            Gets or sets a list containing the indexes of the items that are currently selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedValues">
            <summary>
            Gets or sets an object array containing the item-values that are currently selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.ShowDropDownButton">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedIndex">
            <summary>
            Overrides to hide this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedItem">
            <summary>
            Overrides to hide this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiAutoComplete`1.SelectedValue">
            <summary>
            Overrides to hide this property.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MultiSelect`1">
            <summary>
            The MultiSelect control allows users to select multiple items from drop-down lists that contain custom objects or simple strings.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MultiSelect`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.MultiSelect`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.CheckedIndexes">
            <summary>
            Gets or sets a list containing the indexes of checked items.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.CheckedMemberPath">
            <summary>
            Gets or sets the name of the property used to control the checkboxes placed next to each item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.HeaderFormat">
            <summary>
            Gets or sets the format string used to create the header content when the control has more than MaxHeaderItems items checked.
            </summary>
            <remarks>
            The format string may contain the '{count}' replacement string which gets replaced with the number of items currently checked. The default value for this property in the English culture is '{count:n0} items selected'.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.HeaderFormatter">
            <summary>
            Gets or sets a function that gets the HTML in the control header.
            </summary>
            <remarks>
            By default, the control header content is determined based on the Placeholder, MaxHeaderItems, and on the current selection. You may customize the header content by specifying a function that returns a custom string based on whatever criteria your application requires.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.MaxHeaderItems">
            <summary>
            Gets or sets the maximum number of items to display on the control header.
            </summary>
            <remarks>
            If no items are selected, the header displays the text specified by the Placeholder property.If the number of selected items is smaller than or equal to the value of the MaxHeaderItems property, the selected items are shown in the header. If the number of selected items is greater than MaxHeaderItems, the header displays the selected item count instead.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.OnClientCheckedItemsChanged">
            <summary>
            Occurs when the value of the checked items changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.CheckedValues">
            <summary>
            Gets or sets a list containing the item-values that are currently checked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.AutoExpandSelection">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.HeaderPath">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.IsRequired">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.IsEditable">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.SelectedIndex">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.SelectedItem">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.SelectedValue">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.OnClientTextChanged">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.Text">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MultiSelect`1.Name">
            <summary>
             Gets or sets the name of the MultiSelect control.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Pager">
            <summary>
            The Pager control can bind to a data control or CollectionView service to support page navigation.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Pager.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Pager"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.Pager.Owner">
            <summary>
            Gets or sets the id of a data control or CollectionView service which own this pager.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Popup">
            <summary>
            The class that shows an element as a popup.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Popup.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Popup"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="M:C1.Web.Mvc.Popup.RenderContent(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders content of control.
            </summary>
            <param name="writer">The specified writer used to write the markup.</param>
        </member>
        <member name="P:C1.Web.Mvc.Popup.Owner">
            <summary>
            Gets or sets the selector string to determine the element that own this popup. 
            </summary>
            <remarks>
            If the Owner is null or invalidate, the Popup behaves like a dialog. It is centered on the screen and must be shown using the client show method.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.FadeIn">
            <summary>
            Gets or sets a value that determines whether popups should be shown using a fade-in animation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.FadeOut">
            <summary>
            Gets or sets a value that determines whether popups should be hidden using a fade-out animation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.Modal">
            <summary>
            Gets or sets a value that determines whether the Popup should be displayed as a modal dialog.
            </summary>
            <remarks>
            Modal dialogs show a dark backdrop that makes the Popup stand out from other content on the page.If you want to make a dialog truly modal, also set the HideTrigger property to None, so users won't be able to click the backdrop to dismiss the dialog. In this case, the dialog will close only if the close method is called or if the user presses the Escape key.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.HideTrigger">
            <summary>
            Gets or sets the actions that hide the Popup.
            </summary>
            <remarks>
            By default, the HideTrigger property is set to Blur, which hides the popup when it loses focus.If you set the HideTrigger property to Click, the popup will be hidden only when the owner element is clicked.If you set the HideTrigger property to None, the popup will be hidden only when the hide method is called.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.ShowTrigger">
            <summary>
            Gets or sets the actions that show the Popup.
            </summary>
            <remarks>
            By default, the ShowTrigger property is set to Click, which causes the popup to appear when the user clicks the owner element.If you set the ShowTrigger property to None, the popup will be shown only when the show method is called.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientHiding">
            <summary>
            Gets or sets the client function which occurs before the Popup is hiding.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientHidden">
            <summary>
            Gets or sets the client function which occurs after the Popup has been hidden.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientShowing">
            <summary>
            Gets or sets the client function which occurs before the Popup is showing.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.OnClientShown">
            <summary>
            Gets or sets the client function which occurs after the Popup has been shown.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.Content">
            <summary>
            Gets or sets the popup content.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Popup.ContentFunc">
            <summary>
            Gets or sets the function which returns the popup content.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.RadialGauge">
            <summary>
            The RadialGauge displays a circular scale with an indicator
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.RadialGauge.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.RadialGauge"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.AutoScale">
            <summary>
            Gets or sets whether the gauge should automatically scale to fill the host element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.StartAngle">
            <summary>
            Gets or sets the starting angle for the gauge, in degrees.
            </summary>
            <remarks>
            Angles are measured clockwise, starting at the 9 o'clock position.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.SweepAngle">
            <summary>
            Gets or sets the sweeping angle for the gauge, in degrees.
            </summary>
            <remarks>
            Angles are measured clockwise, starting at the 9 o'clock position.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.RadialGauge.ShowText">
            <summary>
            Gets or sets which values should be displayed as text in the gauge.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Sunburst`1">
            <summary>
            The Sunburst control displays hierarhical data as multi-level pie charts.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Sunburst`1.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Sunburst`1"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.Sunburst`1.BindingName">
            <summary>
            Gets or sets the names of the binding data fields. Please use comma to separate the field names.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Sunburst`1.ChildItemsPath">
            <summary>
            Gets or sets the name of the property (or properties) used to generate child items in hierarchical data.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TreeView">
            <summary>
            Defines a control which displays a hierarchical list which may contain text, checkboxes, images, or arbitrary HTML content.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.TreeView.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.TreeView"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.Source">
            <summary>
            Gets or sets the array that contains the items in <see cref="T:C1.Web.Mvc.TreeView"/>. Arrays usually have a hierarchical structure with items that contain child items. There is no fixed limit to the depth of the items.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ChildItemsPath">
            <summary>
            Gets or sets the name of the property (or properties) that contains the child items for each node. When it is not set, ['items'] will be used.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.DisplayMemberPath">
            <summary>
            Gets or sets the name of the property (or properties) to use as the visual representation of the nodes. When it is not set, ['header'] will be used.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ImageMemberPath">
            <summary>
            Gets or sets the name of the property (or properties) to use as a source of images for the nodes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.IsContentHtml">
            <summary>
            Gets or sets a value indicating whether items are bound to plain text or HTML.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ShowCheckboxes">
            <summary>
            Gets or sets a value that determines whether the <see cref="T:C1.Web.Mvc.TreeView"/> control should add checkboxes to nodes and manage their state. This property can be used only on trees without lazy-loaded nodes(LazyLoadFunction is not set and IsLazyLoading is false).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.AutoCollapse">
            <summary>
            Gets or sets a value that determines if sibling nodes should be collapsed when a node is expanded.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.IsAnimated">
            <summary>
            Gets or sets a value that indicates whether to use animations when expanding or collapsing nodes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.IsReadOnly">
            <summary>
            Gets or sets a value that determines whether users can edit the text in the nodes. When it is set to false, users may edit the content of the tree nodes by typing directly into the nodes. The F2 key can also be used to enter edit mode with the whole node content selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.AllowDragging">
            <summary>
            Gets or sets a value that determines whether users can drag and drop nodes within the <see cref="T:C1.Web.Mvc.TreeView"/> control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.ExpandOnClick">
            <summary>
            Gets or sets a value that determines whether to expand collapsed nodes when the user clicks the node header.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.LazyLoadFunction">
            <summary>
            Gets or sets a client function that loads child nodes on demand.
            </summary>
            <remarks>
            It takes two parameters: the node being and a callback to be invoked when the data becomes available. The callback function tells the <see cref="T:C1.Web.Mvc.TreeView"/> that the node loading process has been completed. It should always be called, even if there are errors when loading the data.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientItemsSourceChanged">
            <summary>
            Occurs when the value of the ItemsSource property changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientLoadingItems">
            <summary>
            Occurs before the tree items are generated.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientLoadedItems">
            <summary>
            Occurs after the tree items have been generated.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientItemClicked">
            <summary>
            Occurs when the user clicks an item or presses the Enter key and an item is selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientSelectedItemChanged">
            <summary>
            Occurs when the selected item is changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientCheckedItemsChanged">
            <summary>
            Occurs when the checked items are changed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCollapsedChanging">
            <summary>
            Occurs before a node is collapsed or expanded.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCollapsedChanged">
            <summary>
            Occurs after a node is collapsed or expanded.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCheckedChanging">
            <summary>
            Occurs before the check status of a node is changed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientIsCheckedChanged">
            <summary>
            Occurs after the check status of a node is changed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientFormatItem">
            <summary>
            Occurs when an element representing a node has been created.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDragStart">
            <summary>
            Occurs when the user starts dragging a node. This event only occurs if the AllowDrag property is set to true.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDragOver">
            <summary>
            Occurs while the user drags a node over other nodes on the <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
            <remarks>
            Returns true if the event is not cancelled.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDrop">
            <summary>
            Occurs when the user drops a on the <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
            <remarks>
            Returns true if the event is not cancelled.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientDragEnd">
            <summary>
            Occurs when the user finishes a drag/drop operation, either by dropping a node into a new location or by canceling the operation with the mouse or keyboard.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditStarting">
            <summary>
            Occurs before a node enters edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditStarted">
            <summary>
            Occurs after a node has entered edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditEnding">
            <summary>
            Occurs before a node exits edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientNodeEditEnded">
            <summary>
            Occurs after a node has exited edit mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.LazyLoadActionUrl">
            <summary>
            Gets or sets the url to get the lazy nodes in <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
            <remarks>
            If set to True, the children nodes are loaded when the parent node is expanded. Otherwise, all the nodes will be loaded.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.LoadActionUrl">
            <summary>
            Gets or sets the url to get the items in <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientReponseTextParsing">
            <summary>
            Occurs when parsing the response text.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeView.OnClientRequestDataStringifying">
            <summary>
            Occurs when serializing the request data.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.AnnotationLayer`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ExtenderBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Extender"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtenderBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ExtenderBuilder`2"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Extender"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtenderBuilder`2.Id(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Component.Id"/>
            Sets the id of the extender.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.#ctor(C1.Web.Mvc.AnnotationLayer{`0})">
            <summary>
            Create one FlexGridFilterBuilder instance.
            </summary>
            <param name="extender">The FlexGridFilter extender.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddText(System.Action{C1.Web.Mvc.Fluent.TextBuilder})">
            <summary>
            Add text annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddCircle(System.Action{C1.Web.Mvc.Fluent.CircleBuilder})">
            <summary>
            Add circle annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddEllipse(System.Action{C1.Web.Mvc.Fluent.EllipseBuilder})">
            <summary>
            Add ellipse annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddRectangle(System.Action{C1.Web.Mvc.Fluent.RectangleBuilder})">
            <summary>
            Add rectangle annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddImage(System.Action{C1.Web.Mvc.Fluent.ImageBuilder})">
            <summary>
            Add image annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddLine(System.Action{C1.Web.Mvc.Fluent.LineBuilder})">
            <summary>
            Add line annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddPolygon(System.Action{C1.Web.Mvc.Fluent.PolygonBuilder})">
            <summary>
            Add polygon annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerBuilder`1.AddSquare(System.Action{C1.Web.Mvc.Fluent.SquareBuilder})">
            <summary>
            Add square annotation for annotationlayer.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.AutoComplete`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1.#ctor(C1.Web.Mvc.AutoComplete{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.AutoComplete`1"/> object to be configurated.</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BulletGraphBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.BulletGraph"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LinearGaugeBaseBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.LinearGaugeBase"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GaugeBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Gauge"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.GaugeBuilder`2"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.Gauge"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Face(System.Action{C1.Web.Mvc.Fluent.RangeBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.Face"/>.
            Sets the Range used to represent the gauge's overall geometry and appearance.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Pointer(System.Action{C1.Web.Mvc.Fluent.RangeBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.Pointer"/>.
            Sets the Range used to represent the gauge's current value.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ShowText(C1.Web.Mvc.ShowText)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.ShowText"/>.
            Sets which values should be displayed as text in the gauge.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ShowRanges(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.ShowRanges"/>.
            Sets whether the gauge should display the ranges contained in the ranges property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.HasShadow(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.HasShadow"/>.
            Sets whether the gauge should display a shadow effect.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.IsAnimated(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.IsAnimated"/>.
            Sets whether the gauge should animate value changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Step(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.Step"/>.
            Sets the amount to add or subtract to the value property when the user presses the arrow keys.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Thickness(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.Thickness"/>.
            Sets the thickness of the gauge, on a scale between zero and one.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Gauge.OnClientValueChanged"/> client event.
            Occurs when the value shown on the gauge changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Format(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.Format"/>.
            Sets the format string used for displaying the gauge values as text.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.IsReadOnly"/>.
            Sets or whether the user can edit the value using the mouse and the keyboard.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Origin(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.Origin"/>.
            Sets the starting point used for painting the range.
            </summary>
            <remarks>
            By default, this property is set to null, which causes the value range to start at the gauge's minimum value, or zero if the minimum is less than zero.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ThumbSize(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.ThumbSize"/>.
            Sets the size of the element that shows the gauge's current value, in pixels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.ShowTicks(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.ShowTicks"/>.
            Sets a property that determines whether the gauge should display tick marks at each step value.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.GetText(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.GetText"/>.
            Sets a callback that returns customized strings used to display gauge values.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.TickSpacing(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Gauge.TickSpacing"/>.
            Sets the spacing between tickmarks.
            </summary>
            <remarks>
            Set the ShowTicks property to true if you want the gauge to show tickmarks along its face. By default, the interval between tickmarks is defined by the Step property.  Use the TickSpacing property to override the default and use a spacing that is different from the Step value. Set the TickSpacing property to null to revert to the default behavior.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Ranges(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Range,C1.Web.Mvc.Fluent.RangeBuilder}})">
            <summary>
            Sets the Ranges.
            </summary>
            <param name="build">The build action</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Min(System.Double)">
            <summary>
            Sets the Min property.
            </summary>
            <remarks>
            Gets or sets the minimum value that can be displayed on the gauge.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Max(System.Double)">
            <summary>
            Sets the Max property.
            </summary>
            <remarks>
            Gets or sets the maximum value that can be displayed on the gauge.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GaugeBuilder`2.Value(System.Double)">
            <summary>
            Sets the Value property.
            </summary>
            <remarks>
            Gets or sets the value displayed on the gauge.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LinearGaugeBaseBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.LinearGaugeBaseBuilder`2"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.LinearGaugeBase"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LinearGaugeBaseBuilder`2.Direction(C1.Web.Mvc.GaugeDirection)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LinearGaugeBase.Direction"/>.
            Sets the direction in which the gauge is filled.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.#ctor(C1.Web.Mvc.BulletGraph)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.BulletGraphBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.BulletGraph"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.Bad(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BulletGraph.Bad"/>.
            Sets a reference value considered bad for the measure.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.Good(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BulletGraph.Good"/>.
            
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BulletGraphBuilder.Target(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BulletGraph.Target"/>.
            Sets the target value for the measure.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CalendarBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Calendar"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.#ctor(C1.Web.Mvc.Calendar)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.CalendarBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.Calendar"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.Value(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.Value"/>.
            Sets the currently selected date.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.Min(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.Min"/>.
            Sets the earliest date that the user can select in the calendar.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.Max(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.Max"/>.
            Sets the latest date that the user can select in the calendar.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FirstDayOfWeek(System.DayOfWeek)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.FirstDayOfWeek"/>.
            Sets a value that represents the first day of the week, the one displayed in the first column of the calendar.
            </summary>
            <remarks>
            Setting this property to null causes the calendar to use the default for the current culture. In the English culture, the first day of the week is Sunday; in most European cultures, the first day of the week is Monday.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.DisplayMonth(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.DisplayMonth"/>.
            Sets the month displayed in the calendar.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ShowHeader(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.ShowHeader"/>.
            Sets a value indicating whether the control displays the header area with the current month and navigation buttons.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.MonthView(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.MonthView"/>.
            Sets a value indicating whether the calendar displays a month or a year.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ItemFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.ItemFormatter"/>.
            Sets a formatter function to customize dates in the calendar.
            </summary>
            <remarks>
            The formatter function can add any content and any date. It allows complete customization of the appearance and behavior of the calendar.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Calendar.OnClientValueChanged"/> client event.
            Occurs after a new date is selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientDisplayMonthChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Calendar.OnClientDisplayMonthChanged"/> client event.
            Occurs after the DisplayMonth property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.ItemValidator(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.ItemValidator"/>.
            Sets the name of a validator javascript function to determine whether dates are valid for selection.
            </summary>
            <remarks>
            If specified, the validator function should take one parameter representing the date to be tested, and should return false if the date is invalid and should not be selectable.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.OnClientFormatItem(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Calendar.OnClientFormatItem"/> client event.
            Occurs when an element representing a day in the calendar has been created.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.IsReadOnly"/>.
            Sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.SelectionMode(C1.Web.Mvc.DateSelectionMode)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.SelectionMode"/>.
            Sets a value that indicates whether users can select days, months, or no values at all.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatDayHeaders(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.FormatDayHeaders"/>.
            Sets the format used to display the headers above the days in month view.
            </summary>
            <remarks>
            The default value for this property is 'ddd'.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatDays(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.FormatDays"/>.
            Sets the format used to display the days in month view.
            </summary>
            <remarks>
            The default value for this property is 'd ' (the space after the 'd' prevents the format from being interpreted as 'd', the standard format used to represent the short date pattern).
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatMonths(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.FormatMonths"/>.
            Sets the format used to display the months in year view.
            </summary>
            <remarks>
            The default value for this property is 'MMM'.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatYear(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.FormatYear"/>.
            Sets the format used to display the year above the months in year view.
            </summary>
            <remarks>
            The default value for this property is 'yyyy'.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CalendarBuilder.FormatYearMonth(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Calendar.FormatYearMonth"/>.
            Sets the format used to display the month and year above the calendar in month view.
            </summary>
            <remarks>
            The default value for this property is 'y'.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ChartAnimation`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.AnimationMode(C1.Web.Mvc.AnimationMode)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAnimation`1.AnimationMode"/>.
            Sets whether the plot points animate one at a time, series by series, or all at once. The whole animation is still completed within the duration.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.AxisAnimation(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAnimation`1.AxisAnimation"/>.
            Sets a value indicating whether animation is applied to the axis.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.Duration(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAnimation`1.Duration"/>.
            Sets the length of entire animation in milliseconds.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.Easing(C1.Web.Mvc.Easing)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAnimation`1.Easing"/>.
            Sets the easing function applied to the animation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationBuilder`1.#ctor(C1.Web.Mvc.ChartAnimation{`0})">
            <summary>
            Create one ChartAnimationBuilder instance.
            </summary>
            <param name="extender">The ChartAnimation extender</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ChartGestures`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.Enable(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartGestures`1.Enable"/>.
            Sets the enable of the ChartGestures.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.InteractiveAxes(C1.Web.Mvc.InteractiveAxes)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartGestures`1.InteractiveAxes"/>.
            Sets the interactive axes of the ChartGestures.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.MouseAction(C1.Web.Mvc.MouseAction)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartGestures`1.MouseAction"/>.
            Sets the mouse action of the ChartGestures.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.PosX(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartGestures`1.PosX"/>.
            Sets the initial position of the axis X. 
            </summary>
            <remarks>
            The value represents initial position on the axis when the Scale is less than 1. Otherwise, the Value has no effect. The Value should lie between 0 to 1.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.PosY(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartGestures`1.PosY"/>.
            Sets the initial position of the axis Y. 
            </summary>
            <remarks>
            The value represents initial position on the axis when the Scale is less than 1. Otherwise, the Value has no effect. The Value should lie between 0 to 1.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.ScaleX(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartGestures`1.ScaleX"/>.
            Sets the initial scale of axis X.
            </summary>
            <remarks>
            The scale should be more than 0 and less than or equal to 1. The scale specifies which part of the range between Min and Max is shown. When scale is 1 (default value), the whole axis range is visible.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.ScaleY(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartGestures`1.ScaleY"/>.
            Sets the initial scale of axis Y. 
            </summary>
            <remarks>
            The scale should be more than 0 and less than or equal to 1. The scale specifies which part of the range between Min and Max is shown. When scale is 1 (default value), the whole axis range is visible.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesBuilder`1.#ctor(C1.Web.Mvc.ChartGestures{`0})">
            <summary>
            Create one ChartGesturesBuilder instance.
            </summary>
            <param name="extender">The ChartGestures extender</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.CollectionViewService`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ServiceBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Service"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ITemplateBuilder`1">
            <summary>
            Defines the interface of the builder which can be used as a template.
            </summary>
            <typeparam name="T">The builder type.</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ITemplateBuilder`1.ToTemplate">
            <summary>
            Transfers current builder to template mode.
            </summary>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ITemplateBuilder`1.TemplateBind(System.String,System.String)">
            <summary>
            When the builder works in template mode, bind the property which name is specified 
            to some item which name is specified.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <param name="boundName">The specified item name in DataContext.</param>
            <returns>Current builder.</returns>
            <remarks>
            It only works in template mode.
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ServiceBuilder`2"/> instance to configurate <paramref name="service"/>.
            </summary>
            <param name="service">The <see cref="T:C1.Web.Mvc.Service"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.Id(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Component.Id"/>.
            Sets the id of the service.
            </summary>
            <param name="id">The id.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.ToTemplate">
            <summary>
            Transfers current builder to template mode.
            </summary>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ServiceBuilder`2.TemplateBind(System.String,System.String)">
            <summary>
            When the builder works in template mode, bind the property which name is specified 
            to some item which name is specified.
            </summary>
            <param name="propertyName">The specified property name.</param>
            <param name="boundName">The specified item name in DataContext.</param>
            <returns>Current builder.</returns>
            <remarks>
            It only works in template mode.
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.DisableServerRead(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.DisableServerRead"/>.
            Sets whether to disable server-side sorting, paging and filtering.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.PageSize(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.PageSize"/>.
            Sets the page size. 0 means to disable paging.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Filter(System.Predicate{`0})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.Filter"/>.
            Sets a method used to determine if an item is suitable for inclusion in the view.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.InitialItemsCount(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.InitialItemsCount"/>.
            Sets a number value which decides the count of the initial loaded items. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientQueryData(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientQueryData"/> client event.
            Sets the name JavaScript function which to collect the ajax query data.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientQueryComplete(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientQueryComplete"/> client event.
            Occurs when the query requests complete.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.GetError(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.GetError"/>.
            Sets a callback that determines whether a specific property of an item contains validation errors.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientCollectionChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientCollectionChanged"/> client event.
            Occurs when the collection changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientCurrentChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientCurrentChanged"/> client event.
            Occurs after the current item changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientCurrentChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientCurrentChanging"/> client event.
            Occurs before the current item changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientPageChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientPageChanged"/> client event.
            Occurs after the page index changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientPageChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientPageChanging"/> client event.
            Occurs before the page index changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientSourceCollectionChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientSourceCollectionChanging"/> client event.
            Occurs before the sourceCollection property in client changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientSourceCollectionChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientSourceCollectionChanged"/> client event.
            Occurs after the sourceCollection property in client changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.NewItemCreator(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.NewItemCreator"/>.
            Sets a function that creates new items for the collection.
            </summary>
            <remarks>
            If the creator function is not supplied, try to create an uninitialized item of the appropriate type.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientError(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientError"/> client event.
            Occurs when there are errors from the server side.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientReponseTextParsing(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientReponseTextParsing"/> client event.
            Occurs when parsing the response text.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientRequestDataStringifying(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientRequestDataStringifying"/> client event.
            Occurs when serializing the request data.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.#ctor(C1.Web.Mvc.CollectionViewService{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.CollectionViewService`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Create(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.CreateActionUrl"/>.
            Sets the url of create action.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Update(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.UpdateActionUrl"/>.
            Sets the url of update action.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Delete(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.DeleteActionUrl"/>.
            Sets the url of delete action.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.BatchEdit(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.BatchEditActionUrl"/>.
            Sets the url of batch edit action.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.MoveToPage(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.PageIndex"/>.
            Sets the page index.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.SourceCollection"/>.
            Sets the source collection.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Bind(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.ReadActionUrl"/>.
            Sets the url of read action.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.GroupDescriptions(System.Collections.Generic.IEnumerable{C1.Web.Mvc.GroupDescription})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.GroupDescriptions"/>.
            Sets the group descriptions.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.PropertyGroupDescriptions(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.PropertyGroupDescription,C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder}})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.GroupDescriptions"/>.
            Sets the group descriptions with an action.
            </summary>
            <param name="build">An action to create the group descriptions.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.GroupBy(System.String[])">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.GroupDescriptions"/>.
            Sets the group descriptions with a name list.
            </summary>
            <param name="names">A list of the property names for grouping.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OrderBy(System.String[])">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.SortDescriptions"/>.
            Sets the sort descriptions with a name list in ascending order.
            </summary>
            <param name="names">A name list sorting by in ascending order.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OrderByDescending(System.String[])">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.SortDescriptions"/>.
            Sets the sort descriptions with a name list in descending order.
            </summary>
            <param name="names">A name list sorting by in descending order.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.SortDescriptions(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.SortDescription,C1.Web.Mvc.Fluent.SortDescriptionBuilder}})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CollectionViewService`1.SortDescriptions"/>.
            Sets the sort descriptions.
            </summary>
            <param name="build">An action to build the sort description collection.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.OnClientCollectingQueryData(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.CollectionViewService`1.OnClientQueryData"/> client event.
            Obsoleted. Please use OnClientQueryData instead.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CollectionViewServiceBuilder`1.Id(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Component.Id"/>.
            Sets the id of the service.
            </summary>
            <param name="id">The id.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColorPickerBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ColorPicker"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.#ctor(C1.Web.Mvc.ColorPicker)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ColorPickerBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.ColorPicker"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.ShowAlphaChannel(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColorPicker.ShowAlphaChannel"/>.
            Sets a value indicating whether the ColorPicker allows users to edit the color's alpha channel (transparency).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.ShowColorString(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColorPicker.ShowColorString"/>.
            Sets a value indicating whether the ColorPicker shows a string representation of the current color.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ColorPicker.OnClientValueChanged"/> client event.
            Occurs after a new color is selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.Palette(System.Drawing.Color[])">
            <summary>
            Sets the Palette property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.Palette(System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Sets the Palette property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColorPickerBuilder.Value(System.Drawing.Color)">
            <summary>
            Sets the currently selected color.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ComboBoxBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ComboBox`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBuilder`1.#ctor(C1.Web.Mvc.ComboBox{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ComboBoxBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.ComboBox`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ComboBoxBuilder`1.Name(System.String)">
            <summary>
            Sets the Name property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexChartBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexChart`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexChartCore`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexChartCore`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisX(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.AxisX"/>.
            Sets the main X axis.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisY(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.AxisY"/>.
            Sets the main Y axis.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.BindingX(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.BindingX"/>.
            Sets the name of the property that contains the X data values.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.SymbolSize(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.SymbolSize"/>.
            Sets the size of the symbols used for all Series objects. This property may be overridden by the symbolSize property on each series. (see Series class)
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.InterpolateNulls(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.InterpolateNulls"/>.
            Sets whether to interpolate null values in the data.  If true, the chart interpolates the value of any missing data based on neighboring points. If false, it leaves a break in lines and areas at the points with null values.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.LegendToggle(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.LegendToggle"/>.
            Sets a value indicating whether clicking legend items toggles the series visibility in the chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.OnClientSeriesVisibilityChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexChartCore`1.OnClientSeriesVisibilityChanged"/> client event.
            Occurs when the series visibility changes
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.DataLabel(System.Action{C1.Web.Mvc.Fluent.DataLabelBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.DataLabel"/>.
            Get or set the style of point data label
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.SelectionIndex(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.SelectionIndex"/>.
            Sets the index of selected chart series.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Binding(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChartCore`1.Binding"/>.
            Sets the name of the property that contains the Y values.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.String)">
            <summary>
            Bind data with specified x data field name and the url of the action which is used for reading data.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.String,System.String)">
            <summary>
            Bind data with specified x data field name, value property and the url of the action which is used for reading data.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="valueProperty">Sets the name of the value data field.</param>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind data with specified x data field name and a data source.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="sourceCollection">The data source</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.Bind(System.String,System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind data with specified x data field name and value property of the data source.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="valueProperty">Sets the name of the value data field.</param>
            <param name="sourceCollection">The data source</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisX(C1.Web.Mvc.Chart.Position)">
            <summary>
            Sets x-axis's position.
            </summary>
            <param name="position">The position</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartCoreBuilder`3.AxisY(C1.Web.Mvc.Chart.Position)">
            <summary>
            Sets y-axis's position.
            </summary>
            <param name="position">The position</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.#ctor(C1.Web.Mvc.FlexChart{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexChartBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexChart`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.ChartType(C1.Web.Mvc.Chart.ChartType)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChart`1.ChartType"/>.
            Sets the type of chart to create
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Rotated(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexChart`1.Rotated"/>.
            Sets a value indicating whether to flip the axes so X is vertical and Y horizontal.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Stacking(C1.Web.Mvc.Chart.Stacking)">
            <summary>
            Sets the Stacking property.
            </summary>
            <remarks>
            Gets or sets whether and how series objects are stacked.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Options(System.Action{C1.Web.Mvc.Fluent.ExtraOptionsBuilder})">
            <summary>
            Sets the Options property.
            </summary>
            <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.Series(System.Action{C1.Web.Mvc.Fluent.SeriesListFactory{`0,C1.Web.Mvc.FlexChart{`0},C1.Web.Mvc.ChartSeries{`0},C1.Web.Mvc.Fluent.ChartSeriesBuilder{`0},C1.Web.Mvc.Chart.ChartType}})">
            <summary>
            Set the FlexChart series.
            </summary>
            <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.PlotAreas(System.Action{C1.Web.Mvc.Fluent.PlotAreaListFactory{`0,C1.Web.Mvc.FlexChart{`0},C1.Web.Mvc.PlotArea,C1.Web.Mvc.Fluent.PlotAreaBuilder}})">
            <summary>
            Set the PlotAreas.
            </summary>
            <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexChartBuilder`1.AddExtender(C1.Web.Mvc.Extender)">
            <summary>
            Add an extender.
            </summary>
            <remarks>
            This is no longer used, just remove it.  Please use specific extender instead.
            </remarks>
            <param name="extender">The specified extender.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexGrid`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexGridBase`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexGridBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowAddNew(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AllowAddNew"/>.
            Sets a value that indicates whether the grid should provide a new row template so users can add items to the source collection.
            </summary>
            <remarks>
            The new row template will not be displayed if the IsReadOnly property
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowDelete(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AllowDelete"/>.
            Sets a value that indicates whether the grid should delete selected rows when the user presses the Delete key.
            </summary>
            <remarks>
            Selected rows will not be deleted if the IsReadOnly property is set to true.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowDragging(C1.Web.Mvc.Grid.AllowDragging)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AllowDragging"/>.
            Sets whether users are allowed to drag rows and/or columns with the mouse.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowMerging(C1.Web.Mvc.Grid.AllowMerging)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AllowMerging"/>.
            Sets which parts of the grid provide cell merging.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowResizing(C1.Web.Mvc.Grid.AllowResizing)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AllowResizing"/>.
            Sets whether users are allowed to resize rows and/or columns with the mouse.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AllowSorting(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AllowSorting"/>.
            Sets whether users are allowed to sort columns by clicking the column header cells.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoClipboard(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AutoClipboard"/>.
            Sets whether the grid should handle clipboard shortcuts.
            </summary>
            <remarks>
            The clipboard commands are as follows:ctrl+C, ctrl+Ins,Copy grid selection to cliboard;ctrl+V, shift+Ins,Paste clipboard text to grid selection.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoGenerateColumns(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AutoGenerateColumns"/>.
            Sets whether the grid should generate columns automatically based on the itemsSource.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AutoSizeMode(C1.Web.Mvc.Grid.AutoSizeMode)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.AutoSizeMode"/>.
            Sets which cells should be taken into account when auto-sizing a row or column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ChildItemsPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ChildItemsPath"/>.
            Sets the name of the property used to generate child rows in hierarchical grids.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.FrozenColumns(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.FrozenColumns"/>.
            Sets the number of frozen columns.
            </summary>
            <remarks>
            Frozen columns do not scroll, but the cells they contain may be selected and edited.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.FrozenRows(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.FrozenRows"/>.
            Sets the number of frozen columns.
            </summary>
            <remarks>
            Frozen columns do not scroll, but the cells they contain may be selected and edited.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.GroupHeaderFormat(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.GroupHeaderFormat"/>.
            Sets the format string used to create the group header content.
            </summary>
            <remarks>
            The string may contain any text, plus the following replacement strings:
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.HeadersVisibility(C1.Web.Mvc.Grid.HeadersVisibility)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.HeadersVisibility"/>.
            Sets a value that determines whether the row and column headers are visible.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.IsReadOnly"/>.
            Sets whether the user can edit the grid cells by typing into them.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.SelectionMode(C1.Web.Mvc.Grid.SelectionMode)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.SelectionMode"/>.
            Sets the current selection mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowGroups(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowGroups"/>.
            Sets whether the grid should insert group rows to delimit data groups.
            </summary>
            <remarks>
            Data groups are created by modifying the groupDescriptions property of the ICollectionView object used as the grid's itemsSource.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowSort(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowSort"/>.
            Sets whether the grid should display sort indicators in the column headers.
            </summary>
            <remarks>
            Sorting is controlled by the sortDescriptions property of the ICollectionView object used as the grid's itemsSource.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.TreeIndent(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.TreeIndent"/>.
            Sets the indent used to offset row groups of different levels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizedColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizedColumn"/> client event.
            Occurs after the user auto-sizes a column by double-clicking the right edge of a column header cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizedRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizedRow"/> client event.
            Occurs after the user auto-sizes a row by double-clicking the bottom edge of a row header cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizingColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizingColumn"/> client event.
            Occurs before the user auto-sizes a column by double-clicking the right edge of a column header cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientAutoSizingRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientAutoSizingRow"/> client event.
            Occurs before the user auto-sizes a row by double-clicking the bottom edge of a row header cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientBeginningEdit(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientBeginningEdit"/> client event.
            Occurs before a cell enters edit mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCellEditEnded(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientCellEditEnded"/> client event.
            Occurs when a cell edit has been committed or canceled.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCellEditEnding(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientCellEditEnding"/> client event.
            Occurs when a cell edit is ending.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCopied(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientCopied"/> client event.
            Occurs after the user has copied the selection content to the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientCopying(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientCopying"/> client event.
            Occurs when the user is copying the selection content to the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
            <remarks>
            The event handler may cancel the copy operation.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDeletedRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDeletedRow"/> client event.
            Occurs after the user has deleted a row by pressing the Delete key.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDeletingRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDeletingRow"/> client event.
            Occurs when the user is deleting a selected row by pressing the Delete key (see the allowDelete property).
            </summary>
            <remarks>
            The event handler may cancel the row deletion.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggedColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggedColumn"/> client event.
            Occurs when the user finishes dragging a column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggedRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggedRow"/> client event.
            Occurs when the user finishes dragging a row.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingColumn"/> client event.
            Occurs when the user starts dragging a column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingRow"/> client event.
            Occurs when the user starts dragging a row.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientFormatItem(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientFormatItem"/> client event.
            Occurs when an element representing a cell has been created.
            </summary>
            <remarks>
            This event can be used to format cells for display.It is similar in purpose to the itemFormatter property, but has the advantage of allowing multiple independent handlers.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientGroupCollapsedChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientGroupCollapsedChanged"/> client event.
            Occurs after a group has been expanded or collapsed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientGroupCollapsedChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientGroupCollapsedChanging"/> client event.
            Occurs when a group is about to be expanded or collapsed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientItemsSourceChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientItemsSourceChanged"/> client event.
            Occurs after the grid has been bound to a new items source.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientLoadedRows(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientLoadedRows"/> client event.
            Occurs after the grid rows have been bound to the data source.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientLoadingRows(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientLoadingRows"/> client event.
            Occurs before the grid rows are bound to the data source.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPasted(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientPasted"/> client event.
            Occurs after the user has pasted content from the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPasting(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientPasting"/> client event.
            Occurs when the user is pasting content from the clipboard by pressing one of the clipboard shortcut keys (see the autoClipboard property).
            </summary>
            <remarks>
            The event handler may cancel the copy operation.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPrepareCellForEdit(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientPrepareCellForEdit"/> client event.
            Occurs when an editor cell is created and before it becomes active.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizedColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizedColumn"/> client event.
            Occurs when the user finishes resizing a column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizedRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizedRow"/> client event.
            Occurs when the user finishes resizing rows.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizingColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizingColumn"/> client event.
            Occurs as columns are resized.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientResizingRow(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientResizingRow"/> client event.
            Occurs as rows are resized.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowAdded(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowAdded"/> client event.
            Occurs when the user creates a new item by editing the new row template (see the allowAddNew property).
            </summary>
            <remarks>
            The event handler may customize the content of the new item or cancel the new item creation.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditEnded(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditEnded"/> client event.
            Occurs when a row edit has been committed or canceled.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditEnding(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditEnding"/> client event.
            Occurs when a row edit is ending, before the changes are committed or canceled.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientScrollPositionChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientScrollPositionChanged"/> client event.
            Occurs after the control has scrolled.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSelectionChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientSelectionChanged"/> client event.
            Occurs after selection changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSelectionChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientSelectionChanging"/> client event.
            Occurs before selection changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSortedColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientSortedColumn"/> client event.
            Occurs after the user applies a sort by clicking on a column header.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientSortingColumn(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientSortingColumn"/> client event.
            Occurs before the user applies a sort by clicking on a column header.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatedLayout(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatedLayout"/> client event.
            Occurs after the grid has updated its internal layout.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatingLayout(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatingLayout"/> client event.
            Occurs before the grid updates its internal layout.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatedView(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatedView"/> client event.
            Occurs when the grid finishes creating/updating the elements that  make up the current view.
            </summary>
            <remarks>
            The grid updates the view in response to several actions, including: <ul><li>refreshing the grid or its data source,</li><li>adding, removing, or changing rows or columns,</li><li>resizing or scrolling the grid,</li><li>changing the selection.</li></ul>
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientUpdatingView(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientUpdatingView"/> client event.
            Occurs when the grid starts creating/updating the elements that make up the current view.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ItemFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ItemFormatter"/>.
            Sets a formatter function used to customize cells on this grid.
            </summary>
            <remarks>
            The formatter function can add any content to any cell. It provides complete flexibility over the appearance and behavior of grid cells.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.RowHeadersTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.RowHeadersTemplate"/>.
            Sets the templates applied in row header cells.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ColumnHeadersTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ColumnHeadersTemplate"/>.
            Sets the templates applied in the column header cells.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.CellsTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.CellsTemplate"/>.
            Sets the templates for the content cells.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.TopLeftCellsTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.TopLeftCellsTemplate"/>.
            Sets the templates for the topleft cells.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.DeferResizing(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.DeferResizing"/>.
            Sets whether row and column resizing should be deferred until.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.SortRowIndex(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.SortRowIndex"/>.
            Sets the index of row in the column header panel that shows and changes the current sort.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ColumnLayout(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ColumnLayout"/>.
            Sets a JSON string that defines the current column layout." remarks="The column layout string represents an array with the columns and their properties. It can be used to persist column layouts defined by users so they are preserved across sessions, and can also be used to implement undo/redo functionality in applications that allow users to modify the column layout.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowMarquee(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowMarquee"/>.
            Sets a value that indicates whether the grid should display a marquee element around the current selection.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowSelectedHeaders(C1.Web.Mvc.Grid.HeadersVisibility)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowSelectedHeaders"/>.
            Sets a value that indicates whether the grid should add class names to indicate selected header cells.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.StickyHeaders(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.StickyHeaders"/>.
            Sets a value that determines whether column headers should remain when the user scrolls the window.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ImeEnabled(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ImeEnabled"/>.
            Sets a value that determines whether the grid should support Input Method Editors (IME) while not in edit mode.
            </summary>
            <remarks>
            This property is relevant only for sites/applications in Japanese, Chinese, Korean, and other languages that require IME support.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PreserveOutlineState(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.PreserveOutlineState"/>.
            Sets a value that determines whether the grid should preserve the expanded/collapsed state of nodes when the data is refreshed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PreserveSelectedState(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.PreserveSelectedState"/>.
            Sets a value that determines whether the grid should preserve the selected state of rows when the data is refreshed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowErrors(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowErrors"/>.
            Sets a value that determines whether the grid should add the 'wj-state-invalid' class to cells that contain validation errors, and tooltips with error descriptions.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ValidateEdits(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ValidateEdits"/>.
            Sets a value that determines whether the grid should remain in edit mode when the user tries to commit edits that fail validation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditStarted(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditStarted"/> client event.
            Occurs after a row enters edit mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientRowEditStarting(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientRowEditStarting"/> client event.
            Occurs before a row enters edit mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.NewRowAtTop(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.NewRowAtTop"/>.
            Sets a value that indicates whether the new row template should be located at the top of the grid or at the bottom.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingColumnOver(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingColumnOver"/> client event.
            Occurs as the user drags a column to a new position.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientDraggingRowOver(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientDraggingRowOver"/> client event.
            Occurs as the user drags a row to a new position.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPastedCell(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientPastedCell"/> client event.
            Occurs after the user has pasted content from the clipboard into a cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OnClientPastingCell(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.FlexGridBase`1.OnClientPastingCell"/> client event.
            Occurs when the user is pasting content from the clipboard into a cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowAlternatingRows(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ShowAlternatingRows"/>.
            Sets a value that determines whether the grid should add the 'wj-alt' class to cells in alternating rows.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ColumnFootersTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ColumnFootersTemplate"/>.
            Sets the templates applied in column footers cells.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.BottomLeftCellsTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.BottomLeftCellsTemplate"/>.
            Sets the templates applied in bottom left cells.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.CloneFrozenCells(System.Nullable{System.Boolean})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.CloneFrozenCells"/>.
            Sets a value that determines whether the FlexGrid should clone frozen cells and show them in a separate element to improve perceived performance while scrolling.
            </summary>
            <remarks>
            This property is set to null by default, which causes the grid to select the best setting depending on the browser.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ItemValidator(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.ItemValidator"/>.
            Sets a validator function to determine whether cells contain valid data.
            </summary>
            <remarks>
            If specified, the validator function should take two parameters containing the cell's row and column indices, and should return a string containing the error description.  This property is especially useful when dealing with unbound grids, since bound grids can be validated using the <see cref="P:C1.Web.Mvc.CollectionViewService`1.GetError"/> property instead.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.KeyActionEnter(C1.Web.Mvc.Grid.KeyAction)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.KeyActionEnter"/>.
            Sets the action to perform when the ENTER key is pressed.
            </summary>
            <remarks>
            The default setting for this property is <see cref="F:C1.Web.Mvc.Grid.KeyAction.MoveDown"/>, which causes the control to move the selection to the next row. This is the standard Excel behavior.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.KeyActionTab(C1.Web.Mvc.Grid.KeyAction)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.KeyActionTab"/>.
            Sets the action to perform when the TAB key is pressed.
            </summary>
            <remarks>
            The default setting for this property is <see cref="F:C1.Web.Mvc.Grid.KeyAction.None"/>, which causes the browser to select the next or previous controls on the page when the TAB key is pressed. This is the recommended setting to improve page accessibility.  In previous versions, the default was set to <see cref="F:C1.Web.Mvc.Grid.KeyAction.Cycle"/>, which caused the control to move the selection across and down he grid. This is the standard Excel behavior, but is not good for accessibility.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.RowHeaderPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridBase`1.RowHeaderPath"/>.
            Sets the name of the property used to create row header cells.
            </summary>
            <remarks>
            Row header cells are not visible or selectable. They are meant for use with accessibility tools.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ScrollIntoView(System.Int32,System.Int32)">
            <summary>
            Scrolls the grid to bring a specific cell into view.
            </summary>
            <param name="left">the scroll left of the grid's scrollbar.</param>
            <param name="top">the scroll top of the grid's scrollbar.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.Select(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Selects a cell range and optionally scrolls it into view.
            </summary>
            <param name="row">Index of the first row in this range.</param>
            <param name="col">Index of the first column in this range.</param>
            <param name="row2">Index of the last row in this range.</param>
            <param name="col2">Index of the last column in this range.</param>
            <remarks>
            If row2 and col2 are not set or set to Null, it means the single cell specified by row and col will be selected.
            </remarks>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.Columns(System.Action{C1.Web.Mvc.Fluent.ListItemFactory{C1.Web.Mvc.Column,C1.Web.Mvc.Fluent.ColumnBuilder}})">
            <summary>
            Configure <see cref="P:C1.Web.Mvc.FlexGridBase`1.Columns"/>.
            </summary>
            <param name="builder">The builder action.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.AddExtender(C1.Web.Mvc.Extender)">
            <summary>
            Add a extender.
            </summary>
            <remarks>
            This is no longer used, just remove it.  Please use specific extender instead.
            </remarks>
            <param name="extender">The specified extender.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.GroupBy(System.String[])">
            <summary>
            Configure <see cref="T:C1.Web.Mvc.PropertyGroupDescription"/>.
            </summary>
            <param name="names">The property names used for grouping.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OrderBy(System.String[])">
            <summary>
            Configure <see cref="T:C1.Web.Mvc.SortDescription"/>.
            </summary>
            <param name="names">Sort by these names.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.OrderByDescending(System.String[])">
            <summary>
            Configure <see cref="T:C1.Web.Mvc.SortDescription"/>.
            </summary>
            <param name="names">Sort by these names with descending.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.PageSize(System.Int32)">
            <summary>
            Make ItemsSource pagable with specified page size.
            0 means to disable paging.
            </summary>
            <param name="pageSize">The page size.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBaseBuilder`3.ShowColumnFooters(System.Boolean,System.String)">
            <summary>
            Sets whether to show a group row to display the aggregates in the column footers panel.
            </summary>
            <param name="value">A bool value indicates whether to show a group row.</param>
            <param name="rowHeaderText">The row header text of the group row. If it is not set, it will use the default value: a sigma character.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridBuilder`1.#ctor(C1.Web.Mvc.FlexGrid{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexGridBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexGrid`1"/> object to be configurated.</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexGridDetailProvider`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.CreateDetailCell(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.CreateDetailCell"/>.
            Sets the callback function that creates detail cells.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DetailVisibilityMode(C1.Web.Mvc.Grid.DetailVisibilityMode)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailVisibilityMode"/>.
            Specifies when and how the row details are displayed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.MaxHeight(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.MaxHeight"/>.
            Sets the maximum height of the detail rows, in pixels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.RowHasDetail(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.RowHasDetail"/>.
            Sets the callback function that determines whether a row has details.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DetailRowTemplateId(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailRowTemplateId"/>.
            Sets the id of the template for the grid detail row.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DetailRowTemplateContent(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.DetailRowTemplateContent"/>.
            Sets the content of the template for the grid detail row.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.DisposeDetailCell(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.DisposeDetailCell"/>.
            Sets the callback function that disposes of detail cells.
            </summary>
            <remarks>
            The callback function takes a Row as a parameter and disposes of any resources associated with the detail cell.This function is optional. Use it in cases where the createDetailCell function allocates resources that are not automatically garbage-collected.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.IsAnimated(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridDetailProvider`1.IsAnimated"/>.
            Sets a value that indicates whether to use animation when showing row details.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder`1.#ctor(C1.Web.Mvc.FlexGridDetailProvider{`0})">
            <summary>
            Create one FlexGridDetailProviderBuilder instance.
            </summary>
            <param name="extender">The FlexGridDetailProvider extender.</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexGridGroupPanel`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.MaxGroups(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridGroupPanel`1.MaxGroups"/>.
            Sets the maximum number of groups allowed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.HideGroupedColumns(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridGroupPanel`1.HideGroupedColumns"/>.
            Sets a value indicating whether the panel hides grouped columns in the owner grid.
            </summary>
            <remarks>
            The FlexGrid displays grouping information in row headers, so it is usually a good idea to hide grouped columns since they display redundant information.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.Placeholder(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridGroupPanel`1.Placeholder"/>.
            Sets a string to display in the control when it contains no groups.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.IsDisabled(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexGridGroupPanel`1.IsDisabled"/>.
            Sets a value that determines whether the control is disabled.
            </summary>
            <remarks>
            Disabled controls cannot get mouse or keyboard events.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.#ctor(C1.Web.Mvc.FlexGridGroupPanel{`0})">
            <summary>
            Create one FlexGridGroupPanelBuilder instance.
            </summary>
            <param name="extender">The FlexGridGroupPanel extender.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder`1.Selector(System.String)">
            <summary>
            Sets the Selector property.
            </summary>
            <remarks>
            Gets or sets a value which specifies the selector.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexPieBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexPie`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexPieBase`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexPieBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.BindingName(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.BindingName"/>.
            Sets the name of the property that contains the name of the data item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.InnerRadius(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.InnerRadius"/>.
            Sets the size of the pie's inner radius.
            </summary>
            <remarks>
            The inner radius is measured as a fraction of the pie radius. The default value for this property is zero, which creates a pie. Setting this property to values greater than zero creates pies with a hole in the middle, also known as doughnut charts.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.IsAnimated(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.IsAnimated"/>.
            Sets a value indicating whether to use animation when items are selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Offset(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.Offset"/>.
            Sets the offset of the slices from the pie center. 
            </summary>
            <remarks>
            The offset is measured as a fraction of the pie radius.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Reversed(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.Reversed"/>.
            Sets whether angles are reversed (counter-clockwise).
            </summary>
            <remarks>
            The default value is false, which causes angles to be measured in the clockwise direction.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.SelectedItemOffset(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.SelectedItemOffset"/>.
            Sets the offset of the selected slice from the pie center.
            </summary>
            <remarks>
            Offsets are measured as a fraction of the pie radius.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.SelectedItemPosition(C1.Web.Mvc.Chart.Position)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.SelectedItemPosition"/>.
            Sets the position of the selected slice.
            </summary>
            <remarks>
            Setting this property to a value other than 'None' causes the pie to rotate when an item is selected. Note that in order to select slices by clicking the chart, you must set theselectionMode property to "Point".
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.StartAngle(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.StartAngle"/>.
            Sets the starting angle for the pie slices, in degrees.
            </summary>
            <remarks>
            Angles are measured clockwise, starting at the 9 o'clock position.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.DataLabel(System.Action{C1.Web.Mvc.Fluent.PieDataLabelBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.DataLabel"/>.
            Sets the style of point data label.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.SelectedIndex(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.SelectedIndex"/>.
            Sets the index of the selected slice.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Binding(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexPieBase`1.Binding"/>.
            Sets the name of the property that contains the chart values.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Bind(System.String,System.String,System.String)">
            <summary>
            Bind data with specified name property, value property and the url of the action which is used for reading data.
            </summary>
            <param name="nameProperty">Gets or sets the name of the property that contains the name of the data item.</param>
            <param name="valueProperty">The name of the property that contains the Y values.</param>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBaseBuilder`3.Bind(System.String,System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind data with specified name property and value property of the data source.
            </summary>
            <param name="nameProperty">Gets or sets the name of the property that contains the name of the data item.</param>
            <param name="valueProperty">The name of the property that contains the Y values.</param>
            <param name="sourceCollection">The data source</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexPieBuilder`1.#ctor(C1.Web.Mvc.FlexPie{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexPieBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexPie`1"/> object to be configurated.</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexRadarBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexRadar`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.#ctor(C1.Web.Mvc.FlexRadar{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexRadarBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.FlexRadar`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.ChartType(C1.Web.Mvc.Chart.RadarChartType)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexRadar`1.ChartType"/>.
            Sets the type of radar chart to be created.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.Reversed(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexRadar`1.Reversed"/>.
            Sets a value that determines whether angles are reversed (counter-clockwise). The default value is false, which causes angles to be measured in the clockwise direction.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.Stacking(C1.Web.Mvc.Chart.Stacking)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexRadar`1.Stacking"/>.
            Sets a value that determines whether and how the series objects are stacked.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.StartAngle(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexRadar`1.StartAngle"/>.
            Sets the starting angle for the radar, in degrees. Angles are measured clockwise, starting at the 12 o'clock position.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.TotalAngle(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FlexRadar`1.TotalAngle"/>.
            Sets the total angle for the radar, in degrees.  Its default value is 360. The value must be greater than 0, or less than or equal to 360.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarBuilder`1.Series(System.Action{C1.Web.Mvc.Fluent.SeriesListBaseFactory{`0,C1.Web.Mvc.FlexRadar{`0},C1.Web.Mvc.FlexRadarSeries{`0},C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder{`0},C1.Web.Mvc.Chart.RadarChartType}})">
            <summary>
            Set the FlexChart series.
            </summary>
            <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputDateBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputDate"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputDateBase"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputDateBase"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Value(System.Nullable{System.DateTime})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.Value"/>.
            Sets the current date.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Required(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.Required"/>.
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Min(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.Min"/>.
            Sets the earliest date that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Max(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.Max"/>.
            Sets the latest date that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Format(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.Format"/>.
            Sets the format used to display the selected date.
            </summary>
            <remarks>
            The format string is expressed as a .NET-style Date format string.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.Mask(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.Mask"/>.
            Sets a mask to use while editing.
            </summary>
            <remarks>
            The mask format is the same one that the InputMask control uses.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.InputDateBase.OnClientValueChanged"/> client event.
            Occurs after a new date is selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.ItemValidator(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.ItemValidator"/>.
            Sets the name of a validator javascript function to determine whether dates are valid for selection.
            </summary>
            <remarks>
            If specified, the validator function should take one parameter representing the date to be tested, and should return false if the date is invalid and should not be selectable.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.InputType(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.InputType"/>.
            Sets the "type" attribute of the HTML input element hosted by the control.
            </summary>
            <remarks>
            By default, this property is set to "tel", a value that causes mobile devices to show a numeric keypad that includes a negative sign and a decimal separator.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.ItemFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.ItemFormatter"/>.
            Sets a formatter function to customize dates in the drop-down calendar.
            </summary>
            <remarks>
            The formatter function can add any content to any date. It allows complete customization of the appearance and behavior of the calendar.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.IsRequired(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.IsRequired"/>.
            Sets a value indicating whether the control value must be a Date or whether it can be set to null (by deleting the content of the control).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBaseBuilder`2.SelectionMode(C1.Web.Mvc.DateSelectionMode)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateBase.SelectionMode"/>.
            Sets a value that indicates whether users can select days, months, or no values at all.
            </summary>
            <remarks>
            This property affects the behavior of the drop-down calendar, but not the format used to display dates.  If you set selectionMode to 'Month', you should normally set the format property to 'MMM yyyy' or some format that does not include the day.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateBuilder.#ctor(C1.Web.Mvc.InputDate)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputDateBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputDate"/> object to be configurated.</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputDateTimeBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputDateTime"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.#ctor(C1.Web.Mvc.InputDateTime)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputDateTimeBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputDateTime"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeFormat(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateTime.TimeFormat"/>.
            Sets the format used to display times in the drop-down list. 
            </summary>
            <remarks>
            This property does not affect the value shown in the control's input element.  
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeMax(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateTime.TimeMax"/>.
            Sets the latest time that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeMin(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateTime.TimeMin"/>.
            Sets the earliest time that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputDateTimeBuilder.TimeStep(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputDateTime.TimeStep"/>.
            Sets the number of minutes between entries in the drop-down list of times.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputMaskBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputMask"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.#ctor(C1.Web.Mvc.InputMask)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputMaskBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputMask"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.Value(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputMask.Value"/>.
            Sets the text currently shown in the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.Mask(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputMask.Mask"/>.
            Sets the mask used to validate the input as the user types.
            </summary>
            <remarks>
            The mask is defined as a string with one or more of the masking characters listed in the InputMask topic.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.PromptChar(System.Char)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputMask.PromptChar"/>.
            Sets the symbol used to show input positions in the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.Placeholder(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputMask.Placeholder"/>.
            Sets the string shown as a hint when the control is empty.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.InputMask.OnClientValueChanged"/> client event.
            Occurs when the value of the Value property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.RawValue(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputMask.RawValue"/>.
            Sets the raw value of the control (excluding mask literals).
            </summary>
            <remarks>
            The raw value of the control excludes prompt and literal characters.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputMaskBuilder.IsRequired(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputMask.IsRequired"/>.
            Sets a value indicating whether the control value must be a non-empty string.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputNumberBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputNumber"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.#ctor(C1.Web.Mvc.InputNumber)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputNumberBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputNumber"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.InputType(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.InputType"/>.
            Sets the "type" attribute of the HTML input element hosted by the control.
            </summary>
            <remarks>
            By default, this property is set to "tel," a value that causes mobile devices to show a numeric keypad that includes a negative sign and a decimal separator.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Value(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Value"/>.
            Sets the current value of the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Required(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Required"/>.
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Min(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Min"/>.
            Sets the smallest number that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Max(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Max"/>.
            Sets the largest number that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Step(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Step"/>.
            Sets the amount to add or subtract to the Value property when the user clicks the spinner buttons.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Format(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Format"/>.
            Sets the format used to display the number being edited (see Globalize).
            </summary>
            <remarks>
            The format string is expressed as a .NET-style standard numeric format string.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Text(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Text"/>.
            Sets the text shown in the control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.Placeholder(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.Placeholder"/>.
            Sets the string shown as a hint when the control is empty.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.ShowSpinner(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.ShowSpinner"/>.
            Sets a value indicating whether the control displays spinner buttons to increment or decrement the value (the step property must be set to a non-zero value).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.OnClientTextChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.InputNumber.OnClientTextChanged"/> client event.
            Occurs when the value of the Text property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.InputNumber.OnClientValueChanged"/> client event.
            Occurs when the value of the Value property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.IsReadOnly"/>.
            Sets a value that indicates whether the user can modify the control value using the mouse and keyboard.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputNumberBuilder.IsRequired(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputNumber.IsRequired"/>.
            Sets a value indicating whether the control value must be a number or whether it can be set to null (by deleting the content of the control).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.InputTimeBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.InputTime`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.#ctor(C1.Web.Mvc.InputTime{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.InputTimeBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.InputTime`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Value(System.Nullable{System.DateTime})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputTime`1.Value"/>.
            Sets the current input time.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Min(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputTime`1.Min"/>.
            Sets the earliest time that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Max(System.DateTime)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputTime`1.Max"/>.
            Sets the latest time that the user can enter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Format(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputTime`1.Format"/>.
            Sets the format used to display the selected time (see Globalize).
            </summary>
            <remarks>
            The format string is expressed as a .NET-style time format string.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Mask(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputTime`1.Mask"/>.
            Sets a mask to use while the user is editing.
            </summary>
            <remarks>
            If specified, the mask must be compatible with the value of the Format property. For example, you can use the mask '99:99 &gt;LL' for entering short times (format 't').
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.OnClientValueChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.InputTime`1.OnClientValueChanged"/> client event.
            Occurs after a new time is selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Step(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputTime`1.Step"/>.
            Sets the number of minutes between entries in the drop-down list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.InputType(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.InputTime`1.InputType"/>.
            Sets the "type" attribute of the HTML input element hosted by the control.
            </summary>
            <remarks>
            By default, this property is set to "tel", a value that causes mobile devices to show a numeric keypad that includes a negative sign and a decimal separator.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Name(System.String)">
            <summary>
            Sets the Name property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Step(System.TimeSpan)">
            <summary>
            Sets the Step property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.InputTimeBuilder`1.Step(System.Double)">
            <summary>
            Sets the Step property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LinearGaugeBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.LinearGauge"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LinearGaugeBuilder.#ctor(C1.Web.Mvc.LinearGauge)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.LinearGaugeBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.LinearGauge"/> object to be configurated.</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LineMarkerBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.LineMarker`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.IsVisible(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.IsVisible"/>.
            Sets the visibility of the LineMarker.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.SeriesIndex(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.SeriesIndex"/>.
            Sets the index of the series in the chart in which the LineMarker appears.
            </summary>
            <remarks>
            This only takes effect when the @see:Interaction property is set to Chart.LineMarkerInteraction.Move.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.HorizontalPosition(System.Nullable{System.Single})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.HorizontalPosition"/>.
            Sets the horizontal position of the LineMarker relative to the plot area. 
            </summary>
            <remarks>
            Its value range is (0, 1). If the value is null or undefined and @see:Interaction is set to Chart.LineMarkerInteraction.Move, the horizontal position of the marker is calculated automatically based on the pointer's position.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Content(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.Content"/>.
            Sets the content function that allows to customize the text content of the LineMarker.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.VerticalPosition(System.Nullable{System.Single})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.VerticalPosition"/>.
            Sets the vertical position of the LineMarker relative to the plot area. 
            </summary>
            <remarks>
            Its value range is (0, 1). If the value is null or undefined and @see:Interaction is set to Chart.LineMarkerInteraction.Move, the vertical position of the LineMarker is calculated automatically based on the pointer's position.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.OnClientPositionChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.LineMarker`1.OnClientPositionChanged"/> client event.
            Occurs after the LineMarker's position changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.DragThreshold(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.DragThreshold"/>.
            Sets the maximum distance from the horizontal or vertical line that the marker can be dragged.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.DragContent(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.DragContent"/>.
            Sets a value indicating whether the content of the marker is draggable when the interaction mode is "Drag."
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.DragLines(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.LineMarker`1.DragLines"/>.
            Sets a value indicating whether the lines are linked when the horizontal or vertical line is dragged when the interaction mode is "Drag."
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.#ctor(C1.Web.Mvc.LineMarker{`0})">
            <summary>
            Create one FlexGridFilterBuilder instance.
            </summary>
            <param name="extender">The FlexGridFilter extender.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Alignment(C1.Web.Mvc.Chart.LineMarkerAlignment)">
            <summary>
            Sets the Alignment property.
            </summary>
            <remarks>
            
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Lines(C1.Web.Mvc.Chart.LineMarkerLines)">
            <summary>
            Sets the Lines property.
            </summary>
            <remarks>
            
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerBuilder`1.Interaction(C1.Web.Mvc.Chart.LineMarkerInteraction)">
            <summary>
            Sets the Interaction property.
            </summary>
            <remarks>
            
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ListBoxBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ListBox`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.#ctor(C1.Web.Mvc.ListBox{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ListBoxBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.ListBox`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.DisplayMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.DisplayMemberPath"/>.
            Sets the name of the property to use as the visual representation of the items.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedValuePath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.SelectedValuePath"/>.
            Sets the name of the property used to get the SelectedValue from the SelectedItem.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.IsContentHtml(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.IsContentHtml"/>.
            Sets a value indicating whether the list displays items as plain text or as HTML.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.ItemFormatter"/>.
            Sets a function used to customize the values shown in the list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedIndex(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.SelectedIndex"/>.
            Sets the index of the currently selected item in the list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedItem(`0)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.SelectedItem"/>.
            Sets the item that is currently selected in the list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.SelectedValue(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.SelectedValue"/>.
            Sets the value of the SelectedItem, obtained using the SelectedValuePath.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.MaxHeight(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.MaxHeight"/>.
            Sets the maximum height of the list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemTemplateId(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.ItemTemplateId"/>.
            Sets the id of the template used to generate each list item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientSelectedIndexChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ListBox`1.OnClientSelectedIndexChanged"/> client event.
            Occurs when the value of the SelectedIndex property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientItemsChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ListBox`1.OnClientItemsChanged"/> client event.
            Occurs when the list of items changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.CheckedMemberPath"/>.
            Sets the name of the property used to control checkboxes placed next to each item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientItemChecked(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ListBox`1.OnClientItemChecked"/> client event.
            Occurs when the current item is checked or unchecked.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemTemplateContent(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.ItemTemplateContent"/>.
            Sets the id of the template used to generate each list item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientCheckedItemsChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ListBox`1.OnClientCheckedItemsChanged"/> client event.
            Occurs when the value of the @see:checkedItems property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientFormatItem(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ListBox`1.OnClientFormatItem"/> client event.
            Occurs when an element representing a list item has been created.
            </summary>
            <remarks>
            This event can be used to format list items for display.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientLoadedItems(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ListBox`1.OnClientLoadedItems"/> client event.
            Occurs after the list items are generated.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.OnClientLoadingItems(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ListBox`1.OnClientLoadingItems"/> client event.
            Occurs before the list items are generated.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedIndexes(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.CheckedIndexes"/>.
            Sets a list containing the indexes of checked items.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.CheckedValues"/>.
            Sets a list containing the item-values that are currently checked.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.ItemRole(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ListBox`1.ItemRole"/>.
            Sets the value of the "role" attribute added to the list items.
            </summary>
            <remarks>
            The default value for this property is "option".
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedIndexes(System.Int32[])">
            <summary>
            Sets the CheckedIndexes property.
            </summary>
            <remarks>
            Gets or sets an array containing the indexes that are currently checked.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListBoxBuilder`1.CheckedValues(System.Object[])">
            <summary>
            Sets the CheckedValues property.
            </summary>
            <remarks>
            Gets or sets a list containing the values that are currently checked.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.MenuBase`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.MenuBaseBuilder`3"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.MenuBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.Header(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuBase`1.Header"/>.
            
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.Command(System.Action{C1.Web.Mvc.Fluent.MenuCommandBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuBase`1.Command"/>.
            
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.CommandPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuBase`1.CommandPath"/>.
            
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.CommandParameterPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuBase`1.CommandParameterPath"/>.
            
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.OnClientItemClicked(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.MenuBase`1.OnClientItemClicked"/> client event.
            
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.Owner(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuBase`1.Owner"/>.
            Sets the selector string of the element that owns this menu.
            </summary>
            <remarks>
            If we want a context menu, we should hide this menu by setting style or attribute.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.IsButton(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuBase`1.IsButton"/>.
            Sets a value that determines whether menu should act as a split button instead of a regular menu.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.HeaderPath(System.String)">
            <summary>
            Overrides to remove this method.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBaseBuilder`3.AutoExpandSelection(System.Boolean)">
            <summary>
            Overrides to remove this method.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MultiSelectBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.MultiSelect`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.#ctor(C1.Web.Mvc.MultiSelect{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.MultiSelectBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.MultiSelect`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedIndexes(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.CheckedIndexes"/>.
            Sets a list containing the indexes of checked items.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.CheckedMemberPath"/>.
            Sets the name of the property used to control the checkboxes placed next to each item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.HeaderFormat(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.HeaderFormat"/>.
            Sets the format string used to create the header content when the control has more than MaxHeaderItems items checked.
            </summary>
            <remarks>
            The format string may contain the '{count}' replacement string which gets replaced with the number of items currently checked. The default value for this property in the English culture is '{count:n0} items selected'.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.HeaderFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.HeaderFormatter"/>.
            Sets a function that gets the HTML in the control header.
            </summary>
            <remarks>
            By default, the control header content is determined based on the Placeholder, MaxHeaderItems, and on the current selection. You may customize the header content by specifying a function that returns a custom string based on whatever criteria your application requires.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.MaxHeaderItems(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.MaxHeaderItems"/>.
            Sets the maximum number of items to display on the control header.
            </summary>
            <remarks>
            If no items are selected, the header displays the text specified by the Placeholder property.If the number of selected items is smaller than or equal to the value of the MaxHeaderItems property, the selected items are shown in the header. If the number of selected items is greater than MaxHeaderItems, the header displays the selected item count instead.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.OnClientCheckedItemsChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.MultiSelect`1.OnClientCheckedItemsChanged"/> client event.
            Occurs when the value of the checked items changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.CheckedValues"/>.
            Sets a list containing the item-values that are currently checked.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.AutoExpandSelection(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.AutoExpandSelection"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.HeaderPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.HeaderPath"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.IsRequired(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.IsRequired"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.IsEditable(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.IsEditable"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.SelectedIndex(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.SelectedIndex"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.SelectedItem(`0)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.SelectedItem"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.SelectedValue(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.SelectedValue"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.OnClientTextChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.MultiSelect`1.OnClientTextChanged"/> client event.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.Text(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MultiSelect`1.Text"/>.
            Overrides to remove this property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.Name(System.String)">
            <summary>
            Sets the Name property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedIndexes(System.Int32[])">
            <summary>
            Sets the CheckedIndexes property.
            </summary>
            <remarks>
            Gets or sets an array containing the indexes that are currently checked.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MultiSelectBuilder`1.CheckedValues(System.Object[])">
            <summary>
            Sets the CheckedValues property.
            </summary>
            <remarks>
            Gets or sets a list containing the values that are currently checked.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PagerBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Pager"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PagerBuilder.#ctor(C1.Web.Mvc.Pager)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.PagerBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.Pager"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PagerBuilder.Owner(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Pager.Owner"/>.
            Sets the id of a data control or CollectionView service which own this pager.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PopupBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Popup"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.#ctor(C1.Web.Mvc.Popup)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.PopupBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.Popup"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Owner(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Popup.Owner"/>.
            Sets the selector string to determine the element that own this popup. 
            </summary>
            <remarks>
            If the Owner is null or invalidate, the Popup behaves like a dialog. It is centered on the screen and must be shown using the client show method.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.FadeIn(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Popup.FadeIn"/>.
            Sets a value that determines whether popups should be shown using a fade-in animation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.FadeOut(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Popup.FadeOut"/>.
            Sets a value that determines whether popups should be hidden using a fade-out animation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Modal(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Popup.Modal"/>.
            Sets a value that determines whether the Popup should be displayed as a modal dialog.
            </summary>
            <remarks>
            Modal dialogs show a dark backdrop that makes the Popup stand out from other content on the page.If you want to make a dialog truly modal, also set the HideTrigger property to None, so users won't be able to click the backdrop to dismiss the dialog. In this case, the dialog will close only if the close method is called or if the user presses the Escape key.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.HideTrigger(C1.Web.Mvc.PopupTrigger)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Popup.HideTrigger"/>.
            Sets the actions that hide the Popup.
            </summary>
            <remarks>
            By default, the HideTrigger property is set to Blur, which hides the popup when it loses focus.If you set the HideTrigger property to Click, the popup will be hidden only when the owner element is clicked.If you set the HideTrigger property to None, the popup will be hidden only when the hide method is called.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.ShowTrigger(C1.Web.Mvc.PopupTrigger)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Popup.ShowTrigger"/>.
            Sets the actions that show the Popup.
            </summary>
            <remarks>
            By default, the ShowTrigger property is set to Click, which causes the popup to appear when the user clicks the owner element.If you set the ShowTrigger property to None, the popup will be shown only when the show method is called.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientHiding(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Popup.OnClientHiding"/> client event.
            Sets the client function which occurs before the Popup is hiding.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientHidden(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Popup.OnClientHidden"/> client event.
            Sets the client function which occurs after the Popup has been hidden.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientShowing(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Popup.OnClientShowing"/> client event.
            Sets the client function which occurs before the Popup is showing.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.OnClientShown(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Popup.OnClientShown"/> client event.
            Sets the client function which occurs after the Popup has been shown.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Content(System.String)">
            <summary>
            Sets the Content property.
            </summary>
            <remarks>
            Sets the HTML content which the popup should display.
            </remarks>
            <param name="value">The string value.</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PopupBuilder.Content(System.Func{System.Object,System.Object})">
            <summary>
            Sets the Content property.
            </summary>
            <remarks>
            Sets the HTML content which the popup should display.
            </remarks>
            <param name="value">The content wrapped in a regular HTML tag or text tag (Razor syntax).</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RadialGaugeBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.RadialGauge"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.#ctor(C1.Web.Mvc.RadialGauge)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.RadialGaugeBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.RadialGauge"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.AutoScale(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RadialGauge.AutoScale"/>.
            Sets whether the gauge should automatically scale to fill the host element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.StartAngle(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RadialGauge.StartAngle"/>.
            Sets the starting angle for the gauge, in degrees.
            </summary>
            <remarks>
            Angles are measured clockwise, starting at the 9 o'clock position.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.SweepAngle(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RadialGauge.SweepAngle"/>.
            Sets the sweeping angle for the gauge, in degrees.
            </summary>
            <remarks>
            Angles are measured clockwise, starting at the 9 o'clock position.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RadialGaugeBuilder.ShowText(C1.Web.Mvc.ShowText)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RadialGauge.ShowText"/>.
            Sets which values should be displayed as text in the gauge.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.RangeSelector`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.IsVisible(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RangeSelector`1.IsVisible"/>.
            Sets the visibility of the range selector.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Min(System.Nullable{System.Single})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RangeSelector`1.Min"/>.
            Sets the minimum value of the range.
            </summary>
            <remarks>
            If not set, the minimum is calculated automatically.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Max(System.Nullable{System.Single})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RangeSelector`1.Max"/>.
            Sets the maximum value of the range.
            </summary>
            <remarks>
            If not set, the maximum is calculated automatically.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.OnClientRangeChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.RangeSelector`1.OnClientRangeChanged"/> client event.
            Occurs after the range changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Seamless(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RangeSelector`1.Seamless"/>.
            Sets whether the minimal and maximal handler will move seamlessly.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.MinScale(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RangeSelector`1.MinScale"/>.
            Sets the minimum range scale of the range selector. 
            </summary>
            <remarks>
            The minimum scale is between 0 and 1.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.MaxScale(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.RangeSelector`1.MaxScale"/>.
            Sets the maximum range scale of the range selector. 
            </summary>
            <remarks>
            The maximum scale is between 0 and 1.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.#ctor(C1.Web.Mvc.RangeSelector{`0})">
            <summary>
            Create one FlexGridFilterBuilder instance.
            </summary>
            <param name="extender">The FlexGridFilter extender.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorBuilder`1.Orientation(C1.Web.Mvc.Chart.Orientation)">
            <summary>
            Sets the Orientation property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SunburstBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Sunburst`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SunburstBuilder`1.#ctor(C1.Web.Mvc.Sunburst{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.SunburstBuilder`1"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.Sunburst`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SunburstBuilder`1.ChildItemsPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Sunburst`1.ChildItemsPath"/>.
            Sets the name of the property (or properties) used to generate child items in hierarchical data.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SunburstBuilder`1.BindingName(System.String[])">
            <summary>
            Sets the BindingName property.
            </summary>
            <remarks>
            Gets or sets the name of the property that contains the name of the data item. It should be an array or a string.
            </remarks>
            <param name="names">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TreeViewBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.#ctor(C1.Web.Mvc.TreeView)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.TreeViewBuilder"/> instance to configurate <paramref name="component"/>.
            </summary>
            <param name="component">The <see cref="T:C1.Web.Mvc.TreeView"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.IsContentHtml(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.IsContentHtml"/>.
            Sets a value indicating whether items are bound to plain text or HTML.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ShowCheckboxes(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.ShowCheckboxes"/>.
            Sets a value that determines whether the <see cref="T:C1.Web.Mvc.TreeView"/> control should add checkboxes to nodes and manage their state. This property can be used only on trees without lazy-loaded nodes(LazyLoadFunction is not set and IsLazyLoading is false).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.AutoCollapse(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.AutoCollapse"/>.
            Sets a value that determines if sibling nodes should be collapsed when a node is expanded.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.IsAnimated(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.IsAnimated"/>.
            Sets a value that indicates whether to use animations when expanding or collapsing nodes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.IsReadOnly"/>.
            Sets a value that determines whether users can edit the text in the nodes. When it is set to false, users may edit the content of the tree nodes by typing directly into the nodes. The F2 key can also be used to enter edit mode with the whole node content selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.AllowDragging(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.AllowDragging"/>.
            Sets a value that determines whether users can drag and drop nodes within the <see cref="T:C1.Web.Mvc.TreeView"/> control.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ExpandOnClick(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.ExpandOnClick"/>.
            Sets a value that determines whether to expand collapsed nodes when the user clicks the node header.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.LazyLoadFunction(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TreeView.LazyLoadFunction"/>.
            Sets a client function that loads child nodes on demand.
            </summary>
            <remarks>
            It takes two parameters: the node being and a callback to be invoked when the data becomes available. The callback function tells the <see cref="T:C1.Web.Mvc.TreeView"/> that the node loading process has been completed. It should always be called, even if there are errors when loading the data.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientItemsSourceChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientItemsSourceChanged"/> client event.
            Occurs when the value of the ItemsSource property changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientLoadingItems(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientLoadingItems"/> client event.
            Occurs before the tree items are generated.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientLoadedItems(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientLoadedItems"/> client event.
            Occurs after the tree items have been generated.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientItemClicked(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientItemClicked"/> client event.
            Occurs when the user clicks an item or presses the Enter key and an item is selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientSelectedItemChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientSelectedItemChanged"/> client event.
            Occurs when the selected item is changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientCheckedItemsChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientCheckedItemsChanged"/> client event.
            Occurs when the checked items are changed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCollapsedChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientIsCollapsedChanging"/> client event.
            Occurs before a node is collapsed or expanded.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCollapsedChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientIsCollapsedChanged"/> client event.
            Occurs after a node is collapsed or expanded.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCheckedChanging(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientIsCheckedChanging"/> client event.
            Occurs before the check status of a node is changed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientIsCheckedChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientIsCheckedChanged"/> client event.
            Occurs after the check status of a node is changed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientFormatItem(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientFormatItem"/> client event.
            Occurs when an element representing a node has been created.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDragStart(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientDragStart"/> client event.
            Occurs when the user starts dragging a node. This event only occurs if the AllowDrag property is set to true.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDragOver(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientDragOver"/> client event.
            Occurs while the user drags a node over other nodes on the <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
            <remarks>
            Returns true if the event is not cancelled.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDrop(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientDrop"/> client event.
            Occurs when the user drops a on the <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
            <remarks>
            Returns true if the event is not cancelled.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientDragEnd(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientDragEnd"/> client event.
            Occurs when the user finishes a drag/drop operation, either by dropping a node into a new location or by canceling the operation with the mouse or keyboard.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditStarting(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientNodeEditStarting"/> client event.
            Occurs before a node enters edit mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditStarted(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientNodeEditStarted"/> client event.
            Occurs after a node has entered edit mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditEnding(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientNodeEditEnding"/> client event.
            Occurs before a node exits edit mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientNodeEditEnded(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientNodeEditEnded"/> client event.
            Occurs after a node has exited edit mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientReponseTextParsing(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientReponseTextParsing"/> client event.
            Occurs when parsing the response text.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.OnClientRequestDataStringifying(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.TreeView.OnClientRequestDataStringifying"/> client event.
            Occurs when serializing the request data.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ChildItemsPath(System.String[])">
            <summary>
                Sets the ChildItemsPath property.
            </summary>
            <remarks>
                Gets or sets the name of the property (or properties) that contains the child items for each node. When it is not set, ['items'] will be used.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.DisplayMemberPath(System.String[])">
            <summary>
                Sets the DisplayMemberPath property.
            </summary>
            <remarks>
                Gets or sets the name of the property (or properties) to use as the visual representation of the nodes. When it is not set, ['header'] will be used.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.ImageMemberPath(System.String[])">
            <summary>
                Sets the ImageMemberPath property.
            </summary>
            <remarks>
                Gets or sets the name of the property (or properties) to use as a source of images for the nodes.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.Bind(System.Collections.Generic.IEnumerable{System.Object},System.String)">
            <summary>
                Loads the nodes from the specified data.
            </summary>
            <param name="data">
            The nodes data.
            </param>
            <param name="lazyLoadActionUrl">
            URL of the load action for lazy nodes.
            It is optional.
            When it is provided, the <see cref="T:C1.Web.Mvc.TreeView"/> control works in lazy loading mode.
            Otherwise, all the nodes will be loaded from data.
            </param>
            <returns>
                A <see cref="T:C1.Web.Mvc.Fluent.TreeViewBuilder"/>.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TreeViewBuilder.Bind(System.String,System.String)">
            <summary>
                Loads the nodes from the specified url.
            </summary>
            <param name="loadActionUrl"> URL of the load action. </param>
            <param name="lazyLoadActionUrl">
            URL of the load action for lazy nodes.
            It is optional.
            When it is provided, the <see cref="T:C1.Web.Mvc.TreeView"/> control works in lazy loading mode.
            Otherwise, all the nodes will be loaded from data.
            </param>
            <returns>
                A <see cref="T:C1.Web.Mvc.Fluent.TreeViewBuilder"/>.
            </returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ControlBuilderFactory">
            <summary>
            Defines a factory class to create different controls' builders.
            </summary>
            <summary>
            Defines a factory class to create different controls' builders.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.AutoComplete``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.AutoComplete`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.AutoComplete(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.AutoComplete`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.AutoCompleteBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.BulletGraph(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.BulletGraph"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.BulletGraphBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Calendar(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.Calendar"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.CalendarBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ColorPicker(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.ColorPicker"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.ColorPickerBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ComboBox``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.ComboBox`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.ComboBoxBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ComboBox(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.ComboBox`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.ComboBoxBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexChart``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexChart`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexChartBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexChart(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexChart`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexChartBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexGrid``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexGrid`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexGridBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexGrid(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexGrid`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexGridBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexPie``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexPie`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexPieBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexPie(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexPie`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexPieBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexRadar``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexRadar`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexRadarBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.FlexRadar(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.FlexRadar`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.FlexRadarBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputColor(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.InputColor"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.InputColorBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputDate(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.InputDate"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.InputDateBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputDateTime(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.InputDateTime"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.InputDateTimeBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputMask(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.InputMask"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.InputMaskBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputNumber(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.InputNumber"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.InputNumberBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputTime``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.InputTime`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.InputTimeBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.InputTime(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.InputTime`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.InputTimeBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.LinearGauge(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.LinearGauge"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.LinearGaugeBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ListBox``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.ListBox`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.ListBoxBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.ListBox(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.ListBox`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.ListBoxBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiAutoComplete``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.MultiAutoComplete`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiAutoComplete(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.MultiAutoComplete`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.MultiAutoCompleteBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiSelect``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.MultiSelect`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.MultiSelectBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.MultiSelect(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.MultiSelect`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.MultiSelectBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Pager(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.Pager"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.PagerBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Popup(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.Popup"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.PopupBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.RadialGauge(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.RadialGauge"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.RadialGaugeBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Sunburst``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.Sunburst`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.SunburstBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Sunburst(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.Sunburst`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.SunburstBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.TreeMap``1(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.TreeMap`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.TreeMap(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.TreeMap`1"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.TreeMapBuilder`1"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.TreeView(System.String)">
            <summary>
            Creates a <see cref="T:C1.Web.Mvc.TreeView"/> control
            and attaches it to the dom elements matching against the specified selector.
            </summary>
            <param name="selector">
            Specifies a selector. It is optional.
            If it is not set, a default dom element will be generated.
            </param>
            <returns>A <see cref="T:C1.Web.Mvc.Fluent.TreeViewBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.Mvc.Fluent.ControlBuilderFactory"/> class 
            by using the specified html helper instance.
            </summary>
            <param name="helper">The specified HtmlHelper object.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Resources(System.Type[])">
            <summary>
            Render the css and js resources of the specified control type.
            </summary>
            <param name="controlTypes">The control types. Setting no control types means set all control types.</param>
            <returns>The html string</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Resources(System.String,System.Type[])">
            <summary>
            Render the css and js resources of the specified control type.
            </summary>
            <param name="theme">The theme name</param>
            <param name="controlTypes">The control types. Setting no control types means set all control types.</param>
            <returns>The html string</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.DeferredScripts">
            <summary>
            Render the deferred scripts.
            </summary>
            <returns>The html string.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Scripts">
            <summary>
            Register the specified scripts.
            </summary>
            <returns>The <see cref="T:C1.Web.Mvc.Fluent.ScriptsBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Styles">
            <summary>
            Register the style sheets.
            </summary>
            <returns>The <see cref="T:C1.Web.Mvc.Fluent.StylesBuilder"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.Menu(System.String)">
            <summary>
            Create a Menu.
            </summary>
            <param name="selector">The selector</param>
            <returns>The MenuBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.CollectionViewService``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Create a CollectionViewServiceBuilder.
            </summary>
            <typeparam name="T">The data item type</typeparam>
            <param name="sourceCollection">The sourceCollection</param>
            <returns>The CollectionViewServiceBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory.CollectionViewService(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Create a CollectionViewServiceBuilder.
            </summary>
            <param name="sourceCollection">The sourceCollection</param>
            <returns>The CollectionViewServiceBuilder</returns>
        </member>
        <member name="T:C1.Web.Mvc.ColumnFilter">
            <summary>
            Defines a filter for a column on a FlexGrid control.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Condition1">
            <summary>
            Gets the first condition in the filter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Condition2">
            <summary>
            Gets the second condition in the filter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.And">
            <summary>
            Gets whether the two conditions should be combined with an AND or an OR operator.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.ShowValues">
            <summary>
            Gets or sets a collection with all the formatted values that should be shown.
            </summary>
            <remarks>
            Null means to show all data.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Column">
            <summary>
            Gets or sets a string value which indicates the name or the binding of the column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.FilterType">
            <summary>
            Gets or sets the types of filtering provided by this filter.
            </summary>
            <remarks>
            Setting this property to null causes the filter to use the value defined by the DefaultFilterType property.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.ValueFilter">
            <summary>
            Gets the value filter in this column filter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.ConditionFilter">
            <summary>
            Gets the condition filter in this column filter.
            </summary>
            <remarks>
            It is provided to represent the condition filter setting. Don't suggeset the user modifying it.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnFilter.Format">
            <summary>
            Gets or sets the format string used to convert raw values into display values for this column (see Globalize).
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ConditionFilter">
            <summary>
            Defines a condition filter for a column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ConditionFilter.And">
            <summary>
            Gets whether the two conditions should be combined with an AND or an OR operator.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ConditionFilter.Condition1">
            <summary>
            Gets the first condition in the filter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ConditionFilter.Condition2">
            <summary>
            Gets the second condition in the filter.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ValueFilter">
            <summary>
            Defines a value filter for a column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.ShowValues">
            <summary>
            Gets a collection with all the formatted values that should be shown.
            </summary>
            <remarks>
            Null means to show all data.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.FilterText">
            <summary>
            Gets or sets a string to filter the list of display values.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.MaxValues">
            <summary>
            Gets or sets the maximum number of elements on the list of display values.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.UniqueValues">
            <summary>
            Gets or sets an array containing the unique values to be displayed on the list.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ValueFilter.SortValues">
            <summary>
            Gets or sets a value that determines whether the values should be sorted when displayed in the editor.
            </summary>
            <remarks>
            This property is especially useful when you are using the <see cref="P:C1.Web.Mvc.ValueFilter.UniqueValues"/> to provide a custom list of values property and you would like to preserve the order of the values.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.CellTemplate">
            <summary>
            Define the cell template class.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.Template">
            <summary>
            Overrides to remove this property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.EditTemplate">
            <summary>
            Remove this property as it is obsoleted.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.TemplateId">
            <summary>
            Gets or sets the id of the template for the grid cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.TemplateContent">
            <summary>
            Gets or sets the content of the template for the grid cell.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.EditTemplateId">
            <summary>
            Gets or sets the id of the template for the grid cell in editing mode.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CellTemplate.EditTemplateContent">
            <summary>
            Gets or sets the content of the template for the grid cell in editing mode.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ColumnBase">
            <summary>
            Represents a column on the grid.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ColumnBase.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ColumnBase"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ColumnBase.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ColumnBase"/> instance.
            </summary>
            <param name="helper">The HtmlHelper instance.</param>
        </member>
        <member name="M:C1.Web.Mvc.ColumnBase.ShouldSerializeDataMap">
            <summary>
            Specifies whether the DataMap property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowDragging">
            <summary>
            Gets or sets whether the user can move this row or column to a new position with the mouse.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowMerging">
            <summary>
            Gets or sets whether cells in this row or column can be merged.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowResizing">
            <summary>
            Gets or sets a value that indicates whether the user can resize the row or column with the mouse.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.CssClass">
            <summary>
            Gets or sets a CSS class name to be used when rendering non-header cells in this row or column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsContentHtml">
            <summary>
            Gets or sets whether cells in this row or column contain HTML content rather than plain text.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsReadOnly">
            <summary>
            Gets or sets whether cells in this row or column can be edited.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsSelected">
            <summary>
            Gets or sets whether this row or column is selected.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Visible">
            <summary>
            Gets or sets whether this row or column is visible.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.WordWrap">
            <summary>
            Gets or sets whether cells in this row or column should wrap their content.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Aggregate">
            <summary>
            Gets or sets the Aggregate to display in the group header rows for this column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Align">
            <summary>
            Gets or sets the horizontal alignment of items in this column.
            </summary>
            <remarks>
            The default value for this property is null, which causes the grid to select the alignment automatically based on column's dataType (numbers are right-aligned, boolean values are centered, other types are left-aligned).If you want to override the default alignment, set this property to 'left', 'right', or 'center'.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.AllowSorting">
            <summary>
            Gets or sets whether the user can sort this column by clicking its header.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Binding">
            <summary>
            Gets or sets the name of the property this column is bound to.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.DataType">
            <summary>
            Gets or sets the type of value stored in this column.Values are coerced into the proper type when editing the grid.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Format">
            <summary>
            Gets or sets the format string used to convert raw values into display values for this column (see Globalize).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Header">
            <summary>
            Gets or sets the text displayed in the column header.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.InputType">
            <summary>
            Gets or sets the "type" attribute of the HTML input element used to edit values in this column.
            </summary>
            <remarks>
            Use this property to change the default setting if the default does not work well for the current culture, device, or application.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Mask">
            <summary>
            Gets or sets a mask to be used while editing values in this column.
            </summary>
            <remarks>
            The mask format is the same used by the InputMask control. If specified, the mask should be compatible with the value of the format property. For example, the mask '99/99/9999' can be used for entering dates formatted as 'MM/dd/yyyy'.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.MaxWidth">
            <summary>
            Gets or sets the maximum width of this column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.MinWidth">
            <summary>
            Gets or sets the minimum width of this column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Name">
            <summary>
            Gets or sets the name of this column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Required">
            <summary>
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.IsRequired">
            <summary>
            Gets or sets a value that determines whether values in the column are required.
            </summary>
            <remarks>
            By default, this property is set to null, which means values are required, but string columns may contain empty strings. When set to true, values are required and empty strings are not allowed. When set to false, null values and empty strings are allowed.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.Width">
            <summary>
            Gets or sets the width of this column.
            </summary>
            <remarks>
            Column widths may be positive numbers (column width in pixels), null or negative numbers (use the collection's default column width), or strings in the format '{number}*' (star sizing).
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.CellTemplate">
            <summary>
            Gets the cell template in this column.
            </summary>
            <remarks>
            It only works for cells panel.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.SortMemberPath">
            <summary>
            Gets or sets the name of the property to use when sorting this column.
            </summary>
            <remarks>
            Use this property in cases where you want the sorting to be performed based on values other than the ones speficied by the Binding property.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.DataMap">
            <summary>
            Gets the DataMap used to convert raw values into display values for the column.
            </summary>
            <remarks>
            The drop-down buttons are shown only if the column has a DataMap set and is editable. Clicking on the drop-down buttons causes the grid to show a list where users can select the value for the cell.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.ShowDropDown">
            <summary>
            Gets or sets a value indicating whether the grid adds drop-down buttons to the cells in this column.
            </summary>
            <remarks>
            The drop-down buttons are shown only if the column has a DataMap set and is editable. Clicking on the drop-down buttons causes the grid to show a list where users can select the value for the cell.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ColumnBase.DropDownCssClass">
            <summary>
            Gets or sets a CSS class name to add to drop-downs in this column.
            </summary>
            <remarks>
            The drop-down buttons are shown only if the column has a DataMap set and is editable. Clicking on the drop-down buttons causes the grid to show a list where users can select the value for the cell. Cell drop-downs require the wijmo.input module to be loaded.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.Column">
            <summary>
            Represents a column on the grid.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Column.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Column"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Column.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Column"/> instance.
            </summary>
            <param name="helper">The HtmlHelper instance.</param>
        </member>
        <member name="T:C1.Web.Mvc.TreeNode">
            <summary>
            Represents a node in <see cref="T:C1.Web.Mvc.TreeView"/>.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeNode.Level">
            <summary>
            Indicates the node’s level. Top-level nodes have level zero.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeNode.IsChecked">
            <summary>
            Indicates whether the node is checked.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TreeNode.DataItem">
            <summary>
            The data item that this node represents.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.BatchOperatingData`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BatchOperatingData`1.ItemsCreated">
            <summary>
            The items being created.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BatchOperatingData`1.ItemsUpdated">
            <summary>
            The items being updated.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BatchOperatingData`1.ItemsDeleted">
            <summary>
            The items being deleted.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.BoxWhisker`1">
            <summary>
            BoxWhisker series is normally used to compare distributions between different sets of numerical data.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ExtraSeries`1">
            <summary>
            Represents a series of data points to display in the chart.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartSeriesBase`1">
            <summary>
            
            </summary>
            <summary>
            Represents a series of data points to display in the chart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeAxisX">
            <summary>
            Specifies whether the AxisX property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeAxisY">
            <summary>
            Specifies whether the AxisY property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeStyle">
            <summary>
            Specifies whether the Style property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeSymbolStyle">
            <summary>
            Specifies whether the SymbolStyle property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeItemsSource">
            <summary>
            Specifies whether the ItemsSource property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.ShouldSerializeAltStyle">
            <summary>
            Specifies whether the AltStyle property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeriesBase`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ChartSeriesBase`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolSize">
            <summary>
            Gets or sets the size in pixels of the symbols used to render this series. Applies to Scatter, LineSymbols, and SplineSymbols chart types.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolMarker">
            <summary>
            Gets or sets the shape of marker to use for each data point in the series. Applies to Scatter, LineSymbols, and SplineSymbols chart types.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.BindingX">
            <summary>
            Gets or sets the name of the property that contains X values for the series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Binding">
            <summary>
            Gets or sets the name of the property that contains Y values for the series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Name">
            <summary>
            Gets or sets the series name. The series name is displayed in the chart legend. Any series without a name does not appear in the legend.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.CssClass">
            <summary>
            Gets or sets the series CSS class.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Visibility">
            <summary>
            Gets or sets an enumerated value indicating whether and where the series appears.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.AxisX">
            <summary>
            Gets or sets the x-axis for the series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.AxisY">
            <summary>
            Gets or sets the y-axis for the series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.Style">
            <summary>
            Gets or sets the series style.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolStyle">
            <summary>
            Gets or sets the series symbol style. Applies to Scatter, LineSymbols, and SplineSymbols chart types.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.ItemsSource">
            <summary>
            Gets or sets the ItemsSource settings. Inherited from ItemsBoundControl.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.OnClientRendering">
            <summary>
            Occurs when series is rendering.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.AltStyle">
            <summary>
            Gets or sets the alternative style for the series. The values from this property will be used for negative values in Bar, Column, and Scatter charts; and for rising values in financial chart types like Candlestick, LineBreak, EquiVolume etc.
            </summary>
            <remarks>
            If no value is provided, the default styles will be used.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeriesBase`1.OnClientRendered">
            <summary>
            Occurs when series is rendered.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ExtraSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ExtraSeries`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.ExtraSeries`1.ExtraSeriesTypeName">
            <summary>
            A flag for client-side wrapper to indicate that this series is an ExtraSeries.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.BoxWhisker`1.ShouldSerializeMeanLineStyle">
            <summary>
            Specifies whether the MeanLineStyle property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.BoxWhisker`1.ShouldSerializeMeanMarkerStyle">
            <summary>
            Specifies whether the MeanMarkerStyle property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.BoxWhisker`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.BoxWhisker`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.GapWidth">
            <summary>
            Gets or sets a value that determines the gap width as a percentage for the Box and Whisker chart. The default value for this property is 0.1. The min value is 0 and max value is 1.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.GroupWidth">
            <summary>
            Gets or sets a value that determines the group width as a percentage for the Box and Whisker chart. The default value for this property is 0.8. The min value is 0 and max value is 1.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.MeanLineStyle">
            <summary>
            Gets or sets a value that specifies the style for the mean line.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.MeanMarkerStyle">
            <summary>
            Gets or sets a value that specifies the style for the mean marker.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.QuartileCalculation">
            <summary>
            Gets or sets a value that specifies the quartile calculation for the Box and Whisker chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowInnerPoints">
            <summary>
            Gets or sets a value that determines whether to show the inner points for the Box and Whisker chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowMeanLine">
            <summary>
            Gets or sets a value that determines whether to show the mean line for the Box and Whisker chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowMeanMarker">
            <summary>
            Gets or sets a value that determines whether to show the mean marker for the Box and Whisker chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ShowOutliers">
            <summary>
            Gets or sets a value that determines whether to show the outliers for the Box and Whisker chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.BoxWhisker`1.ExtraSeriesTypeName">
            <summary>
            Gets the series name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartAxis`1">
            <summary>
            
            </summary>
            <summary>
            Represents chart axis.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializePosition">
            <summary>
            Specifies whether the Position property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeMajorGrid">
            <summary>
            Specifies whether the MajorGrid property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeMajorTickMarks">
            <summary>
            Specifies whether the MajorTickMarks property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeAxisLine">
            <summary>
            Specifies whether the AxisLine property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.ShouldSerializeItemsSource">
            <summary>
            Specifies whether the ItemsSource property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ChartAxis`1.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ChartAxis`1"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Min">
            <summary>
            Gets or sets the minimum value shown on the axis. If not set, the minimum is calculated automatically.
            </summary>
            <remarks>
            The value can be a number or a DateTime object (for time-based data).
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Max">
            <summary>
            Gets or sets the maximum value shown on the axis. If not set, the maximum is calculated automatically.
            </summary>
            <remarks>
            The value can be a number or a DateTime object (for time-based data).
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Reversed">
            <summary>
            Gets or sets a value indicating whether the axis is reversed (top to bottom or right to left).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Position">
            <summary>
            Gets or sets the enumerated axis position.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MajorUnit">
            <summary>
            Gets or sets the number of units between axis labels.If the axis contains date values, then the units are expressed in days.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MinorUnit">
            <summary>
            Gets or sets the number of units between minor axis ticks. If the axis contains date values, then the units are expressed in days.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Name">
            <summary>
            Gets or sets the axis name.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Title">
            <summary>
            Gets or sets the title text shown next to the axis.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Format">
            <summary>
            Gets or sets the format string used for axis labels 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MajorGrid">
            <summary>
            Gets or sets a value indicating whether the axis includes grid lines.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MajorTickMarks">
            <summary>
            Gets or sets the location of axis tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MinorGrid">
            <summary>
            Gets or sets a value indicating whether the axis includes minor grid lines.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.MinorTickMarks">
            <summary>
            Gets or sets the location of minor axis tick marks.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.AxisLine">
            <summary>
            Gets or sets a value indicating whether the axis line is visible.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Labels">
            <summary>
            Gets or sets a value indicating whether axis labels are visible.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LabelAngle">
            <summary>
            Gets or sets the rotation angle of axis labels. The angle is measured in degrees with valid values ranging from -90 to 90.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Origin">
            <summary>
            Gets or sets the value at which the axis crosses perpendicular axis.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.OverlappingLabels">
            <summary>
            Gets or sets a value indicating how to handle overlapped axis labels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.ItemFormatter">
            <summary>
            Gets or sets the itemFormatter client-side function name for axis labels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.OnClientRangeChanged">
            <summary>
            Occurs when axis range changed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.ItemsSource">
            <summary>
            Gets or sets the items source for axis labels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.Binding">
            <summary>
            Gets or sets the comma-separated property names for property "ItemsSource".
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LogBase">
            <summary>
            Gets or sets the logarithmic base of the axis.
            </summary>
            <remarks>
            If the base is not specified the axis uses the normal scale.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LabelAlign">
            <summary>
            Gets or sets the label alignment.
            </summary>
            <remarks>
            By default the labels are centered. The supported values are 'left' and 'right' for x-axis and 'top' and 'bottom' for y-axis.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.PlotAreaIndex">
            <summary>
            Gets or sets the plot area for the axis.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartAxis`1.LabelPadding">
            <summary>
            Gets or sets the label padding.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartSeries`1">
            <summary>
            Represents a series of data points to display in the chart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ChartSeries`1.#ctor(C1.Web.Mvc.FlexChart{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ChartSeries`1"/> instance.
            </summary>
            <param name="owner">An object which derived from <see cref="T:C1.Web.Mvc.FlexChart`1"/>.</param>
        </member>
        <member name="P:C1.Web.Mvc.ChartSeries`1.ChartType">
            <summary>
            Gets or sets the chart type for a specific series, overriding the chart type set on the overall chart.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ChartTooltip">
            <summary>
            Represents chart tooltip.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.Content">
            <summary>
            Gets or sets the tooltip content.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.Gap">
            <summary>
            Gets or sets the distance between the tooltip and the target element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.HideDelay">
            <summary>
            Gets or sets the delay, in milliseconds, before hiding the tooltip after the mouse leaves the target element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.IsContentHtml">
            <summary>
            Gets or sets whether the tooltip contents should be displayed as plain text or as HTML.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.ShowDelay">
            <summary>
            Gets or sets the delay, in milliseconds, before showing the tooltip after the mouse enters the target element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.Threshold">
            <summary>
            Gets or sets the maximum distance from the element to display the tooltip.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.OnClientPopup">
            <summary>
            Occurs before the tooltip content is displayed.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ChartTooltip.ShowAtMouse">
            <summary>
            Gets or sets a value that determines whether the tooltip should be positioned with respect to the mouse position rather than the target element.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Circle">
            <summary>
            Represents a circle annotation for AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Circle.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Circle"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Circle.Radius">
            <summary>
            Gets or sets the radius of the Circle annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewBatchEditRequest`1">
            <summary>
            Define the request data for batch updating.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewRequest`1">
            <summary>
            The request data which is passed from client side.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Command">
            <summary>
            The request command type.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.PageIndex">
            <summary>
            The page index.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.PageSize">
            <summary>
            The page size.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.SortDescriptions">
            <summary>
            The sort descriptions.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Skip">
            <summary>
            Gets or sets the skip items' count from the start.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Top">
            <summary>
            Gets or sets the items' count required.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Column">
            <summary>
            Gets or sets which column of data will be acquired
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.Distinct">
            <summary>
            Indicate the data of column should be distinct.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewRequest`1.ExtraRequestData">
            <summary>
            Gets the extra request data.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewBatchEditRequest`1.OperatingItems">
            <summary>
            The batch operating data.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewEditRequest`1">
            <summary>
            The request data for editing which is passed from client side.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewEditRequest`1.OperatingItems">
            <summary>
            The items which is used for creating, updating or deleting.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewItemResult`1">
            <summary>
            The result of operating a CollectionView item.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.OperationResult">
            <summary>
            The result of an operation.
            </summary>
            <summary>
            The result of an operation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.OperationResult.Success">
            <summary>
            Gets or sets whether the operation is success.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.OperationResult.Error">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewItemResult`1.Data">
            <summary>
            The data of the operated item.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewResponse`1">
            <summary>
            The response data of CollectionView.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.Items">
            <summary>
            The items data for Read command.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.PageIndex">
            <summary>
            The index of page which the items are in.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.TotalItemCount">
            <summary>
            The total number of items in the view before paging is applied.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.OperatedItemResults">
            <summary>
            The results of creating, deleting or updating items.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.Skip">
            <summary>
            Gets or sets the skip item count from the start.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.CollectionViewResponse`1.ColumnData">
            <summary>
            Gets or sets the data of specific column.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DataLabel">
            <summary>
            The point data label for FlexChart.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DataLabelBase">
            <summary>
            The basic type of the point data label
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.Content">
            <summary>
            Gets or sets the content of data labels.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.Border">
            <summary>
            Gets or sets a value indicating whether data labels have borders.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.OnClientRendering">
            <summary>
            Occurs before the rendering data label.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.ConnectingLine">
            <summary>
            Gets or sets a value indicating whether to draw lines that connect labels to the data points.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabelBase.Offset">
            <summary>
            Gets or sets the offset from label to the data point.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataLabel.Position">
            <summary>
            Gets or sets the position of data labels.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DataMap">
            <summary>
            Represents a data map for use with the column's DataMap property.
            </summary>
            <remarks>
            Data maps provide the grid with automatic look up capabilities. For example, you may want to display a customer name instead of his ID, or a color name instead of its RGB value.
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.DataMap.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.DataMap"/> instance.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DataMap.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.DataMap"/> instance.
            </summary>
            <param name="helper">The HtmlHelper instance.</param>
        </member>
        <member name="M:C1.Web.Mvc.DataMap.ShouldSerializeItemsSource">
            <summary>
            Specifies whether the ItemsSource property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.DisplayMemberPath">
            <summary>
            Gets or sets the name of the property to use as the visual representation of the item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.SelectedValuePath">
            <summary>
            Gets or sets the name of the property to use as a key for the item (data value).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.OnClientMapChanged">
            <summary>
            Occurs when the map data changes.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.IsEditable">
            <summary>
            Gets or sets a value that indicates whether users should be allowed to enter values. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.SortByDisplayValues">
            <summary>
            Gets or sets a value that determines whether to use mapped (display) or raw values when sorting the data. The default value is false.
            </summary>
            <remarks>
            The default is false. Setting to true makes the column be sortted with the mapped display values. If the grid is in remote bind mode, need passing the dataMapItemsSourceGetter argument on calling the CollectionViewHelper.Read() method.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.DataMap.ItemsSource">
            <summary>
            Gets the ItemsSource settings.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DataPoint">
            <summary>
            Class that represents a data point (with x and y coordinates).
            </summary>
            <remarks>
            X and Y coordinates can be specified as a number or a Date object(time-based data).
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.DataPoint.#ctor(System.Object,System.Object)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.DataPoint"/> instance.
            </summary>
            <param name="x">The X coordinate value of this DataPoint.</param>
            <param name="y">The Y coordinate value of this DataPoint.</param>
        </member>
        <member name="M:C1.Web.Mvc.DataPoint.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.DataPoint"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataPoint.X">
            <summary>
            Gets or sets X coordinate value of this DataPoint.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataPoint.Y">
            <summary>
            Gets or sets Y coordinate value of this DataPoint.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Ellipse">
            <summary>
            Represents an ellipse annotation for AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Ellipse.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Ellipse"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Ellipse.Height">
            <summary>
            Gets or sets the height of the Ellipse annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Ellipse.Width">
            <summary>
            Gets or sets the width of the Ellipse annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ErrorBar`1">
            <summary>
            The ErrorBar series helps you see margins of error and standard deviations at a glance. They can be shown as a standard error amount, a percentage, or a standard deviation. You can also set your own values to display the exact error amounts you want.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ErrorBar`1.ShouldSerializeErrorBarStyle">
            <summary>
            Specifies whether the ErrorBarStyle property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.ErrorBar`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ErrorBar`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.Direction">
            <summary>
            Gets or sets a value that specifies the direction of the series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.ErrorAmount">
            <summary>
            Gets or sets a value that specifies the error amount of the series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.ErrorBarStyle">
            <summary>
            Gets or sets the ErrorBar style.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.Value">
            <summary>
            Gets or sets a value that specifies the error value of the series. This property should be work with ErrorAmount property. If ErrorAmount is ErrorAmount.FixedValue, the Value property is a fixed number value. If ErrorAmount is ErrorAmount.Percentage, the Value property is a percentage number value between 0 and 1. If errorAmount is ErrorAmount.Custom, the Value property is an object of minus/plus value or an array of minus/plus value. If ErrorAmount is ErrorAmount.StandardDeviation, the Value property is a percentage number of calculated standard deviation value.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.EndStyle">
            <summary>
            Gets or sets a value that specifies the end style of the series.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ErrorBar`1.ExtraSeriesTypeName">
            <summary>
            Gets the series name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ExtraOptions">
            <summary>
            Extra options for FlexChart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ExtraOptions.ShouldSerializeFunnel">
            <summary>
            Specifies whether the Funnel property should be serialized.
            </summary>
            <returns>
            If true, it will be serialized.
            Otherwise, it will not be serialized.
            </returns>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.BubbleMaxSize">
            <summary>
            Specifies the maximum size (pixels) of symbols in the Bubble chart.
            </summary>
            <remarks>
            The default value is 30
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.BubbleMinSize">
            <summary>
            Specifies the minimum size (pixels) of symbols in the Bubble chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.GroupWidth">
            <summary>
            Specifies the group width for Column charts, or the group height for Bar charts.The group width can be specified in pixels or percent of available space.
            </summary>
            <remarks>
            The default value is "70%"
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.ExtraOptions.Funnel">
            <summary>
            Gets Funnel options. The following options are supported : NeckWidth, NeckHeight, Type.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Filter">
            <summary>
            Define a filter class.
            </summary>
            <remarks>
            It is obsoleted now. Please use ColumnFilter instead. 
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.Filter.ColumnFilter">
            <summary>
            Gets the specified filter.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FilterCondition">
            <summary>
            Defines a filter condition.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FilterCondition.Operator">
            <summary>
            Gets or sets the operator used by this Condition.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FilterCondition.Value">
            <summary>
            Gets or sets the value used by this Condition.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FlexRadarSeries`1">
            <summary>
            Represents a series of data points to display in the chart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FlexRadarSeries`1.#ctor(C1.Web.Mvc.FlexRadar{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FlexRadarSeries`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.FlexRadarSeries`1.ChartType">
            <summary>
            Gets or sets the chart type for a specific series, overriding the chart type set on the overall chart. 
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FunctionSeries`1">
            <summary>
            Represents an extension of the FunctionSeries for the FlexChart.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TrendLineBase`1">
            <summary>
            Represents base class for various trend lines.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.TrendLineBase`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.TrendLineBase`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.TrendLineBase`1.SampleCount">
            <summary>
            Gets or sets the sample count for function calculation. 
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.FunctionSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.FunctionSeries`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.FunctionSeries`1.Min">
            <summary>
            Gets or sets the minimum value for function calculation. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FunctionSeries`1.Max">
            <summary>
            Gets or sets the max value for the function calculation. 
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FunnelOptions">
            <summary>
            Options for Funnel chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FunnelOptions.NeckWidth">
            <summary>
            Specifies the neck width as a percentage for the Funnel chart.The default value is 0.2.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FunnelOptions.NeckHeight">
            <summary>
            Specifies the neck height as a percentage for the Funnel chart.The default value is 0.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.FunnelOptions.Type">
            <summary>
            Specifies the type of Funnel chart. It should be 'Rectangle' or 'Default'. NeckWidth and NeckHeight don't work if type is set to Rectangle.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Image">
            <summary>
            Define an image annotation for AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Image.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Image"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Image.Height">
            <summary>
            Gets or sets the height of the Image annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Image.Width">
            <summary>
            Gets or sets the width of the Image annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Image.Href">
            <summary>
            Gets or sets the href of the Image annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Line">
            <summary>
            Represents a line annotation for AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Line.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Line"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Line.Start">
            <summary>
            Gets or sets the start point of the Line annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Line.End">
            <summary>
            Gets or sets the end point of the Line annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MenuCommand">
            <summary>
            Represents the action for the MenuItem to execute.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuCommand.ExecuteCommand">
            <summary>
            This method executes the command.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuCommand.CanExecuteCommand">
            <summary>
            This method returns a Boolean value that determines whether the controller can execute the command.
            </summary>
            <remarks>
            If this method returns false, the menu option is disabled.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.MenuItem">
            <summary>
            Represents the items displayed in the Menu.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.Header">
            <summary>
            Gets or sets the header of the menu item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.Command">
            <summary>
            Gets or sets the associated menu command.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.CommandParameter">
            <summary>
            Gets or sets the associated menu command parameter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MenuItem.IsSeparator">
            <summary>
            Gets or sets whether the MenuItem is a separator.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MovingAverage`1">
            <summary>
            Represents an extension of the MovingAverage Series for the FlexChart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.MovingAverage`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.MovingAverage`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.MovingAverage`1.Type">
            <summary>
            Gets or sets the type of the moving average line.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.MovingAverage`1.Period">
            <summary>
            Gets or sets the period of the moving average line.
            </summary>
            <remarks>
            It should be set to some integer value greater than 1. 
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.MovingAverage`1.ExtraSeriesTypeName">
            <summary>
            Gets the series name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ParametricFunctionSeries`1">
            <summary>
            Represents a parametric extension of the FunctionSeries for the FlexChart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ParametricFunctionSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.ParametricFunctionSeries`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.ParametricFunctionSeries`1.XFunc">
            <summary>
            Gets or sets the function used to calculate the x value. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ParametricFunctionSeries`1.YFunc">
            <summary>
            Gets or sets the function used to calculate the y value. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ParametricFunctionSeries`1.ExtraSeriesTypeName">
            <summary>
            Gets the series name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.PieDataLabel">
            <summary>
            The point data label for FlexPie.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PieDataLabel.Position">
            <summary>
            Gets or sets the position of data labels.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.PlotArea">
            <summary>
            Represents a plot area on the chart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.PlotArea.#ctor">
            <summary>
            Creats one <see cref="T:C1.Web.Mvc.PlotArea"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Column">
            <summary>
            Gets or sets the column number of plot area. Using column property, you can set vertical position of the plot area on the chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Row">
            <summary>
            Gets or sets the row number of plot area. Using row property, you can set horizontal position of the plot area on the chart.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Width">
            <summary>
            Gets or sets width of the plot area. The width can be specified as number(sets the width in pixels) or string in the format '{number}*' (star sizing).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Height">
            <summary>
            Gets or sets height of the plot area. The height can be specified as number(sets the height in pixels) or string in the format '{number}*' (star sizing).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Style">
            <summary>
            Gets or sets the style of the plot area. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PlotArea.Name">
            <summary>
            Gets or sets the plot area name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Polygon">
            <summary>
            Represents a polygon annotation for AnnotationLayer.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Polygon.Points">
            <summary>
            Gets the collection of points of the Polygon annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.PropertyGroupDescription">
            <summary>
            Describes the grouping of items using a property name as the criterion.
            </summary>
            <summary>
            Describes the grouping of items using a property name as the criterion.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PropertyGroupDescription.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.PropertyGroupDescription.ClientConverter">
            <summary>
            Gets or sets the callback function that takes an item and a property name and returns the group name. 
            </summary>
            <remarks>
            If not specified, the group name is the property value for the item.
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.PropertyGroupDescription.ClientClass">
            <summary>
            Gets the client-side object's class name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Range">
            <summary>
            Defines ranges to be used with Gauge controls.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Max">
            <summary>
            Gets or sets the maximum value for this range.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Min">
            <summary>
            Gets or sets the minimum value for this range.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Name">
            <summary>
            Gets or sets whether the name of this Range.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Thickness">
            <summary>
            Gets or sets the thickness of this range as a percentage of the parent gauge's thickness.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.OnClientPropertyChanged">
            <summary>
            Gets or sets the maximum distance from the element to display the tooltip.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Range.Color">
            <summary>
            Gets or sets the color used to display this range.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Rectangle">
            <summary>
            Represents a rectangle annotation for AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Rectangle.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Rectangle"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Rectangle.Height">
            <summary>
            Gets or sets the height of the Rectangle annotation.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Rectangle.Width">
            <summary>
            Gets or sets the width of the Rectangle annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.SortDescription">
            <summary>
            Sort description.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.Ascending">
            <summary>
            Gets or sets whether sorting with ascending.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.Property">
            <summary>
            Gets or sets which property is used for sorting.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SortDescription.SortConverter">
            <summary>
            Gets or sets the sort converter used to sort mapped columns by display value.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Square">
            <summary>
            Represents a square annotation for the AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Square.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Square"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Square.Length">
            <summary>
            Gets or sets the length of the Square annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.SVGStyle">
            <summary>
            Defines a class for the svg style.
            </summary>
            <summary>
            Represents SVG styles.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.SVGStyle.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.SVGStyle"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.ArrowEnd">
            <summary>
            Gets or sets the arrowhead on the end of the path. The format for string is &lt;type&gt;[-&lt;width&gt;[-&lt;length&gt;]]. Possible types: classic, block, open, oval, diamond, none, width: wide, narrow, medium, length: long, short, medium.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.ClipRect">
            <summary>
            Gets or sets the clip area. The format for the text is comma or space separated values: x, y, width and height
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Cursor">
            <summary>
            CSS type of the cursor
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Cx">
            <summary>
            the x-axis coordinate of the center of the circle, or ellipse
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Cy">
            <summary>
            the y-axis coordinate of the center of the circle, or ellipse
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Fill">
            <summary>
            A value that indicates the filled color of the chart style.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FillOpacity">
            <summary>
            A value that indicates the fill opacity of the SVG element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Font">
            <summary>
            A value that indicates the font of the chart style.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FontFamily">
            <summary>
            A value that indicates the font family of the SVG element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FontSize">
            <summary>
            A value that indicates the font size of the SVG element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.FontWeight">
            <summary>
            A value that indicates the font weight of the SVG element.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Height">
            <summary>
             A value that indicates the height of the SVG element. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Href">
            <summary>
            A value to indicate the URL, if specified element behaves as hyperlink
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Opacity">
            <summary>
            A value to indicate the Opacity.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Path">
            <summary>
            SVG path string format
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.R">
            <summary>
            Radius of the circle, ellipse or rounded corner on the rect
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Rx">
            <summary>
            Horisontal radius of the ellipse
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Ry">
            <summary>
            Vertical radius of the ellipse
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Src">
            <summary>
            Image URL, only works for Element.image element
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Stroke">
            <summary>
            A value that indicates the stroke color.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeDasharray">
            <summary>
            A value that indicates the stroke dasharry, possible values: ["", "-", ".", "-.", "-..", ". ", "- ", "--", "- .", "--.", "--.."] 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeLinecap">
            <summary>
            A value that indicates the stroke line cap, possible values: ["butt", "square", "round"]
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeLinejoin">
            <summary>
            A value that indicates the stroke line join method, possible values: ["bevel", "round", "miter"]
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeMiterlimit">
            <summary>
            A value that indicates the stroke miter limit.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeOpacity">
            <summary>
            A value that indicates the stroke opacity.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.StrokeWidth">
            <summary>
            A value that indicates the stroke width.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Target">
            <summary>
            Used with href
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Text">
            <summary>
            Contents of the text element. Use \n for multiline text
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.TextAnchor">
            <summary>
            Possible values: ["start", "middle", "end"], default is "middle"
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Title">
            <summary>
            A text value for creating a tooltip.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Transform">
            <summary>
            A string value for SVG element to make a transform action.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Width">
            <summary>
            A value that indicates the width of the chart style.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.X">
            <summary>
            A value that indicates the x point of the chart style.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.SVGStyle.Y">
            <summary>
            A value that indicates the y point of the chart style.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Text">
            <summary>
            Represents a text annotation for the AnnotationLayer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Text.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Text"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Text.Content">
            <summary>
            Gets or sets the text of the annotation.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TitleStyle">
            <summary>
            The Style of title in FlexChart and FlexPie
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.FontSize">
            <summary>
            Get or set the font size of the title
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.Foreground">
            <summary>
            Get or set the fore ground color of the title
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.Fill">
            <summary>
            Get or set the fill style of the title
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.FontFamily">
            <summary>
            Get or set the font family of the title
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TitleStyle.Halign">
            <summary>
            Get or set the horizontal alignment of the title
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TrendLine`1">
            <summary>
            Represents an extension of the TrendLine Series for the FlexChart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.TrendLine`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.TrendLine`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.TrendLine`1.FitType">
            <summary>
            Gets or sets the fit type of the trendline.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.TrendLine`1.TrendLineOrder">
            <summary>
            Gets or sets the number of terms in a polynomial or fourier equation.
            </summary>
            <remarks>
            Set this value to an integer greater than 1. It works when the fitType is set to TrendLineFitType.Polynomial or TrendLineFitType.Fourier. 
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.TrendLine`1.ExtraSeriesTypeName">
            <summary>
            Gets the series name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Waterfall`1">
            <summary>
            Waterfall series is normally used to demonstrate how the starting position either increases or decreases through a series of changes.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Waterfall`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Waterfall`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ConnectorLines">
            <summary>
            Gets or sets a value that determines whether to show connector lines.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.IntermediateTotalLabels">
            <summary>
            Gets or sets the value of the property that contains the label of the intermediate total bar. The property should work with ShowIntermediateTotal and IntermediateToolPositions properties.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.IntermediateTotalPositions">
            <summary>
            Gets or sets the value of the property that contains the index for positions of the intermediate total bar.The property should work with ShowIntermediateTotal and IntermediateToolLabels property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.RelativeData">
            <summary>
            Gets or sets a value that determines whether the given data is relative.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ShowIntermediateTotal">
            <summary>
            Gets or sets a value that determines whether to show the intermediate total bar.The property should work with IntermediateToolPositions and IntermediateToolLabels property.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ShowTotal">
            <summary>
            Gets or sets a value that determines whether the show the total bar.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.Start">
            <summary>
            Gets or sets a value that determines the value of the start bar. If start is null, start bar will not show.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.StartLabel">
            <summary>
            Gets or sets the label of the start bar.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.Styles">
            <summary>
            Gets or set the waterfall styles.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.TotalLabel">
            <summary>
            Gets or sets the label of the total bar.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Waterfall`1.ExtraSeriesTypeName">
            <summary>
            Gets the series name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.WaterfallStyles">
            <summary>
            Supported styles in Waterfall series
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.WaterfallStyles.#ctor">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.WaterfallStyles"/> instance.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Start">
            <summary>
            Specifies the style of the start column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Total">
            <summary>
            Specifies the style of the total column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.IntermediateTotal">
            <summary>
            Specifies the style of the intermediate total column.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Falling">
            <summary>
            Specifies the style of the falling columns.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.Rising">
            <summary>
            Specifies the style of the rising columns.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WaterfallStyles.ConnectorLines">
            <summary>
            Specifies the style of the connectorLines.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.YFunctionSeries`1">
            <summary>
            Represents an extension of the YFunctionSeries for the FlexChart.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.YFunctionSeries`1.#ctor(C1.Web.Mvc.FlexChartCore{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.YFunctionSeries`1"/> instance.
            </summary>
            <param name="owner">The owner which owns this series.</param>
        </member>
        <member name="P:C1.Web.Mvc.YFunctionSeries`1.Func">
            <summary>
            Gets or sets the function used to calculate a value. 
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.YFunctionSeries`1.ExtraSeriesTypeName">
            <summary>
            Gets the series name.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.AnnotationBase"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.AnnotationBase"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Attachment(C1.Web.Mvc.AnnotationAttachment)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.Attachment"/>.
            Sets the attachment of the annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.IsVisible(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.IsVisible"/>.
            Sets the visibility of the annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Name(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.Name"/>.
            Sets the name of the annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Offset(System.Drawing.PointF)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.Offset"/>.
            Sets the offset of the annotation from the point.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Point(C1.Web.Mvc.DataPoint)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.Point"/>.
            Sets the point of the annotation.
            </summary>
            <remarks>
            The coordinates of points depends on the Attachment property. See AnnotationAttachment for further description.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.PointIndex(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.PointIndex"/>.
            Sets the data point index of the annotation.
            </summary>
            <remarks>
            Applies only when the Attachment property is set to DataIndex.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Position(C1.Web.Mvc.AnnotationPosition)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.Position"/>.
            Sets the position of the annotation. 
            </summary>
            <remarks>
            The position is relative to the point.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.SeriesIndex(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.SeriesIndex"/>.
            Sets the data series index of the annotation.
            </summary>
            <remarks>
            Applies only when the Attachment property is set to DataIndex.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Style(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.Style"/>.
            Sets the style of the annotation.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Tooltip(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.AnnotationBase.Tooltip"/>.
            Sets the tooltip of the annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationBaseBuilder`2.Style(C1.Web.Mvc.SVGStyle)">
            <summary>
            Sets the Style property.
            </summary>
            <remarks>
            Gets or sets the style of the annotation.
            </remarks>
            <param name="style">The SVGStyle instance</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.BoxWhisker`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ExtraSeriesBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ExtraSeries`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ChartSeriesBase`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ChartSeriesBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.SymbolSize(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolSize"/>.
            Sets the size in pixels of the symbols used to render this series. Applies to Scatter, LineSymbols, and SplineSymbols chart types.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.BindingX(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.BindingX"/>.
            Sets the name of the property that contains X values for the series.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Binding(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.Binding"/>.
            Sets the name of the property that contains Y values for the series.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Name(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.Name"/>.
            Sets the series name. The series name is displayed in the chart legend. Any series without a name does not appear in the legend.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.CssClass(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.CssClass"/>.
            Sets the series CSS class.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Style(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.Style"/>.
            Sets the series style.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.SymbolStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.SymbolStyle"/>.
            Sets the series symbol style. Applies to Scatter, LineSymbols, and SplineSymbols chart types.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.OnClientRendering(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.OnClientRendering"/> client event.
            Occurs when series is rendering.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AltStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.AltStyle"/>.
            Sets the alternative style for the series. The values from this property will be used for negative values in Bar, Column, and Scatter charts; and for rising values in financial chart types like Candlestick, LineBreak, EquiVolume etc.
            </summary>
            <remarks>
            If no value is provided, the default styles will be used.
            </remarks>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.OnClientRendered(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ChartSeriesBase`1.OnClientRendered"/> client event.
            Occurs when series is rendered.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.#ctor(`1,C1.Web.Mvc.FlexChart{`0})">
            <summary>
            Create one ChartSeriesBaseBuilder instance
            </summary>
            <param name="obj">The ChartSeries object.</param>
            <param name="Owner">The chart which owns this series.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Visibility(C1.Web.Mvc.Chart.SeriesVisibility)">
            <summary>
            Sets the Visibility property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisX(C1.Web.Mvc.Chart.Position)">
            <summary>
            Sets the AxisX property.
            </summary>
            <param name="position">The position of AxisX</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisX(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>
            Sets the AxisX property.
            </summary>
            <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisY(C1.Web.Mvc.Chart.Position)">
            <summary>
            Sets the AxisY property.
            </summary>
            <param name="position">The position of AxisY</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.AxisY(System.Action{C1.Web.Mvc.Fluent.ChartAxisBuilder{`0}})">
            <summary>
            Sets the AxisY property.
            </summary>
            <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Symbol(C1.Web.Mvc.Chart.Marker,System.Int32)">
            <summary>
            Set the Symbol for Series.
            </summary>
            <param name="marker">The symbol marker type</param>
            <param name="symbolSize">The size of symbol</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Symbol(C1.Web.Mvc.Chart.Marker,System.Int32,System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Set the Symbol for Series.
            </summary>
            <param name="marker">The symbol marker type</param>
            <param name="symbolSize">The size of symbol</param>
            <param name="symbolStyleBuilder">The builder of symbol style</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.SymbolMarker(C1.Web.Mvc.Chart.Marker)">
            <summary>
            Sets the SymbolMarker property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String)">
            <summary>
            Bind data with the url of the action which is used for reading data.
            </summary>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.String)">
            <summary>
            Bind data with specified x data field name and the url of the action which is used for reading data.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.String,System.String)">
            <summary>
            Bind data with specified x data field name, value property and the url of the action which is used for reading data.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="valueProperty">Sets the name of the value data field.</param>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind data with a data source.
            </summary>
            <param name="sourceCollection">The data source</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind data with specified x data field name and a data source.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="sourceCollection">The data source</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBaseBuilder`3.Bind(System.String,System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind data with specified x data field name and value property of the data source.
            </summary>
            <param name="xDataFieldName">Sets the name of the x data field.</param>
            <param name="valueProperty">Sets the name of the value data field.</param>
            <param name="sourceCollection">The data source</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraSeriesBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ExtraSeriesBuilder`3"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ExtraSeries`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.#ctor(C1.Web.Mvc.BoxWhisker{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.BoxWhisker`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.GapWidth(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.GapWidth"/>.
            Sets a value that determines the gap width as a percentage for the Box and Whisker chart. The default value for this property is 0.1. The min value is 0 and max value is 1.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.GroupWidth(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.GroupWidth"/>.
            Sets a value that determines the group width as a percentage for the Box and Whisker chart. The default value for this property is 0.8. The min value is 0 and max value is 1.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.MeanLineStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.MeanLineStyle"/>.
            Sets a value that specifies the style for the mean line.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.MeanMarkerStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.MeanMarkerStyle"/>.
            Sets a value that specifies the style for the mean marker.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.QuartileCalculation(C1.Web.Mvc.Chart.QuartileCalculation)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.QuartileCalculation"/>.
            Sets a value that specifies the quartile calculation for the Box and Whisker chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowInnerPoints(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.ShowInnerPoints"/>.
            Sets a value that determines whether to show the inner points for the Box and Whisker chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowMeanLine(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.ShowMeanLine"/>.
            Sets a value that determines whether to show the mean line for the Box and Whisker chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowMeanMarker(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.ShowMeanMarker"/>.
            Sets a value that determines whether to show the mean marker for the Box and Whisker chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BoxWhiskerBuilder`1.ShowOutliers(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.BoxWhisker`1.ShowOutliers"/>.
            Sets a value that determines whether to show the outliers for the Box and Whisker chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CellTemplateBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.CellTemplate"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.#ctor(C1.Web.Mvc.CellTemplate)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.CellTemplateBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.CellTemplate"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.TemplateId(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CellTemplate.TemplateId"/>.
            Sets the id of the template for the grid cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.TemplateContent(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CellTemplate.TemplateContent"/>.
            Sets the content of the template for the grid cell.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.EditTemplateId(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CellTemplate.EditTemplateId"/>.
            Sets the id of the template for the grid cell in editing mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.EditTemplateContent(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.CellTemplate.EditTemplateContent"/>.
            Sets the content of the template for the grid cell in editing mode.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.Template(System.String)">
            <summary>
            Remove this method as it is obsoleted.
            </summary>
            <param name="value">The template content.</param>
            <returns>The cell template builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CellTemplateBuilder.EditTemplate(System.String)">
            <summary>
            Remove this method as it is obsoleted.
            </summary>
            <param name="value">The editor template content.</param>
            <returns>The cell template builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartAxisBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ChartAxis`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.#ctor(C1.Web.Mvc.ChartAxis{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ChartAxisBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ChartAxis`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Reversed(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.Reversed"/>.
            Sets a value indicating whether the axis is reversed (top to bottom or right to left).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MajorUnit(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.MajorUnit"/>.
            Sets the number of units between axis labels.If the axis contains date values, then the units are expressed in days.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MinorUnit(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.MinorUnit"/>.
            Sets the number of units between minor axis ticks. If the axis contains date values, then the units are expressed in days.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Name(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.Name"/>.
            Sets the axis name.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Title(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.Title"/>.
            Sets the title text shown next to the axis.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Format(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.Format"/>.
            Sets the format string used for axis labels 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MajorGrid(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.MajorGrid"/>.
            Sets a value indicating whether the axis includes grid lines.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MinorGrid(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.MinorGrid"/>.
            Sets a value indicating whether the axis includes minor grid lines.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.AxisLine(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.AxisLine"/>.
            Sets a value indicating whether the axis line is visible.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Labels(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.Labels"/>.
            Sets a value indicating whether axis labels are visible.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LabelAngle(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.LabelAngle"/>.
            Sets the rotation angle of axis labels. The angle is measured in degrees with valid values ranging from -90 to 90.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Origin(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.Origin"/>.
            Sets the value at which the axis crosses perpendicular axis.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.ItemFormatter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.ItemFormatter"/>.
            Sets the itemFormatter client-side function name for axis labels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.OnClientRangeChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ChartAxis`1.OnClientRangeChanged"/> client event.
            Occurs when axis range changed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Binding(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.Binding"/>.
            Sets the comma-separated property names for property "ItemsSource".
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LogBase(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.LogBase"/>.
            Sets the logarithmic base of the axis.
            </summary>
            <remarks>
            If the base is not specified the axis uses the normal scale.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LabelAlign(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.LabelAlign"/>.
            Sets the label alignment.
            </summary>
            <remarks>
            By default the labels are centered. The supported values are 'left' and 'right' for x-axis and 'top' and 'bottom' for y-axis.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.PlotAreaIndex(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.PlotAreaIndex"/>.
            Sets the plot area for the axis.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.LabelPadding(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartAxis`1.LabelPadding"/>.
            Sets the label padding.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Position(C1.Web.Mvc.Chart.Position)">
            <summary>
            Sets the enumerated axis position.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MajorTickMarks(C1.Web.Mvc.Chart.AxisTickMark)">
            <summary>
            Sets the location of axis major tick marks.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.MinorTickMarks(C1.Web.Mvc.Chart.AxisTickMark)">
            <summary>
            Sets the location of axis minor tick marks.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.OverlappingLabels(C1.Web.Mvc.Chart.AxisOverlappingLabels)">
            <summary>
            Sets the overlapping method for axis labels.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.String)">
            <summary>
            Bind the axis with a special data source to customize the labels.
            </summary>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.String,System.String)">
            <summary>
            Bind the axis with a special data source to customize the labels.
            </summary>
            <param name="bindingFields">The field for binding with the data source.</param>
            <param name="readActionUrl">The url of the action which is used for reading data</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind the axis with a special data source to customize the labels.
            </summary>
            <param name="sourceCollection">The data source</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Bind(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Bind the axis with a special data source to customize the labels.
            </summary>
            <param name="bindingFields">The field for binding with the data source.</param>
            <param name="sourceCollection">The data source</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Min(System.Nullable{System.Double})">
            <summary>
            Sets the Min property.
            </summary>
            <remarks>
            Gets or sets the minimum value shown on the axis. If not set, the minimum is calculated automatically.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Min(System.DateTime)">
            <summary>
            Sets the Min property.
            </summary>
            <remarks>
            Gets or sets the minimum value shown on the axis. If not set, the minimum is calculated automatically.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Max(System.Nullable{System.Double})">
            <summary>
            Sets the Max property.
            </summary>
            <remarks>
            Gets or sets the maximum value shown on the axis. If not set, the maximum is calculated automatically.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAxisBuilder`1.Max(System.DateTime)">
            <summary>
            Sets the Max property.
            </summary>
            <remarks>
            Gets or sets the maximum value shown on the axis. If not set, the maximum is calculated automatically.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartSeriesBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ChartSeries`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBuilder`1.#ctor(C1.Web.Mvc.ChartSeries{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ChartSeriesBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ChartSeries`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartSeriesBuilder`1.ChartType(C1.Web.Mvc.Chart.ChartType)">
            <summary>
            Sets the ChartType property.
            </summary>
            <remarks>
            Gets or sets the chart type for a specific series, overriding the chart type set on the overall chart.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartTooltipBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ChartTooltip"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.#ctor(C1.Web.Mvc.ChartTooltip)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ChartTooltipBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ChartTooltip"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.Content(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartTooltip.Content"/>.
            Sets the tooltip content.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.Gap(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartTooltip.Gap"/>.
            Sets the distance between the tooltip and the target element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.HideDelay(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartTooltip.HideDelay"/>.
            Sets the delay, in milliseconds, before hiding the tooltip after the mouse leaves the target element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.IsContentHtml(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartTooltip.IsContentHtml"/>.
            Sets whether the tooltip contents should be displayed as plain text or as HTML.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.ShowDelay(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartTooltip.ShowDelay"/>.
            Sets the delay, in milliseconds, before showing the tooltip after the mouse enters the target element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.Threshold(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartTooltip.Threshold"/>.
            Sets the maximum distance from the element to display the tooltip.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.OnClientPopup(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.ChartTooltip.OnClientPopup"/> client event.
            Occurs before the tooltip content is displayed.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartTooltipBuilder.ShowAtMouse(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ChartTooltip.ShowAtMouse"/>.
            Sets a value that determines whether the tooltip should be positioned with respect to the mouse position rather than the target element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.CircleBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Circle"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ShapeBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Shape"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ShapeBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ShapeBuilder`2"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Shape"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ShapeBuilder`2.Content(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Shape.Content"/>.
            Sets the text of the annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CircleBuilder.#ctor(C1.Web.Mvc.Circle)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.CircleBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Circle"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.CircleBuilder.Radius(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Circle.Radius"/>.
            Sets the radius of the Circle annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Column"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ColumnBase"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ColumnBase"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowDragging(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.AllowDragging"/>.
            Sets whether the user can move this row or column to a new position with the mouse.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowMerging(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.AllowMerging"/>.
            Sets whether cells in this row or column can be merged.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowResizing(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.AllowResizing"/>.
            Sets a value that indicates whether the user can resize the row or column with the mouse.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.CssClass(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.CssClass"/>.
            Sets a CSS class name to be used when rendering non-header cells in this row or column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsContentHtml(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.IsContentHtml"/>.
            Sets whether cells in this row or column contain HTML content rather than plain text.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsReadOnly(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.IsReadOnly"/>.
            Sets whether cells in this row or column can be edited.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsSelected(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.IsSelected"/>.
            Sets whether this row or column is selected.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Visible(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Visible"/>.
            Sets whether this row or column is visible.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.WordWrap(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.WordWrap"/>.
            Sets whether cells in this row or column should wrap their content.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Aggregate(C1.Web.Mvc.Grid.Aggregate)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Aggregate"/>.
            Sets the Aggregate to display in the group header rows for this column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Align(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Align"/>.
            Sets the horizontal alignment of items in this column.
            </summary>
            <remarks>
            The default value for this property is null, which causes the grid to select the alignment automatically based on column's dataType (numbers are right-aligned, boolean values are centered, other types are left-aligned).If you want to override the default alignment, set this property to 'left', 'right', or 'center'.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.AllowSorting(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.AllowSorting"/>.
            Sets whether the user can sort this column by clicking its header.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Binding(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Binding"/>.
            Sets the name of the property this column is bound to.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.DataType(System.Nullable{C1.Web.Mvc.Grid.DataType})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.DataType"/>.
            Sets the type of value stored in this column.Values are coerced into the proper type when editing the grid.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Format(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Format"/>.
            Sets the format string used to convert raw values into display values for this column (see Globalize).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Header(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Header"/>.
            Sets the text displayed in the column header.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.InputType(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.InputType"/>.
            Sets the "type" attribute of the HTML input element used to edit values in this column.
            </summary>
            <remarks>
            Use this property to change the default setting if the default does not work well for the current culture, device, or application.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Mask(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Mask"/>.
            Sets a mask to be used while editing values in this column.
            </summary>
            <remarks>
            The mask format is the same used by the InputMask control. If specified, the mask should be compatible with the value of the format property. For example, the mask '99/99/9999' can be used for entering dates formatted as 'MM/dd/yyyy'.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.MaxWidth(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.MaxWidth"/>.
            Sets the maximum width of this column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.MinWidth(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.MinWidth"/>.
            Sets the minimum width of this column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Name(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Name"/>.
            Sets the name of this column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Required(System.Nullable{System.Boolean})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Required"/>.
            Deprecated: use IsRequired instead to avoid confusion with 'required' HTML attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.IsRequired(System.Nullable{System.Boolean})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.IsRequired"/>.
            Sets a value that determines whether values in the column are required.
            </summary>
            <remarks>
            By default, this property is set to null, which means values are required, but string columns may contain empty strings. When set to true, values are required and empty strings are not allowed. When set to false, null values and empty strings are allowed.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.Width(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.Width"/>.
            Sets the width of this column.
            </summary>
            <remarks>
            Column widths may be positive numbers (column width in pixels), null or negative numbers (use the collection's default column width), or strings in the format '{number}*' (star sizing).
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.CellTemplate(System.Action{C1.Web.Mvc.Fluent.CellTemplateBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.CellTemplate"/>.
            Sets the cell template in this column.
            </summary>
            <remarks>
            It only works for cells panel.
            </remarks>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.SortMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.SortMemberPath"/>.
            Sets the name of the property to use when sorting this column.
            </summary>
            <remarks>
            Use this property in cases where you want the sorting to be performed based on values other than the ones speficied by the Binding property.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.DataMap(System.Action{C1.Web.Mvc.Fluent.DataMapBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.DataMap"/>.
            Sets the DataMap used to convert raw values into display values for the column.
            </summary>
            <remarks>
            The drop-down buttons are shown only if the column has a DataMap set and is editable. Clicking on the drop-down buttons causes the grid to show a list where users can select the value for the cell.
            </remarks>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.ShowDropDown(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.ShowDropDown"/>.
            Sets a value indicating whether the grid adds drop-down buttons to the cells in this column.
            </summary>
            <remarks>
            The drop-down buttons are shown only if the column has a DataMap set and is editable. Clicking on the drop-down buttons causes the grid to show a list where users can select the value for the cell.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBaseBuilder`2.DropDownCssClass(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnBase.DropDownCssClass"/>.
            Sets a CSS class name to add to drop-downs in this column.
            </summary>
            <remarks>
            The drop-down buttons are shown only if the column has a DataMap set and is editable. Clicking on the drop-down buttons causes the grid to show a list where users can select the value for the cell. Cell drop-downs require the wijmo.input module to be loaded.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnBuilder.#ctor(C1.Web.Mvc.Column)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ColumnBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Column"/> object to be configurated.</param>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnFilterBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ColumnFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.#ctor(C1.Web.Mvc.ColumnFilter)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ColumnFilterBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ColumnFilter"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.Column(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnFilter.Column"/>.
            Sets a string value which indicates the name or the binding of the column.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.FilterType(System.Nullable{C1.Web.Mvc.FilterType})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnFilter.FilterType"/>.
            Sets the types of filtering provided by this filter.
            </summary>
            <remarks>
            Setting this property to null causes the filter to use the value defined by the DefaultFilterType property.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFilterBuilder.ValueFilter(System.Action{C1.Web.Mvc.Fluent.ValueFilterBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ColumnFilter.ValueFilter"/>.
            Sets the value filter in this column filter.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataLabelBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.DataLabel"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.DataLabelBase"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.#ctor(`0)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.DataLabelBase"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.Content(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataLabelBase.Content"/>.
            Sets the content of data labels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.Border(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataLabelBase.Border"/>.
            Sets a value indicating whether data labels have borders.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.OnClientRendering(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DataLabelBase.OnClientRendering"/> client event.
            Occurs before the rendering data label.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.ConnectingLine(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataLabelBase.ConnectingLine"/>.
            Sets a value indicating whether to draw lines that connect labels to the data points.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBaseBuilder`2.Offset(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataLabelBase.Offset"/>.
            Sets the offset from label to the data point.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBuilder.#ctor(C1.Web.Mvc.DataLabel)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.DataLabelBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.DataLabel"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataLabelBuilder.Position(C1.Web.Mvc.Chart.LabelPosition)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataLabel.Position"/>.
            Sets the position of data labels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataMapBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.DataMap"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.#ctor(C1.Web.Mvc.DataMap)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.DataMapBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.DataMap"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.DisplayMemberPath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataMap.DisplayMemberPath"/>.
            Sets the name of the property to use as the visual representation of the item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.SelectedValuePath(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataMap.SelectedValuePath"/>.
            Sets the name of the property to use as a key for the item (data value).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.OnClientMapChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.DataMap.OnClientMapChanged"/> client event.
            Occurs when the map data changes.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.IsEditable(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataMap.IsEditable"/>.
            Sets a value that indicates whether users should be allowed to enter values. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.SortByDisplayValues(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataMap.SortByDisplayValues"/>.
            Sets a value that determines whether to use mapped (display) or raw values when sorting the data. The default value is false.
            </summary>
            <remarks>
            The default is false. Setting to true makes the column be sortted with the mapped display values. If the grid is in remote bind mode, need passing the dataMapItemsSourceGetter argument on calling the CollectionViewHelper.Read() method.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.Bind(System.Action{C1.Web.Mvc.Fluent.CollectionViewServiceBuilder{System.Object}})">
            <summary>
            Sets ItemsSource by builder.
            </summary>
            <param name="itemsSourceBuild">The build action for setting ItemsSource</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.Bind(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Bind to a collection.
            </summary>
            <param name="sourceCollection">The source collection</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataMapBuilder.Bind(System.String)">
            <summary>
            Sets the read action url.
            </summary>
            <param name="readActionUrl">The action url.</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.DataPointBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.DataPoint"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataPointBuilder.#ctor(C1.Web.Mvc.DataPoint)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.DataPointBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.DataPoint"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataPointBuilder.X(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataPoint.X"/>.
            Sets X coordinate value of this DataPoint.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.DataPointBuilder.Y(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.DataPoint.Y"/>.
            Sets Y coordinate value of this DataPoint.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.EllipseBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Ellipse"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EllipseBuilder.#ctor(C1.Web.Mvc.Ellipse)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.EllipseBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Ellipse"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EllipseBuilder.Height(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Ellipse.Height"/>.
            Sets the height of the Ellipse annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.EllipseBuilder.Width(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Ellipse.Width"/>.
            Sets the width of the Ellipse annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ErrorBarBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ErrorBar`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.#ctor(C1.Web.Mvc.ErrorBar{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ErrorBarBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ErrorBar`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.Direction(C1.Web.Mvc.Chart.ErrorBarDirection)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ErrorBar`1.Direction"/>.
            Sets a value that specifies the direction of the series.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.ErrorAmount(C1.Web.Mvc.Chart.ErrorAmount)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ErrorBar`1.ErrorAmount"/>.
            Sets a value that specifies the error amount of the series.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.ErrorBarStyle(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ErrorBar`1.ErrorBarStyle"/>.
            Sets the ErrorBar style.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.Value(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ErrorBar`1.Value"/>.
            Sets a value that specifies the error value of the series. This property should be work with ErrorAmount property. If ErrorAmount is ErrorAmount.FixedValue, the Value property is a fixed number value. If ErrorAmount is ErrorAmount.Percentage, the Value property is a percentage number value between 0 and 1. If errorAmount is ErrorAmount.Custom, the Value property is an object of minus/plus value or an array of minus/plus value. If ErrorAmount is ErrorAmount.StandardDeviation, the Value property is a percentage number of calculated standard deviation value.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ErrorBarBuilder`1.EndStyle(C1.Web.Mvc.Chart.ErrorBarEndStyle)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ErrorBar`1.EndStyle"/>.
            Sets a value that specifies the end style of the series.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ExtraOptionsBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ExtraOptions"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.#ctor(C1.Web.Mvc.ExtraOptions)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ExtraOptionsBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ExtraOptions"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.BubbleMaxSize(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ExtraOptions.BubbleMaxSize"/>.
            Specifies the maximum size (pixels) of symbols in the Bubble chart.
            </summary>
            <remarks>
            The default value is 30
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.BubbleMinSize(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ExtraOptions.BubbleMinSize"/>.
            Specifies the minimum size (pixels) of symbols in the Bubble chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.GroupWidth(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ExtraOptions.GroupWidth"/>.
            Specifies the group width for Column charts, or the group height for Bar charts.The group width can be specified in pixels or percent of available space.
            </summary>
            <remarks>
            The default value is "70%"
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ExtraOptionsBuilder.Funnel(System.Action{C1.Web.Mvc.Fluent.FunnelOptionsBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ExtraOptions.Funnel"/>.
            Sets Funnel options. The following options are supported : NeckWidth, NeckHeight, Type.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FlexRadarSeries`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder`1.#ctor(C1.Web.Mvc.FlexRadarSeries{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.FlexRadarSeries`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexRadarSeriesBuilder`1.ChartType(C1.Web.Mvc.Chart.RadarChartType)">
            <summary>
            Sets the ChartType property.
            </summary>
            <remarks>
            Gets or sets the chart type for a specific series, overriding the chart type set on the overall chart.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FunctionSeries`1"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TrendLineBaseBuilder`3">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.TrendLineBase`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBaseBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.TrendLineBaseBuilder`3"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.TrendLineBase`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBaseBuilder`3.SampleCount(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TrendLineBase`1.SampleCount"/>.
            Sets the sample count for function calculation. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3.#ctor(`1)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.FunctionSeries`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3.Min(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FunctionSeries`1.Min"/>.
            Sets the minimum value for function calculation. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunctionSeriesBuilder`3.Max(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FunctionSeries`1.Max"/>.
            Sets the max value for the function calculation. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FunnelOptionsBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.FunnelOptions"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.#ctor(C1.Web.Mvc.FunnelOptions)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.FunnelOptionsBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.FunnelOptions"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.NeckWidth(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FunnelOptions.NeckWidth"/>.
            Specifies the neck width as a percentage for the Funnel chart.The default value is 0.2.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.NeckHeight(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FunnelOptions.NeckHeight"/>.
            Specifies the neck height as a percentage for the Funnel chart.The default value is 0.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FunnelOptionsBuilder.Type(C1.Web.Mvc.FunnelType)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.FunnelOptions.Type"/>.
            Specifies the type of Funnel chart. It should be 'Rectangle' or 'Default'. NeckWidth and NeckHeight don't work if type is set to Rectangle.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ImageBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Image"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.#ctor(C1.Web.Mvc.Image)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ImageBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Image"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.Height(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Image.Height"/>.
            Sets the height of the Image annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.Width(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Image.Width"/>.
            Sets the width of the Image annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ImageBuilder.Href(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Image.Href"/>.
            Sets the href of the Image annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LineBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Line"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineBuilder.#ctor(C1.Web.Mvc.Line)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.LineBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Line"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineBuilder.Start(C1.Web.Mvc.DataPoint)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Line.Start"/>.
            Sets the start point of the Line annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineBuilder.End(C1.Web.Mvc.DataPoint)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Line.End"/>.
            Sets the end point of the Line annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuCommandBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.MenuCommand"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuCommandBuilder.#ctor(C1.Web.Mvc.MenuCommand)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.MenuCommandBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.MenuCommand"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuCommandBuilder.ExecuteCommand(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuCommand.ExecuteCommand"/>.
            This method executes the command.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuCommandBuilder.CanExecuteCommand(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuCommand.CanExecuteCommand"/>.
            This method returns a Boolean value that determines whether the controller can execute the command.
            </summary>
            <remarks>
            If this method returns false, the menu option is disabled.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuItemBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.MenuItem"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.#ctor(C1.Web.Mvc.MenuItem)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.MenuItemBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.MenuItem"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.Header(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuItem.Header"/>.
            Sets the header of the menu item.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.CommandParameter(System.Object)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuItem.CommandParameter"/>.
            Sets the associated menu command parameter.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.IsSeparator(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MenuItem.IsSeparator"/>.
            Sets whether the MenuItem is a separator.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.Command(System.Action{C1.Web.Mvc.Fluent.MenuCommandBuilder})">
            <summary>
            Sets the Command property.
            </summary>
            <param name="build">The build action</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemBuilder.Command(System.String,System.String)">
            <summary>
            Sets the Command property.
            </summary>
            <param name="execute">The execute client function</param>
            <param name="canExecute">The canExecute client function</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MovingAverageBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.MovingAverage`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MovingAverageBuilder`1.#ctor(C1.Web.Mvc.MovingAverage{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.MovingAverageBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.MovingAverage`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MovingAverageBuilder`1.Period(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.MovingAverage`1.Period"/>.
            Sets the period of the moving average line.
            </summary>
            <remarks>
            It should be set to some integer value greater than 1. 
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MovingAverageBuilder`1.Type(C1.Web.Mvc.Chart.MovingAverageType)">
            <summary>
            Sets the type of the moving average line.
            </summary>
            <param name="value">The value</param>
            <returns>Current Builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ParametricFunctionSeries`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1.#ctor(C1.Web.Mvc.ParametricFunctionSeries{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ParametricFunctionSeries`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1.XFunc(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ParametricFunctionSeries`1.XFunc"/>.
            Sets the function used to calculate the x value. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ParametricFunctionSeriesBuilder`1.YFunc(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ParametricFunctionSeries`1.YFunc"/>.
            Sets the function used to calculate the y value. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PieDataLabelBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.PieDataLabel"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PieDataLabelBuilder.#ctor(C1.Web.Mvc.PieDataLabel)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.PieDataLabelBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.PieDataLabel"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PieDataLabelBuilder.Position(C1.Web.Mvc.Chart.PieLabelPosition)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PieDataLabel.Position"/>.
            Sets the position of data labels.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PlotAreaBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.PlotArea"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.#ctor(C1.Web.Mvc.PlotArea)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.PlotAreaBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.PlotArea"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Column(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PlotArea.Column"/>.
            Sets the column number of plot area. Using column property, you can set vertical position of the plot area on the chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Row(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PlotArea.Row"/>.
            Sets the row number of plot area. Using row property, you can set horizontal position of the plot area on the chart.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Width(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PlotArea.Width"/>.
            Sets width of the plot area. The width can be specified as number(sets the width in pixels) or string in the format '{number}*' (star sizing).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Height(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PlotArea.Height"/>.
            Sets height of the plot area. The height can be specified as number(sets the height in pixels) or string in the format '{number}*' (star sizing).
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Style(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PlotArea.Style"/>.
            Sets the style of the plot area. 
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaBuilder.Name(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PlotArea.Name"/>.
            Sets the plot area name.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PolygonBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Polygon"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.#ctor(C1.Web.Mvc.Polygon)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.PolygonBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Polygon"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoint(C1.Web.Mvc.DataPoint)">
            <summary>
            Add point for Polygon annotation.
            </summary>
             <param name="point">The DataPoint instance</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoint(System.Action{C1.Web.Mvc.Fluent.DataPointBuilder})">
            <summary>
            Add point for Polygon annotation.
            </summary>
             <param name="build">The build function</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoint(System.Object,System.Object)">
            <summary>
            Add point for Polygon annotation.
            </summary>
            <param name="x">The X coordinate value of this DataPoint.</param>
            <param name="y">The Y coordinate value of this DataPoint.</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoints(C1.Web.Mvc.DataPoint[])">
            <summary>
            Add point array for Polygon annotation.
            </summary>
             <param name="points">The DataPoint array</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PolygonBuilder.AddPoints(System.Collections.Generic.IEnumerable{C1.Web.Mvc.DataPoint})">
            <summary>
            Add point array for Polygon annotation.
            </summary>
             <param name="points">The DataPoint list</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.PropertyGroupDescription"/>.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GroupDescriptionBuilder`2">
            <summary>
            The builder for the GroupDescription.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GroupDescriptionBuilder`2.#ctor(`0)">
            <summary>
            Create one ChartTooltipBuilder instance.
            </summary>
            <param name="control">The ChartTooltip control.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder.#ctor(C1.Web.Mvc.PropertyGroupDescription)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.PropertyGroupDescription"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder.PropertyName(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PropertyGroupDescription.PropertyName"/>.
            
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PropertyGroupDescriptionBuilder.ClientConverter(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.PropertyGroupDescription.ClientConverter"/>.
            Sets the callback function that takes an item and a property name and returns the group name. 
            </summary>
            <remarks>
            If not specified, the group name is the property value for the item.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RangeBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Range"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.#ctor(C1.Web.Mvc.Range)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.RangeBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Range"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Max(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Range.Max"/>.
            Sets the maximum value for this range.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Min(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Range.Min"/>.
            Sets the minimum value for this range.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Name(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Range.Name"/>.
            Sets whether the name of this Range.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Thickness(System.Double)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Range.Thickness"/>.
            Sets the thickness of this range as a percentage of the parent gauge's thickness.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.OnClientPropertyChanged(System.String)">
            <summary>
            Configurates the <see cref="P:C1.Web.Mvc.Range.OnClientPropertyChanged"/> client event.
            Sets the maximum distance from the element to display the tooltip.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeBuilder.Color(System.Drawing.Color)">
            <summary>
            Sets the Color property.
            </summary>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RectangleBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Rectangle"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RectangleBuilder.#ctor(C1.Web.Mvc.Rectangle)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.RectangleBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Rectangle"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RectangleBuilder.Height(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Rectangle.Height"/>.
            Sets the height of the Rectangle annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RectangleBuilder.Width(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Rectangle.Width"/>.
            Sets the width of the Rectangle annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SortDescriptionBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.SortDescription"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SortDescriptionBuilder.#ctor(C1.Web.Mvc.SortDescription)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.SortDescriptionBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.SortDescription"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SortDescriptionBuilder.Ascending(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SortDescription.Ascending"/>.
            Sets whether sorting with ascending.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SortDescriptionBuilder.Property(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SortDescription.Property"/>.
            Sets which property is used for sorting.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SquareBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Square"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SquareBuilder.#ctor(C1.Web.Mvc.Square)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.SquareBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Square"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SquareBuilder.Length(System.Single)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Square.Length"/>.
            Sets the length of the Square annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SVGStyleBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.SVGStyle"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.#ctor(C1.Web.Mvc.SVGStyle)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.SVGStyleBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.SVGStyle"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.ArrowEnd(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.ArrowEnd"/>.
            Sets the arrowhead on the end of the path. The format for string is &lt;type&gt;[-&lt;width&gt;[-&lt;length&gt;]]. Possible types: classic, block, open, oval, diamond, none, width: wide, narrow, medium, length: long, short, medium.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.ClipRect(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.ClipRect"/>.
            Sets the clip area. The format for the text is comma or space separated values: x, y, width and height
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Cursor(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Cursor"/>.
            CSS type of the cursor
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Cx(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Cx"/>.
            the x-axis coordinate of the center of the circle, or ellipse
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Cy(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Cy"/>.
            the y-axis coordinate of the center of the circle, or ellipse
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Fill(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Fill"/>.
            A value that indicates the filled color of the chart style.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FillOpacity(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.FillOpacity"/>.
            A value that indicates the fill opacity of the SVG element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Font(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Font"/>.
            A value that indicates the font of the chart style.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FontFamily(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.FontFamily"/>.
            A value that indicates the font family of the SVG element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FontSize(System.Nullable{System.Single})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.FontSize"/>.
            A value that indicates the font size of the SVG element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.FontWeight(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.FontWeight"/>.
            A value that indicates the font weight of the SVG element.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Height(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Height"/>.
             A value that indicates the height of the SVG element. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Href(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Href"/>.
            A value to indicate the URL, if specified element behaves as hyperlink
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Opacity(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Opacity"/>.
            A value to indicate the Opacity.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Path(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Path"/>.
            SVG path string format
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.R(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.R"/>.
            Radius of the circle, ellipse or rounded corner on the rect
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Rx(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Rx"/>.
            Horisontal radius of the ellipse
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Ry(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Ry"/>.
            Vertical radius of the ellipse
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Src(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Src"/>.
            Image URL, only works for Element.image element
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Stroke(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Stroke"/>.
            A value that indicates the stroke color.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeDasharray(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.StrokeDasharray"/>.
            A value that indicates the stroke dasharry, possible values: ["", "-", ".", "-.", "-..", ". ", "- ", "--", "- .", "--.", "--.."] 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeLinecap(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.StrokeLinecap"/>.
            A value that indicates the stroke line cap, possible values: ["butt", "square", "round"]
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeLinejoin(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.StrokeLinejoin"/>.
            A value that indicates the stroke line join method, possible values: ["bevel", "round", "miter"]
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeMiterlimit(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.StrokeMiterlimit"/>.
            A value that indicates the stroke miter limit.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeOpacity(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.StrokeOpacity"/>.
            A value that indicates the stroke opacity.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.StrokeWidth(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.StrokeWidth"/>.
            A value that indicates the stroke width.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Target(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Target"/>.
            Used with href
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Text(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Text"/>.
            Contents of the text element. Use \n for multiline text
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.TextAnchor(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.TextAnchor"/>.
            Possible values: ["start", "middle", "end"], default is "middle"
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Title(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Title"/>.
            A text value for creating a tooltip.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Transform(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Transform"/>.
            A string value for SVG element to make a transform action.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Width(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Width"/>.
            A value that indicates the width of the chart style.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.X(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.X"/>.
            A value that indicates the x point of the chart style.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SVGStyleBuilder.Y(System.Nullable{System.Double})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.SVGStyle.Y"/>.
            A value that indicates the y point of the chart style.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TextBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Text"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TextBuilder.#ctor(C1.Web.Mvc.Text)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.TextBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Text"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TextBuilder.Content(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Text.Content"/>.
            Sets the text of the annotation.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TitleStyleBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.TitleStyle"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.#ctor(C1.Web.Mvc.TitleStyle)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.TitleStyleBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.TitleStyle"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.FontSize(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TitleStyle.FontSize"/>.
            Get or set the font size of the title
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.Foreground(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TitleStyle.Foreground"/>.
            Get or set the fore ground color of the title
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.Fill(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TitleStyle.Fill"/>.
            Get or set the fill style of the title
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.FontFamily(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TitleStyle.FontFamily"/>.
            Get or set the font family of the title
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TitleStyleBuilder.Halign(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TitleStyle.Halign"/>.
            Get or set the horizontal alignment of the title
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.TrendLineBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.TrendLine`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBuilder`1.#ctor(C1.Web.Mvc.TrendLine{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.TrendLineBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.TrendLine`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBuilder`1.TrendLineOrder(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.TrendLine`1.TrendLineOrder"/>.
            Sets the number of terms in a polynomial or fourier equation.
            </summary>
            <remarks>
            Set this value to an integer greater than 1. It works when the fitType is set to TrendLineFitType.Polynomial or TrendLineFitType.Fourier. 
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.TrendLineBuilder`1.FitType(C1.Web.Mvc.Chart.TrendLineFitType)">
            <summary>
            Sets the fit type of the trendline.
            </summary>
            <param name="value">The value</param>
            <returns>Current Builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ValueFilterBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.ValueFilter"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.#ctor(C1.Web.Mvc.ValueFilter)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.ValueFilterBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.ValueFilter"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.FilterText(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ValueFilter.FilterText"/>.
            Sets a string to filter the list of display values.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.MaxValues(System.Int32)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ValueFilter.MaxValues"/>.
            Sets the maximum number of elements on the list of display values.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.UniqueValues(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ValueFilter.UniqueValues"/>.
            Sets an array containing the unique values to be displayed on the list.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.SortValues(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.ValueFilter.SortValues"/>.
            Sets a value that determines whether the values should be sorted when displayed in the editor.
            </summary>
            <remarks>
            This property is especially useful when you are using the <see cref="P:C1.Web.Mvc.ValueFilter.UniqueValues"/> to provide a custom list of values property and you would like to preserve the order of the values.
            </remarks>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ValueFilterBuilder.UniqueValues(System.Object[])">
            <summary>
            Sets the UniqueValues property.
            </summary>
            <remarks>
            Gets or sets an array containing the unique values to be displayed on the list.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.WaterfallBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.Waterfall`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.#ctor(C1.Web.Mvc.Waterfall{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.WaterfallBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.Waterfall`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.ConnectorLines(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.ConnectorLines"/>.
            Sets a value that determines whether to show connector lines.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.RelativeData(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.RelativeData"/>.
            Sets a value that determines whether the given data is relative.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.ShowIntermediateTotal(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.ShowIntermediateTotal"/>.
            Sets a value that determines whether to show the intermediate total bar.The property should work with IntermediateToolPositions and IntermediateToolLabels property.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.ShowTotal(System.Boolean)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.ShowTotal"/>.
            Sets a value that determines whether the show the total bar.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.Start(System.Nullable{System.Int32})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.Start"/>.
            Sets a value that determines the value of the start bar. If start is null, start bar will not show.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.StartLabel(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.StartLabel"/>.
            Sets the label of the start bar.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.Styles(System.Action{C1.Web.Mvc.Fluent.WaterfallStylesBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.Styles"/>.
            Sets or set the waterfall styles.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.TotalLabel(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.Waterfall`1.TotalLabel"/>.
            Sets the label of the total bar.
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.IntermediateTotalPositions(System.Int32[])">
            <summary>
            Sets the IntermediateTotalPositions property.
            </summary>
            <remarks>
            Gets or sets the value of the property that contains the index for positions of the intermediate total bar.The property should work with ShowIntermediateTotal and IntermediateToolLabels property.
            </remarks>
            <param name="positions">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallBuilder`1.IntermediateTotalLabels(System.String[])">
            <summary>
            Sets the IntermediateTotalLabels property.
            </summary>
            <remarks>
            Gets or sets the value of the property that contains the label of the intermediate total bar. The property should work with ShowIntermediateTotal and IntermediateToolPositions properties.
            </remarks>
            <param name="labels">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.WaterfallStylesBuilder">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.WaterfallStyles"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.#ctor(C1.Web.Mvc.WaterfallStyles)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.WaterfallStylesBuilder"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.WaterfallStyles"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Start(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.WaterfallStyles.Start"/>.
            Specifies the style of the start column.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Total(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.WaterfallStyles.Total"/>.
            Specifies the style of the total column.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.IntermediateTotal(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.WaterfallStyles.IntermediateTotal"/>.
            Specifies the style of the intermediate total column.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Falling(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.WaterfallStyles.Falling"/>.
            Specifies the style of the falling columns.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.Rising(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.WaterfallStyles.Rising"/>.
            Specifies the style of the rising columns.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.WaterfallStylesBuilder.ConnectorLines(System.Action{C1.Web.Mvc.Fluent.SVGStyleBuilder})">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.WaterfallStyles.ConnectorLines"/>.
            Specifies the style of the connectorLines.
            </summary>
            <param name="build">The builder function.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.YFunctionSeriesBuilder`1">
            <summary>
            Defines a builder to configurate <see cref="T:C1.Web.Mvc.YFunctionSeries`1"/>.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.YFunctionSeriesBuilder`1.#ctor(C1.Web.Mvc.YFunctionSeries{`0})">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Fluent.YFunctionSeriesBuilder`1"/> instance to configurate <paramref name="obj"/>.
            </summary>
            <param name="obj">The <see cref="T:C1.Web.Mvc.YFunctionSeries`1"/> object to be configurated.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.YFunctionSeriesBuilder`1.Func(System.String)">
            <summary>
            Configurates <see cref="P:C1.Web.Mvc.YFunctionSeries`1.Func"/>.
            Sets the function used to calculate a value. 
            </summary>
            <param name="value">The value.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.AttrDictionary`1">
            <summary>
            This dictionary is case-insensitive. 
            And when invoke Items[string key] and the key doesn't exist, it will return default(TValue).
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.TemplateBindingsConverter">
            <summary>
            Defines a converter for <see cref="T:C1.Web.Mvc.TemplateBindings"/>
            </summary>
        </member>
        <member name="T:C1.JsonNet.JsonConverter">
            <summary>
            Defines an abstract class for json converter.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseConverter">
            <summary>
            Defines the base class for the converter.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseConverter.CanConvert(System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <param name="context">The context information.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseConverter.Write(C1.Web.Mvc.Serialization.BaseWriter,System.Object,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:C1.Web.Mvc.Serialization.BaseConverter"/> can read.
            </summary>
            <value><c>true</c> if this <see cref="T:C1.Web.Mvc.Serialization.BaseConverter"/> can read; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:C1.Web.Mvc.Serialization.BaseConverter"/> can write.
            </summary>
            <value><c>true</c> if this <see cref="T:C1.Web.Mvc.Serialization.BaseConverter"/> can write; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.Read(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:C1.JsonNet.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existedValue">The existing value of object being read.</param>
            <returns>The object value after deserializing.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:C1.JsonNet.JsonWriter"/> to write to.</param>
            <param name="value">The value to be serialized.</param>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.ConvertTo(System.Object)">
            <summary>
            Serialize the specified value to a string.
            </summary>
            <param name="value">the specified value</param>
            <returns>A string which the value would be serialized to.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:C1.JsonNet.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existedValue">The existing value of object being read.</param>
            <returns>The object value after deserializing.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.ConvertFrom(System.Object,System.Object)">
            <summary>
            Deserialize an object from the specified value.
            </summary>
            <param name="value">
            The specified value, which could be null or its type could be <see cref="T:System.Collections.ArrayList"/>,  <see cref="T:System.Collections.Hashtable"/>, <see cref="T:System.DateTime"/>,
            <see cref="T:System.String"/>, <see cref="T:System.Boolean"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Double"/>.
            </param>
            <param name="existedValue">The existed value.</param>
            <returns>An object deserialized from the specified value.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.Write(C1.Web.Mvc.Serialization.BaseWriter,System.Object,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:C1.JsonNet.JsonConverter.CanConvert(System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <param name="context">The context information.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.TemplateBindingsConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.TemplateBindingsConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:C1.JsonNet.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existedValue">The existing value of object being read.</param>
            <returns>The object value after deserializing.</returns>
        </member>
        <member name="M:C1.Web.Mvc.TemplateBindingsConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:C1.JsonNet.JsonWriter"/> to write to.</param>
            <param name="value">The value to be serialized.</param>
        </member>
        <member name="T:C1.Web.Mvc.AnimationMode">
            <summary>
            Specifies the animation mode whether chart should animate one point at a time, series by series, or all at once.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnimationMode.All">
            <summary>
            All points and series are animated at once.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnimationMode.Point">
            <summary>
            Animation is performed point by point.
            Multiple series are animated simultaneously at the same time.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnimationMode.Series">
            <summary>
            Animation is performed series by series.
            Entire series is animated at once, following the same animation as the "All" option,
            but just one series at a time. 
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Easing">
            <summary>
            Specifies the rate of change of a parameter over time.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.Linear">
            <summary>
            Simple linear tweening, no easing and no acceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.Swing">
            <summary>
            Easing equation for a swing easing.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInQuad">
            <summary>
            Easing equation for a quadratic easing in, accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutQuad">
            <summary>
            Easing equation for a quadratic easing out, decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutQuad">
            <summary>
            Easing equation for a quadratic easing in and out, acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInCubic">
            <summary>
            Easing equation for a cubic easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutCubic">
            <summary>
            Easing equation for a cubic easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutCubic">
            <summary>
            Easing equation for a cubic easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInQuart">
            <summary>
            Easing equation for a quartic easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutQuart">
            <summary>
            Easing equation for a quartic easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutQuart">
            <summary>
            Easing equation for a quartic easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInQuint">
            <summary>
            Easing equation for a quintic easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutQuint">
            <summary>
            Easing equation for a quintic easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutQuint">
            <summary>
            Easing equation for a quintic easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInSine">
            <summary>
            Easing equation for a sinusoidal easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutSine">
            <summary>
            Easing equation for a sinusoidal easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutSine">
            <summary>
            Easing equation for a sinusoidal easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInExpo">
            <summary>
            Easing equation for an exponential easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutExpo">
            <summary>
            Easing equation for an exponential easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutExpo">
            <summary>
            Easing equation for an exponential easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInCirc">
            <summary>
            Easing equation for a circular easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutCirc">
            <summary>
            Easing equation for a circular easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutCirc">
            <summary>
            Easing equation for a circular easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInBack">
            <summary>
            Easing equation for a back easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutBack">
            <summary>
            Easing equation for a back easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutBack">
            <summary>
            Easing equation for a back easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInBounce">
            <summary>
            Easing equation for a bounce easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutBounce">
            <summary>
            Easing equation for a bounce easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutBounce">
            <summary>
            Easing equation for a bounce easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInElastic">
            <summary>
            Easing equation for an elastic easing in - accelerating from zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseOutElastic">
            <summary>
            Easing equation for an elastic easing out - decelerating to zero velocity.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Easing.EaseInOutElastic">
            <summary>
            Easing equation for an elastic easing in and out - acceleration until halfway, then deceleration.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationAttachment">
            <summary>
            Specifies the attachment of the annotation.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.DataIndex">
            <summary>
            Coordinates of the annotation point are defined by the data series index and the data point index.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.DataCoordinate">
            <summary>
            Annotation point is specified in data coordinates.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.Relative">
            <summary>
            Annotation point is specified as a relative position inside the control where
            (0,0) is the top left corner and (1,1) is the bottom right corner.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationAttachment.Absolute">
            <summary>
            The annotation point is specified in control's pixel coordinates.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.AnnotationPosition">
            <summary>
            Specifies the position of the annotation.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Center">
            <summary>
            The annotation appears at the Center of the target point. 
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Top">
            <summary>
            The annotation appears at the Top of the target point. 
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Bottom">
            <summary>
            The annotation appears at the Bottom of the target point. 
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Left">
            <summary>
            The annotation appears at the Left of the target point. 
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.AnnotationPosition.Right">
            <summary>
            The annotation appears at the Right of the target point.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.InteractiveAxes">
            <summary>
            Specifies the interactive axes of the chart gestures.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.InteractiveAxes.X">
            <summary>
            Interactive Axis X.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.InteractiveAxes.Y">
            <summary>
            Interactive Axis Y.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.InteractiveAxes.XY">
            <summary>
            Interactive Both Axis X and Axis Y.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.MouseAction">
            <summary>
            Specifies the mouse action of the chart gestures.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.MouseAction.Zoom">
            <summary>
            Zoom chart by mouse.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.MouseAction.Pan">
            <summary>
            Pan chart by mouse.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Orientation">
            <summary>
            Specifies the orientation of the range selector.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Orientation.X">
            <summary>
            Horizontal, x-data range.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Orientation.Y">
            <summary>
            Vertical, y-data range.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.AxisOverlappingLabels">
            <summary>
            Specifies how to handle overlapped labels.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisOverlappingLabels.Auto">
            <summary>
            The overlapped labels are hidden.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisOverlappingLabels.Show">
            <summary>
            Show all labels, including overlapped.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.AxisTickMark">
            <summary>
            Specifies whether and where axis tick marks appear.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.None">
            <summary>
            No tick marks appear.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.Outside">
            <summary>
            Tick marks appear outside the plot area.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.Inside">
            <summary>
            Tick marks appear inside the plot area.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.AxisTickMark.Cross">
            <summary>
            Tick marks cross the axis.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LabelPosition">
            <summary>
            Specifies the position of data labels on the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.None">
            <summary>
            No data labels appear.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Left">
            <summary>
            The labels appear to the left of the data points.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Top">
            <summary>
            The labels appear above the data points.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Right">
            <summary>
            The labels appear to the right of the data points.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Bottom">
            <summary>
            The labels appear below the data points.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LabelPosition.Center">
            <summary>
            The labels appear centered on the data points.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.PieLabelPosition">
            <summary>
            Specifies the position of data labels on the pie chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.None">
            <summary>
            No data labels.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Inside">
            <summary>
            The label appears inside the pie slice.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Center">
            <summary>
            The item appears at the center of the pie slice.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.PieLabelPosition.Outside">
            <summary>
            The item appears outside the pie slice.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ChartType">
            <summary>
            Specifies which type of chart users want to create.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Column">
            <summary>
            Column charts show vertical bars and allow you to compare values of items across categories.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Bar">
            <summary>
            Bar charts show horizontal bars.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Scatter">
            <summary>
            Scatter charts use X and Y coordinates to show patterns within the data.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Line">
            <summary>
            Line charts show trends over a period of time or across categories.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.LineSymbols">
            <summary>
            Line and symbol charts are line charts with a symbol on each data point.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Area">
            <summary>
            Area charts are line charts with the area below the line filled with color.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Bubble">
            <summary>
            Bubble charts are Scatter charts with a 
            third data value that determines the size of the symbol.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Candlestick">
            <summary>
            Candlestick charts present items with high, low, open, and close values.
            The size of the wick line is determined by the High and Low values, while the size of the bar is
            determined by the Open and Close values. The bar is displayed using different colors, depending on 
            whether the close value is higher or lower than the open value.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.HighLowOpenClose">
            <summary>
            High-low-open-close charts display the same information as a candlestick chart, except that opening
            values are displayed using lines to the left, while lines to the right indicate closing values.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Spline">
            <summary>
            Spline charts are line charts that plot curves rather than angled lines through the data points.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.SplineSymbols">
            <summary>
            Spline and symbol charts are spline charts with symbols on each data point.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.SplineArea">
            <summary>
            Spline area charts are spline charts with the area below the line filled with color.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ChartType.Funnel">
            <summary>
            Displays funnel chart.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LineMarkerInteraction">
            <summary>
            Specifies how the LineMarker interacts with the user.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerInteraction.None">
            <summary>
            No interaction, the user specifies the position manually.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerInteraction.Move">
            <summary>
            The LineMarker moves with the pointer.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerInteraction.Drag">
            <summary>
            The LineMarker moves when the user drags the line.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LineMarkerLines">
            <summary>
            Specifies the line type for the LineMarker.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.None">
            <summary>
            Show no lines.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.Vertical">
            <summary>
            Show a vertical line.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.Horizontal">
            <summary>
            Show a horizontal line.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerLines.Both">
            <summary>
            Show both vertical and horizontal lines.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.LineMarkerAlignment">
            <summary>
            Specifies the alignment of the LineMarker.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Auto">
            <summary>
            The LineMarker alignment adjusts automatically so that it stays inside the 
            boundaries of the plot area.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Right">
            <summary>
            The LineMarker aligns to the right of the pointer.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Left">
            <summary>
            The LineMarker aligns to the left of the pointer.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Bottom">
            <summary>
            The LineMarker aligns to the bottom of the pointer.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.LineMarkerAlignment.Top">
            <summary>
            The LineMarker aligns to the top of the pointer.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ErrorAmount">
            <summary>
            Specifies the error amount of the series, it can be a standard error amount, a percentage or a standard deviation.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.FixedValue">
            <summary>
            Indicates the error with a fixed value.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.Percentage">
            <summary>
            Indicates the error with a percentage value.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.StandardDeviation">
            <summary>
            Indicates the error with the standard deviation.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.StandardError">
            <summary>
            Indicates the error with the standard error.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorAmount.Custom">
            <summary>
            Indicates the error with the custom value.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ErrorBarEndStyle">
            <summary>
            Specifies the end style of the error bar.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarEndStyle.Cap">
            <summary>
            Error bar with cap.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarEndStyle.NoCap">
            <summary>
            Error bar without cap.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.ErrorBarDirection">
            <summary>
            Specifies the direction of the error bar.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarDirection.Both">
            <summary>
            Shows both direction.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarDirection.Minus">
            <summary>
            Only shows minus direction.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.ErrorBarDirection.Plus">
            <summary>
            Only shows plus direction.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FunnelType">
            <summary>
            Specifies the type of Funnel chart. It should be 'Rectangle' or 'Default'. NeckWidth and NeckHeight don't work if type is set to Rectangle.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FunnelType.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FunnelType.Rectangle">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Marker">
            <summary>
            Specifies the type of marker to use for the @see:symbolMarker property.
            Applies to Scatter, LineSymbols, and SplineSymbols chart types.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Marker.Dot">
            <summary>
            Uses a circle to mark each data point.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Marker.Box">
            <summary>
            Uses a square to mark each data point.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.MovingAverageType">
            <summary>
            Specifies whether and where the Series is visible.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Simple">
            <summary>
            The simple moving average is simply the average of the last n values.
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Weighted">
            <summary>
            The weighted moving average is a weighted average of the last n values, where the weighting decreases by 1 with each previous value.
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Exponential">
            <summary>
            The exponential moving average is a weighted average of the last n values, where the weighting decreases exponentially with each previous value.
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.MovingAverageType.Triangular">
            <summary>
            The triangular moving average is a weighted average of the last n values, whose result is equivalent to a double smoothed simple moving average. 
            </summary> 
        </member>
        <member name="T:C1.Web.Mvc.Chart.Palettes">
            <summary>
            A series of pre-defined palettes for chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Standard">
            <summary>
            The standard(default) palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Cocoa">
            <summary>
            Cocoa palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Coral">
            <summary>
            Coral palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Dark">
            <summary>
            Dark palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Highcontrast">
            <summary>
            Highcontrast palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Light">
            <summary>
            Light palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Midnight">
            <summary>
            Midnight palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Minimal">
            <summary>
            Minimal palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Modern">
            <summary>
            Modern palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Organic">
            <summary>
            Organic palette.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Palettes.Slate">
            <summary>
            Slate palette.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Controls.Chart.PlotMarginConverter">
            <summary>
            Defines the PlotMarginConverter class used to serialize the different type value.(number, string)
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Controls.Chart.PlotMarginConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:C1.JsonNet.JsonWriter"/> to write to.</param>
            <param name="value">The value to be serialized.</param>
        </member>
        <member name="M:C1.Web.Mvc.Controls.Chart.PlotMarginConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:C1.JsonNet.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existedValue">The existing value of object being read.</param>
            <returns>The object value after deserializing.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Position">
            <summary>
            Specifies the position of an axis or legend on the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.None">
            <summary>
            The item is not visible.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Left">
            <summary>
            The item appears to the left of the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Top">
            <summary>
            The item appears above the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Right">
            <summary>
            The item appears to the right of the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Bottom">
            <summary>
            The item appears below the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Position.Auto">
            <summary>
            The item is positioned automatically.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.RadarChartType">
            <summary>
            Specifies the type of radar chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Column">
            <summary>
            Shows vertical bars and allows you to compare values of items across categories.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Scatter">
            <summary>
            Shows patterns within the data using X and Y coordinates.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Line">
            <summary>
            Shows trends over a period of time or across categories.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.LineSymbols">
            <summary>
            Shows line chart with a symbol on each data point.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.RadarChartType.Area">
            <summary>
            Shows line chart with the area below the line filled with color.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.SelectionMode">
            <summary>
            Specifies what is selected when the user clicks the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SelectionMode.None">
            <summary>
            Select neither series nor data points when the user clicks the chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SelectionMode.Series">
            <summary>
            Select the whole Series when the user clicks it on the chart.​
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SelectionMode.Point">
            <summary>
            Select the data point when the user clicks it on the chart. Since Line, Area, Spline, and SplineArea charts do not render individual data points, nothing is selected with this setting on those chart types.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.SeriesVisibility">
            <summary>
            Specifies whether and where the Series is visible.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Visible">
            <summary>
            The series is visible on the plot and in the legend.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Plot">
            <summary>
            The series is visible only on the plot.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Legend">
            <summary>
            The series is visible only in the legend.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.SeriesVisibility.Hidden">
            <summary>
            The series is hidden.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.Stacking">
            <summary>
            Specifies whether and how to stack the chart's data values.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Stacking.None">
            <summary>
            No stacking. Each series object is plotted independently.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Stacking.Stacked">
            <summary>
            Stacked charts show how each value contributes to the total.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.Stacking.Stacked100pc">
            <summary>
            100% stacked charts show how each value contributes to the total with the relative size of 
            each series representing its contribution to the total.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.TrendLineFitType">
            <summary>
            Specifies whether and where the Series is visible.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Linear">
            <summary>
            A straight line that most closely approximates the data.  Y(x) = a * x + b.
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Exponential">
            <summary>
            Regression fit to the equation Y(x) = a * exp(b*x).
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Logarithmic">
            <summary>
            Regression fit to the equation Y(x) = a * ln(x) + b.
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Power">
            <summary>
            Regression fit to the equation Y(x) = a * pow(x, b).
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Fourier">
            <summary>
            Regression fit to the equation Y(x) = a + b * cos(x) + c * sin(x) + d * cos(2*x) + e * sin(2*x) + ...
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.Polynomial">
            <summary>
            Regression fit to the equation Y(x) = a * x^n + b * x^n-1 + c * x^n-2 + ... + z.
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MinX">
            <summary>
            The minimum X-value. 
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MinY">
            <summary>
            The minimum Y-value. 
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MaxX">
            <summary>
            The maximum X-value. 
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.MaxY">
            <summary>
            The maximum Y-value. 
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.AverageX">
            <summary>
            The average X-value. 
            </summary> 
        </member>
        <member name="F:C1.Web.Mvc.Chart.TrendLineFitType.AverageY">
            <summary>
            The average Y-value.
            </summary> 
        </member>
        <member name="T:C1.Web.Mvc.Serialization.PascalCaseJsonConverter">
            <summary>
            The json converter with Pasal Case rule.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.PascalCaseJsonConverter.CanConvert(System.Type)">
            <summary>
            Gets whether the specified type can be converted.
            </summary>
            <param name="objectType">The object type</param>
            <returns>The bool value indicates whether the specified type can be converted</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.PascalCaseJsonConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Read the object from json.
            </summary>
            <param name="reader">The json reader</param>
            <param name="objectType">The object type</param>
            <param name="existingValue">The existing value</param>
            <returns>The object which is read from json</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.PascalCaseJsonConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Write the object to json format.
            </summary>
            <param name="writer">The json writer</param>
            <param name="value">The object</param>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.Skip">
            <summary>
            Gets or sets the skipped items' count.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ICollectionView`1.Top">
            <summary>
            Gets or sets the items' count required.
            </summary>
            <remarks>
            Normally it is always a number equals or greater than 0. 
            When it is set to null, it means all the items are required.
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.Grid.Operator">
            <summary>
            Specifies filter condition operators.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.EQ">
            <summary>
            Equals
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.NE">
            <summary>
            Not equals.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.GT">
            <summary>
            Greater than.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.GE">
            <summary>
            Greater than or equal to.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.LT">
            <summary>
            Less than.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.LE">
            <summary>
            Less than or equal to.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.BW">
            <summary>
            Begins with.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.EW">
            <summary>
            Ends with.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.CT">
            <summary>
            Contains.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Operator.NC">
            <summary>
            Does not contain.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.FilterType">
            <summary>
            Specifies types of column filter.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.None">
            <summary>
            No filter.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.Condition">
            <summary>
            A filter based on two conditions.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.Value">
            <summary>
            A filter based on a set of values.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.FilterType.Both">
            <summary>
            A filter that combines condition and value filters.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.GridFilter.FlexGridFilterHelper.ExecuteWithRequest``1(C1.Web.Mvc.ICollectionView{``0},System.Collections.Hashtable)">
            <summary>
            Use FlexGridFilter to process the request data.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionView"></param>
            <param name="extraRequestData"></param>
        </member>
        <member name="M:C1.Web.Mvc.GridFilter.FlexGridFilterHelper.ExecuteWithFilters``1(C1.Web.Mvc.ICollectionView{``0},System.Collections.Generic.IList{C1.Web.Mvc.ColumnFilter})">
            <summary>
            Use FlexGridFilter with the specified filters. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionView"></param>
            <param name="filters"></param>
        </member>
        <member name="T:C1.Web.Mvc.Grid.CellRange">
            <summary>
            Represents a rectangular group of cells defined by two row indices and two column indices.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Grid.CellRange"/> instance.
            </summary>
            <param name="r">Index of the first row in this range.</param>
            <param name="c">Index of the first column in this range.</param>
            <param name="r2">Index of the last row in this range.</param>
            <param name="c2">Index of the first column in this range.</param>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Grid.CellRange"/> instance.
            </summary>
            <param name="r">Index of the first row in this range.</param>
            <param name="c">Index of the first column in this range.</param>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.IsValid">
            <summary>
            Checks whether this range contains valid row and column indices (> -1).
            </summary>
            <returns>True if it is valid. Otherwise, false.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:C1.Web.Mvc.Grid.CellRange"/>.
            </summary>
            <param name="obj">The object to compare with the current <see cref="T:C1.Web.Mvc.Grid.CellRange"/>.</param>
            <returns>Determines whether the specified object is equal to the current <see cref="T:C1.Web.Mvc.Grid.CellRange"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.GetHashCode">
            <summary>
            Serves as a hash function for <see cref="T:C1.Web.Mvc.Grid.CellRange"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:C1.Web.Mvc.Grid.CellRange"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Grid.CellRange.Clone">
            <summary>
            Clones a copy of current <see cref="T:C1.Web.Mvc.Grid.CellRange"/>.
            </summary>
            <returns>The new <see cref="T:C1.Web.Mvc.Grid.CellRange"/> which is copied from current <see cref="T:C1.Web.Mvc.Grid.CellRange"/>.</returns>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Row">
            <summary>
            Gets or sets the index of the first row in this range.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Col">
            <summary>
            Gets or sets the index of the first column in this range.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Row2">
            <summary>
            Gets or sets the index of the second row in this range.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Grid.CellRange.Col2">
            <summary>
            Gets or sets the index of the second column in this range.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ColumnWidthConverter">
            <summary>
            Defines the ColumnWidthConverter class used to serialize the different type value.(number, string)
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ColumnInfo">
            <summary>
            Represents a column info that describes a column on the grid.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ColumnInfo.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:C1.Web.Mvc.ColumnInfo"/> object.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.Index">
            <summary>
            Gets or sets the index of the column in the grid's columns collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.Binding">
            <summary>
            Gets or sets the name of the property this column is bound to.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.ColumnInfo.DataMap">
            <summary>
            Gets the data map info used to convert raw values into display values for the column.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DataMapInfo">
            <summary>
            Represents a data map info for use with the ColumnInfo's DataMap property.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.DataMapInfo.GetDisplayValue(System.Object)">
            <summary>
            Gets the display value that corresponds to a given value.
            </summary>
            <param name="value">The value of the item to retrieve.</param>
            <returns>The display value that corresponds the give value.</returns>
            <remarks>
            The string-based comparison of value has the same logic as Wijmo 5. 
            </remarks>
        </member>
        <member name="P:C1.Web.Mvc.DataMapInfo.SelectedValuePath">
            <summary>
            Gets or sets the name of the property to use as a key for the item (data value).
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMapInfo.DisplayMemberPath">
            <summary>
            Gets or sets the name of the property to use as the visual representation of the item.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.DataMapInfo.ItemsSource">
            <summary>
            For internal used. Gets or sets the items source.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.Aggregate">
            <summary>
            Specifies the type of aggregate to calculate over a group of values.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.None">
            <summary>
            No aggregate.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Sum">
            <summary>
            Returns the sum of the numeric values in the group.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Cnt">
            <summary>
            Returns the count of non-null values in the group.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Avg">
            <summary>
            Returns the average value of the numeric values in the group.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Max">
            <summary>
            Returns the maximum value in the group.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Min">
            <summary>
            Returns the minimum value in the group.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Rng">
            <summary>
            Returns the difference between the maximum and minimum numeric values in the group.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Std">
            <summary>
            Returns the sample standard deviation of the numeric values in the group (uses the formula based on n-1).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Var">
            <summary>
            Returns the sample variance of the numeric values in the group (uses the formula based on n-1).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.StdPop">
            <summary>
            Returns the population standard deviation of the values in the group (uses the formula based on n).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.VarPop">
            <summary>
            Returns the population variance of the values in the group (uses the formula based on n).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.CntAll">
            <summary>
            Returns the count of all values in the group (including nulls).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.First">
            <summary>
            Returns the first non-null value in the group.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.Aggregate.Last">
            <summary>
            Returns the last non-null value in the group.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AllowDragging">
            <summary>
            Specifies constants that define the row/column dragging behavior.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.None">
            <summary>
            The user may not drag rows or columns.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.Columns">
            <summary>
            The user may drag columns.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.Rows">
            <summary>
            The user may drag rows.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowDragging.Both">
            <summary>
            The user may drag rows and columns.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AllowMerging">
            <summary>
            Specifies constants that define which areas of the grid support cell merging.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.None">
            <summary>
            No merging.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.Cells">
            <summary>
            Merge scrollable cells.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.ColumnHeaders">
            <summary>
            Merge column headers.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.RowHeaders">
            <summary>
            Merge row headers.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.AllHeaders">
            <summary>
            Merge column and row headers.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowMerging.All">
            <summary>
            Merge all areas.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AllowResizing">
            <summary>
            Specifies constants that define the row/column sizing behavior.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.None">
            <summary>
            The user may not resize rows or columns.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.Columns">
            <summary>
            The user may resize columns.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.Rows">
            <summary>
            The user may resize rows.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.Both">
            <summary>
            The user may resize rows and columns.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.ColumnsAllCells">
            <summary>
            The user may resize columns by dragging the edge of any cell.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.RowsAllCells">
            <summary>
            The user may resize rows by dragging the edge of any cell.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AllowResizing.BothAllCells">
            <summary>
            The user may resize rows and columns by dragging the edge of any cell.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.AutoSizeMode">
            <summary>
            Specifies constants that define the row/column auto-sizing behavior.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.None">
            <summary>
            Autosizing is disabled.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.Headers">
            <summary>
            Autosizing accounts for header cells.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.Cells">
            <summary>
            Autosizing accounts for data cells.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.AutoSizeMode.Both">
            <summary>
            Autosizing accounts for header and data cells.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.DataType">
            <summary>
            Enumeration with value types.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Object">
            <summary>
            Object (anything).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Number">
            <summary>
            Number.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Date">
            <summary>
            Date (date and time).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DataType.Array">
            <summary>
            Array.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.HeadersVisibility">
            <summary>
            Specifies constants that specify the visibility of row and column headers.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.None">
            <summary>
            No header cells are displayed.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.Column">
            <summary>
            Only column header cells are displayed.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.Row">
            <summary>
            Only row header cells are displayed.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.HeadersVisibility.All">
            <summary>
            Both column and row header cells are displayed.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.SelectionMode">
            <summary>
            Gets or sets the current selection mode.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.None">
            <summary>
            The user cannot select cells with the mouse or keyboard.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.Cell">
            <summary>
            The user can select only a single cell at a time.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.CellRange">
            <summary>
            The user can select contiguous blocks of cells.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.Row">
            <summary>
            The user can select a single row at a time.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.RowRange">
            <summary>
            The user can select contiguous rows.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.SelectionMode.ListBox">
            <summary>
            The user can select non-contiguous rows.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.DetailVisibilityMode">
            <summary>
            Specifies when and how the row details are displayed.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.Code">
            <summary>
            Details are shown or hidden in code, using the showDetail and hideDetail methods.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.Selection">
            <summary>
            Details are shown for the row that is currently selected.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.ExpandSingle">
            <summary>
            Details are shown or hidden using buttons added to the row headers. Only one row may be expanded at a time.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.DetailVisibilityMode.ExpandMulti">
            <summary>
            Details are shown or hidden using buttons added to the row headers. Multiple rows may be expanded at a time.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Grid.KeyAction">
            <summary>
            Specifies constants that define the action to perform when special keys such as ENTER and TAB are pressed.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.None">
            <summary>
            No special action (let the browser handle the key).
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.MoveDown">
            <summary>
            Move the selection to the next row.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.MoveAcross">
            <summary>
            Move the selection to the next column.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.Cycle">
            <summary>
            Move the selection to the next column, then wrap to the next row.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Grid.KeyAction.CycleOut">
            <summary>
            Move the selection to the next column, then wrap to the next row, then out of the control.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Grid.SortHelper.ExecuteWithRequest``1(C1.Web.Mvc.CollectionViewRequest{``0},System.Func{C1.Web.Mvc.ColumnInfo,System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>
            Process the extra sort settings in reqquest data.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.DateSelectionMode">
            <summary>
            Specifies constants that define the date selection behavior.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.DateSelectionMode.None">
            <summary>
            The user cannot change the current value using the mouse or keyboard.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.DateSelectionMode.Day">
            <summary>
            The user can select days.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.DateSelectionMode.Month">
            <summary>
            The user can select months.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.GaugeDirection">
            <summary>
            Represents the direction in which the pointer of a LinearGauge increases.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Right">
            <summary>
            Gauge value increases from left to right.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Left">
            <summary>
            Gauge value increases from right to left.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Up">
            <summary>
            Gauge value increases from bottom to top.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.GaugeDirection.Down">
            <summary>
            Gauge value increases from top to bottom.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ShowText">
            <summary>
            Specifies which values should be displayed as text.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.None">
            <summary>
            Do not show any text in the gauge.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.Value">
            <summary>
            Show the gauge's value as text.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.MinMax">
            <summary>
            Show the gauge's min and max values as text.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.ShowText.All">
            <summary>
            Show the gauge's value, min, and max as text.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Menu">
            <summary>
            The Menu control shows a text element with a drop-down list of commands that the user can invoke by click or touch.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Menu.#ctor(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Creates one <see cref="T:C1.Web.Mvc.Menu"/> instance.
            </summary>
            <param name="helper">The html helper</param>
            <param name="selector">The selector</param>
        </member>
        <member name="P:C1.Web.Mvc.Menu.IsContentHtml">
            <summary>
            Gets or sets a value indicating whether the drop-down list displays items as plain text or as HTML.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Menu.IsRequired">
            <summary>
            Gets or sets a value that determines whether the control value must be set to a non-null value or whether it can be set to null (by deleting the content of the control).
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.PopupTrigger">
            <summary>
            Specifies actions that trigger showing and hiding Popup controls.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.None">
            <summary>
            No triggers; popups must be shown and hidden using code.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.Click">
            <summary>
            Show or hide when the owner element is clicked.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.Blur">
            <summary>
            Hide the popup when it loses focus.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.PopupTrigger.ClickOrBlur">
            <summary>
            Show or hide the popup when the owner element is clicked, hide when it loses focus.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Chart.QuartileCalculation">
            <summary>
            Specifies the quartile calculation method of Box and Whisker chart.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QuartileCalculation.InclusiveMedian">
            <summary>
            Include median value when calculate quartile.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Chart.QuartileCalculation.ExclusiveMedian">
            <summary>
            Exclude median value when calculate quartile.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1JsonResult">
            <summary>
            C1 json result.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.ModelBinderBase">
            <summary>
            Defines a base class of model binder for customizing.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.ModelBinderBase.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Attempts to bind a model.
            </summary>
            <param name="controllerContext">The controller context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>The model.</returns>
        </member>
        <member name="M:C1.Web.Mvc.ModelBinderBase.GetRequestContent(System.Web.HttpRequestBase)">
            <summary>
            Gets the request content which is used for deserializing.
            </summary>
            <param name="request">The http request.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:C1.Web.Mvc.ModelBinderBase.DeserializeModel(System.String,System.Type)">
            <summary>
            Deserializes the model.
            </summary>
            <param name="text">The string used to deserialize.</param>
            <param name="modelType">The type of the model.</param>
            <returns>The model.</returns>
        </member>
        <member name="T:C1.Web.Mvc.C1JsonRequestModelBinder">
            <summary>
            Custom model binder for C1 json request data.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.C1JsonRequestModelBinder.DeserializeModel(System.String,System.Type)">
            <summary>
            Deserializes the model.
            </summary>
            <param name="text">The string used to deserialize.</param>
            <param name="modelType">The type of the model.</param>
            <returns>The model.</returns>
        </member>
        <member name="T:C1.Web.Mvc.C1JsonRequestAttribute">
            <summary>
            Custom model binder attribute for C1 json request data.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.C1JsonRequestAttribute.GetBinder">
            <summary>
            Gets the model binder.
            </summary>
            <returns>The model binder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.ServiceConverter">
            <summary>
            Define the service converter.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor">
            <summary>
            Create an instance of ServiceConverter
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor(System.Boolean)">
            <summary>
            Create an instance of ServiceConverter
            </summary>
            <param name="serviceExisted">Specify the service instance has been created.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor(System.Boolean,System.String)">
            <summary>
            Create an instance of ServiceConverter
            </summary>
            <param name="serviceExisted">Specify the service instance has been created.</param>
            <param name="serviceCtor">Specify the service constructor in client side.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Create an instance of ServiceConverter
            </summary>
            <param name="serviceExisted">Specify the service instance has been created.</param>
            <param name="serviceCtor">Specify the service constructor in client side.</param>
            <param name="serviceOpts">Specify the service options.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:C1.JsonNet.JsonWriter"/> to write to.</param>
            <param name="value">The value to be serialized.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.ServiceConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:C1.JsonNet.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existedValue">The existing value of object being read.</param>
            <returns>The object value after deserializing.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serializition.JsonConvertHelper">
            <summary>
            The json convert helper.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serializition.JsonConvertHelper.C1Json(System.Web.Mvc.Controller,System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Serialize data to json for C1 data.
            </summary>
            <param name="controller">The controller</param>
            <param name="data">The data</param>
            <param name="contentType">The content type</param>
            <param name="contentEncoding">The content encoding</param>
            <param name="behavior">The json request behavior</param>
            <returns>The json result</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.JsonConvertHelper">
            <summary>
            The json convert helper.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JsonConvertHelper.C1Json(System.Web.Mvc.Controller,System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior,System.Boolean)">
            <summary>
            Serialize data to json for C1 data.
            </summary>
            <param name="controller">The controller</param>
            <param name="data">The data</param>
            <param name="contentType">The content type</param>
            <param name="contentEncoding">The content encoding</param>
            <param name="behavior">The json request behavior</param>
            <param name="useCamelCasePropertyName">A <see cref="T:System.Boolean"/> value decides whether to use camel case to serialize the data.</param>
            <returns>The json result</returns>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewHelper">
            <summary>
            Supports the read and write processing of the request from the client-side CollectionView.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.Read``1(C1.Web.Mvc.CollectionViewRequest{``0},System.Collections.Generic.IEnumerable{``0},System.Func{C1.Web.Mvc.ColumnInfo,System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>
            Reads data from the request and the source collection.
            </summary>
            <typeparam name="T">The type of data record</typeparam>
            <param name="requestData">The request data</param>
            <param name="sourceCollection">The source collection</param>
            <param name="dataMapItemsSourceGetter">The function to get the items source for the specified column's data map.</param>
            <returns>The response data</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.ProcessExtraRequestData``1(C1.Web.Mvc.ICollectionView{``0},C1.Web.Mvc.CollectionViewRequest{``0},System.Func{C1.Web.Mvc.ColumnInfo,System.Collections.Generic.IEnumerable{System.Object}})">
            <summary>
            Processes the extra request data by the extender helpers.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.Edit``1(C1.Web.Mvc.CollectionViewEditRequest{``0},System.Func{``0,C1.Web.Mvc.CollectionViewItemResult{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Edits data accroding to the request and the write action.
            </summary>
            <typeparam name="T">The type of data record</typeparam>
            <param name="requestData">The request data</param>
            <param name="editAction">The edit action</param>
            <param name="read">The read action provides the newest data.</param>
            <returns>The response data</returns>
        </member>
        <member name="M:C1.Web.Mvc.CollectionViewHelper.BatchEdit``1(C1.Web.Mvc.CollectionViewBatchEditRequest{``0},System.Func{C1.Web.Mvc.BatchOperatingData{``0},C1.Web.Mvc.CollectionViewResponse{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Edits batch data accroding to the request and the edit action.
            </summary>
            <typeparam name="T">The type of data record</typeparam>
            <param name="requestData">The request data</param>
            <param name="editAction">The edit action</param>
            <param name="read">The read action provides the newest data.</param>
            <returns>The response data</returns>
        </member>
        <member name="T:C1.Web.Mvc.ReadOnlyCollectionView`1">
            <summary>
            The CollectionView which cannot be edited.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:C1.Web.Mvc.CollectionViewProcessor`1">
            <summary>
            The class for processing the request data of CollectionView
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:C1.Web.Mvc.CustomEditableCollectionView`1">
            <summary>
            A customizing editable collection view.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:C1.Web.Mvc.CollectionView.CommandType">
            <summary>
            The command type of CollectionView's request.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Read">
            <summary>
            The type of reading data.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Create">
            <summary>
            The type of creating data.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Update">
            <summary>
            The type of updating data.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.Delete">
            <summary>
            The type of deleting data.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.CollectionView.CommandType.BatchEdit">
            <summary>
            The type of batch modifying data.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.CallbackManager">
            <summary>
            Callback manager.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.GetDeserializedData``1">
            <summary>
            Get the deserialized data.
            </summary>
            <typeparam name="T">The type of the data</typeparam>
            <returns>The data</returns>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.WriteJson(System.Object)">
            <summary>
            Write data as json to the response.
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.WriteContent(System.String,System.String)">
            <summary>
            Write the content to the response.
            </summary>
            <param name="content">The content</param>
            <param name="contentType">The content type</param>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.GetCurrentCallbackData``1">
            <summary>
            Get the deserialized data from the request.
            </summary>
            <returns>The deserialized data</returns>
        </member>
        <member name="M:C1.Web.Mvc.CallbackManager.GetRequestTextData">
            <summary>
            Get the text data from the request.
            </summary>
            <returns>The text data</returns>
        </member>
        <member name="P:C1.Web.Mvc.CallbackManager.CurrentIsCallback">
            <summary>
            Gets if current request is callback.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.TemplateConverter">
            <summary>
            Defines the template converter.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResources.ScriptsAttribute">
            <summary>
            Determines script dependencies.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResources.ResDependenciesAttribute">
            <summary>
            Determines web resources dependencies.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResources.ResDependenciesAttribute.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.Mvc.WebResources.ResDependenciesAttribute"/> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:C1.Web.Mvc.WebResources.ResDependenciesAttribute.Dependencies">
            <summary>
            A collection of dependencies.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResources.ScriptsAttribute.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.Mvc.WebResources.ScriptsAttribute"/> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:C1.Web.Mvc.WebResources.ScriptsAttribute.Dependencies">
            <summary>
            A collection of script dependencies.
            </summary>
            <remarks>
              Example:
              [Scripts("jquery.wijmo.wijcalendar"]
              [Scripts(typeof(CalendarExtender))]
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.WebResources.StylesAttribute">
            <summary>
            Determines style sheet dependencies.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResources.StylesAttribute.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.Mvc.WebResources.StylesAttribute"/> class.
            </summary>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="P:C1.Web.Mvc.WebResources.StylesAttribute.Dependencies">
            <summary>
            A collection of style sheet dependencies.
            </summary>
            <remarks>
              Example:
              [Styles("jquery.wijmo.wijcalendar"]
              [Styles(typeof(CalendarExtender))]
            </remarks>
        </member>
        <member name="T:C1.Web.Mvc.C1CollectionView">
            <summary>
            Defines C1 CollectionViewService related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Input">
            <summary>
            Defines C1 Input Controls related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Gauge">
            <summary>
            Defines C1 Service related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Chart">
            <summary>
            Defines C1 Chart related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1LineMarker">
            <summary>
            Defines C1 LineMarker related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1AnnotationLayer">
            <summary>
            Defines C1 AnnotationLayer related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1RangeSelector">
            <summary>
            Defines C1 RangeSelector related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1ChartAnimation">
            <summary>
            Defines C1 ChartAnimation related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1ChartInteraction">
            <summary>
            Defines C1 ChartInteractions related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1Grid">
            <summary>
            Defines C1 Grid related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1GridFilter">
            <summary>
            Defines C1 FlexGridFilter related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1GridGroupPanel">
            <summary>
            Defines C1 FlexGridGroupPanel related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1GridDetailProvider">
            <summary>
            Defines C1 FlexGridDetailProvider related js and css.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Scripts">
            <summary>
            Represents the C1 Scripts control which is used for registering scripts.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Scripts.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Create an instance of <see cref="T:C1.Web.Mvc.Scripts"/> with an html helper.
            </summary>
            <param name="helper">The html helper.</param>
        </member>
        <member name="M:C1.Web.Mvc.Scripts.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the control or the callback result to the writer.
            </summary>
            <param name="writer">The specified writer used to render.</param>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.Culture">
            <summary>
            Gets or sets the culture which is used for scripts localization.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.OwnerTypes">
            <summary>
            Gets the types which need to be registered the dependent scripts.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.InAssembly">
            <summary>
            Gets or sets the Assembly which the Scripts control only registers the scripts in the specified assembly.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Scripts.HasScripts">
            <summary>
            Gets a boolean value indicates whether current component has the scripts which need to be rendered.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Styles.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the control or the callback result to the writer.
            </summary>
            <param name="writer">The specified writer used to render.</param>
        </member>
        <member name="P:C1.Web.Mvc.Styles.HasScripts">
            <summary>
            Gets a boolean value indicates whether current component has the scripts which need to be rendered.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Themes">
            <summary>
            Defines the names of supported themes.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Default">
            <summary>
            Default theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Cerulean">
            <summary>
            Cerulean theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.CleanDark">
            <summary>
            Clean dark theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.CleanLight">
            <summary>
            Clean light theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Cocoa">
            <summary>
            Cocoa theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Coral">
            <summary>
            Coral theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Cyborg">
            <summary>
            Cyborg theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Dark">
            <summary>
            Dark theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Darkly">
            <summary>
            Darkly theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Flatly">
            <summary>
            Flatly theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.GrayScale">
            <summary>
            Gray scale theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.HighContrast">
            <summary>
            High contrast theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Light">
            <summary>
            Light theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Material">
            <summary>
            Material theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Midnight">
            <summary>
            Midnight theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Minimal">
            <summary>
            Minimal theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Modern">
            <summary>
            Modern theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Office">
            <summary>
            Office theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Organic">
            <summary>
            Organic theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Simplex">
            <summary>
            Simplex theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Slate">
            <summary>
            Slate theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.SuperHero">
            <summary>
            Super hero theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Trust">
            <summary>
            Trust theme.
            </summary>
        </member>
        <member name="F:C1.Web.Mvc.Themes.Zen">
            <summary>
            Zen theme.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResourcesManager">
            <summary>
            Defines a class to manage and register the resources.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.WebResourcesManagerBase">
            <summary>
            Defines the base class to manage and register the resources.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManagerBase.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Initializes a new instance of the WebResourcesManagerBase class.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManagerBase.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render the control to the writer.
            </summary>
            <param name="writer">The specified writer used to render.</param>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManagerBase.CreateChildComponents">
            <summary>
            Creates the child components.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WebResourcesManagerBase.ControlTypes">
            <summary>
            Gets the type collection of the controls which resources will be registered.
            </summary>
            <remarks>
            When there is no item in the collection, all the resources will be registered.
            </remarks>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManager.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Create an instance of <see cref="T:C1.Web.Mvc.WebResourcesManager"/>.
            </summary>
            <param name="helper">The html helper.</param>
        </member>
        <member name="M:C1.Web.Mvc.WebResourcesManager.CreateChildComponents">
            <summary>
            Creates the child components.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.WebResourcesManager.Theme">
            <summary>
            Gets or sets the theme name to be used.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartAnimationExtension">
            <summary>
            Define a static class to add the extension methods 
            for all the controls which can use ChartAnimation extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartAnimationExtension.ShowAnimation``3(C1.Web.Mvc.Fluent.FlexChartBaseBuilder{``0,``1,``2},System.Action{C1.Web.Mvc.Fluent.ChartAnimationBuilder{``0}})">
            <summary>
            Apply the ChartAnimation extender in the chart.
            </summary>
            <typeparam name="T">The type of data.</typeparam>
            <typeparam name="TControl">The type of the chart control which inherits from FlexChartBase.</typeparam>
            <typeparam name="TChartBuilder">The type of the chart builder which inherits from FlexChartBaseBuilder.</typeparam>
            <param name="chartBuilder">The specified chart builder.</param>
            <param name="animationBuilder">The action to set the ChartAnimation.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.AnnotationLayerExtension">
            <summary>
            Define a static class to add the extension methods 
            for all the controls which can use AnnotationLayer extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.AnnotationLayerExtension.AddAnnotationLayer``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0},System.Action{C1.Web.Mvc.Fluent.AnnotationLayerBuilder{``0}})">
            <summary>
            Apply the AnnotationLayer extender in FlexChart.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="flexChartBuilder">the specified flexchart builder.</param>
            <param name="annotationLayerBuilder">the specified annotationlayer builder</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartGesturesExtension">
            <summary>
            Define a static class to add the extension methods 
            for all the controls which can use ChartGestures extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartGesturesExtension.SupportGestures``3(C1.Web.Mvc.Fluent.FlexChartCoreBuilder{``0,``1,``2},System.Action{C1.Web.Mvc.Fluent.ChartGesturesBuilder{``0}})">
            <summary>
            Apply the ChartGestures extender in the chart which inherits from FlexChartCore.
            </summary>
            <typeparam name="T">The type of data.</typeparam>
            <typeparam name="TControl">The type of the chart.</typeparam>
            <typeparam name="TBuilder">The builder type for the chart.</typeparam>
            <param name="chartBuilder">The builder for the chart.</param>
            <param name="chartGestureBuilder">The builder for the ChartGestures object.</param>
            <returns>Current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.RangeSelectorExtension">
            <summary>
            Defines the extensions for the RangeSelector extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorExtension.AddRangeSelector``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0},System.Action{C1.Web.Mvc.Fluent.RangeSelectorBuilder{``0}})">
            <summary>
            Apply the RangeSelector extender in FlexChart.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="flexChartBuilder">the specified flexchart builder.</param>
            <param name="rangeSelectorBuilder">the specified rangeselector builder</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.RangeSelectorExtension.AddRangeSelector``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0})">
            <summary>
            Apply a default RangeSelector extender in FlexChart.
            </summary>
            <param name="flexChartBuilder">the specified flexchart builder.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.LineMarkerExtension">
            <summary>
            Define a static class to add the extension methods 
            for all the controls which can use FlexGridFilter extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerExtension.AddLineMarker``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0},System.Action{C1.Web.Mvc.Fluent.LineMarkerBuilder{``0}})">
            <summary>
            Apply the LineMarker extender in FlexChart.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="flexChartBuilder">the specified flexchart builder.</param>
            <param name="lineMarkerBuilder">the specified linemarker builder</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.LineMarkerExtension.AddLineMarker``1(C1.Web.Mvc.Fluent.FlexChartBuilder{``0})">
            <summary>
            Apply a default LineMarker extender in FlexChart.
            </summary>
            <param name="flexChartBuilder">the specified flexchart builder.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.PlotAreaListFactory`4">
            <summary>
            Defines a factory to create PlotArea.
            </summary>
            <typeparam name="T">Model Type</typeparam>
            <typeparam name="TOwner">Chart derived from FlexChartCore</typeparam>
            <typeparam name="PlotArea">PlotArea</typeparam>
            <typeparam name="PlotAreaBuilder">PlotAreaBuilder</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaListFactory`4.#ctor(System.Collections.Generic.IList{`2},`1)">
            <summary>
            Initializes a new instance of the PlotAreaListFactory class.
            </summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.PlotAreaListFactory`4.Add">
            <summary>
            Add a default plotArea to the plotarea list.
            </summary>
            <returns>The plotarea builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5">
            <summary>
            Defines a factory to create different series.
            </summary>
            <typeparam name="T">Model Type</typeparam>
            <typeparam name="TOwner">Chart derived from FlexChartCore</typeparam>
            <typeparam name="TSeries">ChartSeries derived from ChartSeriesBase</typeparam>
            <typeparam name="TSeriesBuilder">ChartSeriesBuilder</typeparam>
            <typeparam name="TChartType">ChartType</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ChartSeriesBase{`0}},`1)">
            <summary>
            Initializes a new instance of the SeriesListBaseFactory class.
            </summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add``2(System.Func{`1,``0},System.Func{``0,``1})">
            <summary>
            Add a series.
            </summary>
            <typeparam name="TControl">Specifies the series type.</typeparam>
            <typeparam name="TBuilder">The series builder type.</typeparam>
            <param name="createControl">The function to create a series for the specified owner.</param>
            <param name="createBuilder">The builder for the series.</param>
            <returns>The series builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add">
            <summary>
            Add a default Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add(System.String)">
            <summary>
            Add a default Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add(`4)">
            <summary>
            Add a default Series to the series list.
            </summary>
            <param name="type">The type of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListBaseFactory`5.Add(`4,System.String)">
            <summary>
            Add a default Series to the series list.
            </summary>
            <param name="type">The type of series</param>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.SeriesListFactory`5">
            <summary>
            Define a factory to create different series.
            </summary>
            <typeparam name="T">Model Type</typeparam>
            <typeparam name="TOwner">Chart derived from FlexChartCore</typeparam>
            <typeparam name="TSeries">ChartSeries derived from ChartSeriesBase</typeparam>
            <typeparam name="TSeriesBuilder">ChartSeriesBuilder</typeparam>
            <typeparam name="TChartType">ChartType</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ChartSeriesBase{`0}},`1)">
            <summary>
            Initializes a new instance of the SeriesListFactory class.
            </summary>
            <param name="list"></param>
            <param name="owner"></param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddTrendLine">
            <summary>
            Add a TrendLine Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddTrendLine(System.String)">
            <summary>
            Add a TrendLine Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddMovingAverage">
            <summary>
            Add a MovingAverage Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddMovingAverage(System.String)">
            <summary>
            Add a MovingAverage Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddYFunctionSeries">
            <summary>
            Add a YFunction Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddYFunctionSeries(System.String)">
            <summary>
            Add a YFunction Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddParametricFunctionSeries">
            <summary>
            Add a ParametricFunction Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddParametricFunctionSeries(System.String)">
            <summary>
            Add a ParametricFunction Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddWaterfall">
            <summary>
            Add a Waterfall Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddWaterfall(System.String)">
            <summary>
            Add a Waterfall Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddBoxWhisker">
            <summary>
            Add a BoxWhisker Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddBoxWhisker(System.String)">
            <summary>
            Add a BoxWhisker Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddErrorBar">
            <summary>
            Add an ErrorBar Series to the series list.
            </summary>
            <returns>The series builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.SeriesListFactory`5.AddErrorBar(System.String)">
            <summary>
            Add an ErrorBar Series to the series list.
            </summary>
            <param name="name">The name of series</param>
            <returns>The series builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ControlBuilderFactory`1">
            <summary>
            Define a factory class to create different control builders, with model bindings.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.#ctor(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.Mvc.Fluent.ControlBuilderFactory"/> class 
            by using the specified html helper instance.
            </summary>
            <param name="helper">The specified HtmlHelper object.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Int32}}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int16}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Int16}}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Int64}}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Double}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Double}}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Single}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputNumberFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Single}}})">
            <summary>
            Create an InputNumberBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputNumberBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputMaskFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Create an InputMaskBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputMaskBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Create an InputDateBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputDateBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Create an InputDateBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputDateBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Create an InputDateTimeBuilder object.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputDateTimeBuilder object.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputDateTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Create an InputDateTimeBuilder object.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputDateTimeBuilder object.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Create an InputTimeBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputTimeBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputTimeFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Create an InputTimeBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputTimeBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputColorFor(System.Linq.Expressions.Expression{System.Func{`0,System.Drawing.Color}})">
            <summary>
            Create an InputColorBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputColorBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.InputColorFor(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Drawing.Color}}})">
            <summary>
            Create an InputColorBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The InputColorBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.ComboBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Create a ComboBoxBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The ComboBoxBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.AutoCompleteFor(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Create a AutoCompleteBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The AutoCompleteBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.MultiSelectFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Create a MultiSelectBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The MultiSelectBuilder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ControlBuilderFactory`1.MultiAutoCompleteFor``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Create a MultiAutoCompleteBuilder.
            </summary>
            <param name="expression">The model bind expression</param>
            <returns>The MultiAutoCompleteBuilder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridDetailProviderExtension">
            <summary>
            Defines the extensional methods for the FlexGridDetailProvider extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridDetailProviderExtension.ShowDetailRow``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.FlexGridDetailProviderBuilder{``0}})">
            <summary>
             Apply the FlexGridDetailProvider extender in FlexGrid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">the specified FlexGrid builder.</param>
            <param name="detailProviderBuilder">the specified FlexGridDetailProvider builder</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ColumnFiltersBuilder">
            <summary>
            Define a class used to build a strongly typed list of <see cref="T:C1.Web.Mvc.ColumnFilter"/>s.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ListItemFactory`2">
            <summary>
            Define a class used to build a strongly typed list of objects.
            </summary>
            <typeparam name="TItem">The specified type of the item</typeparam>
            <typeparam name="TItemBuilder">The specified type of the item builder.</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.#ctor(System.Collections.Generic.IList{`0},System.Func{`0,`1})">
            <summary>
            Initializes an instance of the <see cref="T:C1.Web.Mvc.Fluent.ListItemFactory`2"/> class 
            by using the specified collection.
            </summary>
            <param name="list">The specified collection.</param>
            <param name="createItemBuilder">The function for creating item builder.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.#ctor(System.Collections.Generic.IList{`0},System.Func{`0},System.Func{`0,`1})">
            <summary>
            Initializes an instance of the <see cref="T:C1.Web.Mvc.Fluent.ListItemFactory`2"/> class 
            by using the specified collection.
            </summary>
            <param name="list">The specified collection.</param>
            <param name="createItem">The function to create an item.</param>
            <param name="createItemBuilder">The builder to set an item.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.Add">
            <summary>
            Add a default TItem instance to the collection.
            </summary>
            <returns>The item builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.Add(System.Action{`1})">
            <summary>
            Add a TItem instance updated by the specified action to the collection.
            </summary>
            <param name="build">The specified action to update TItem instance.</param>
            <returns>The factory instance</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ListItemFactory`2.Add(`0)">
            <summary>
            Add a TItem instance to the collection.
            </summary>
            <param name="item">The TItem instance.</param>
            <returns>The factory instance</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFiltersBuilder.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ColumnFilter},System.Func{C1.Web.Mvc.ColumnFilter,C1.Web.Mvc.Fluent.ColumnFilterBuilder})">
            <summary>
            Initializes an instance of the <see cref="T:C1.Web.Mvc.Fluent.ColumnFiltersBuilder"/> class 
            by using the specified collection.
            </summary>
            <param name="list">The specified collection</param>
            <param name="createItemBuilder">The function for creating item builder.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFiltersBuilder.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.ColumnFilter},System.Func{C1.Web.Mvc.ColumnFilter},System.Func{C1.Web.Mvc.ColumnFilter,C1.Web.Mvc.Fluent.ColumnFilterBuilder})">
            <summary>
            Initializes an instance of the <see cref="T:C1.Web.Mvc.Fluent.ColumnFiltersBuilder"/> class 
            by using the specified collection.
            </summary>
            <param name="list">The specified collection</param>
            <param name="createItem">The function used to return a <see cref="T:C1.Web.Mvc.ColumnFilter"/>.</param>
            <param name="createItemBuilder">The function for creating item builder.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ColumnFiltersBuilder.Add(C1.Web.Mvc.ColumnFilter)">
            <summary>
            Overrides to hidden the method.
            </summary>
            <param name="item">The TItem instance.</param>
            <returns>The factory instance</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1">
            <summary>
            Defines the html builder for FlexGridFilter.
            </summary>
            <typeparam name="T">The data item type.</typeparam>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.#ctor(C1.Web.Mvc.FlexGridFilter{`0})">
            <summary>
            Create one FlexGridFilterBuilder instance.
            </summary>
            <param name="extender">The FlexGridFilter extender.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ShowFilterIcons(System.Boolean)">
            <summary>
            Gets or sets a bool value that indicates whether to show the filter editing buttons in the grid's column headers.
            </summary>
            <param name="value">The bool value.</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.DefaultFilterType(C1.Web.Mvc.FilterType)">
            <summary>
            Sets the default filter type to use.
            </summary>
            <param name="type">The flexgrid's filter type</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ColumnFilterTypes(System.Collections.Generic.IDictionary{System.String,C1.Web.Mvc.FilterType})">
            <summary>
            Sets a dictionary to map the column and its FilterType.
            </summary>
            <param name="dict">The dictionary which is mapping the column and its FilterType</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ShowSortButtons(System.Boolean)">
            <summary>
            Gets or sets a value indicating whether the filter editor should include sort buttons.
            </summary>
            <param name="value">The bool value.</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ColumnFilterTypes(System.Object)">
            <summary>
            Sets a dictionary to map the column and its FilterType.
            </summary>
            <param name="filterTypes">The dictionary which is mapping the column and its FilterType</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.OnClientFilterChanging(System.String)">
            <summary>
            Sets the OnClientFilterChanging property.
            </summary>
            <remarks>
            Occurs when a column filter is about to be edited by the user.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.OnClientFilterChanged(System.String)">
            <summary>
            Sets the OnClientFilterChanged property.
            </summary>
            <remarks>
            Occurs after a column filter has been edited by the user.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.OnClientFilterApplied(System.String)">
            <summary>
            Sets the OnClientFilterApplied property.
            </summary>
            <remarks>
            Occurs after the filter is applied.
            </remarks>
            <param name="value">The value</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.FilterColumns(System.String[])">
            <summary>
            Sets an array containing the names or bindings of the columns that should have filters.
            </summary>
            <param name="columns">The array indicates which columns should be filterable</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterBuilder`1.ColumnFilters(System.Action{C1.Web.Mvc.Fluent.ColumnFiltersBuilder})">
            <summary>
            Sets the ColumnFilters.
            </summary>
            <param name="builder">The builder action</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridFilterExtension">
            <summary>
            Define a static class to add the extension methods 
            for all the controls which can use FlexGridFilter extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.FlexGridFilterBuilder{``0}})">
            <summary>
            Apply the FlexGridFilter extender in FlexGrid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <param name="gridFilterBuilder">the specified flexgridfilter builder</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0})">
            <summary>
            Apply the default FlexGridFilter extender in FlexGrid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object})">
            <summary>
            Apply the default FlexGridFilter extender in FlexGrid.
            </summary>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridFilterExtension.Filterable(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.Action{C1.Web.Mvc.Fluent.FlexGridFilterBuilder{System.Object}})">
            <summary>
            Apply the FlexGridFilter extender in FlexGrid.
            </summary>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <param name="gridFilterBuilder">the specified flexgridfilter builder</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension">
            <summary>
            Define a static class to add the extension methods 
            for all the controls which can use FlexGridGroupPanel extender.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.Action{C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder{``0}},System.String)">
            <summary>
            Apply the FlexGridGroupPanel extender in FlexGrid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <param name="gridGroupPanelBuilder">the specified flexgridgrouppanel builder</param>
            <param name="selector">The specified selector for the FlexGridGroupPanel's host element.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel``1(C1.Web.Mvc.Fluent.FlexGridBuilder{``0},System.String)">
            <summary>
            Apply the default FlexGridGroupPanel extender in FlexGrid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <param name="selector">The specified selector for the FlexGridGroupPanel's host element.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.String)">
            <summary>
            Apply the default FlexGridGroupPanel extender in FlexGrid.
            </summary>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <param name="selector">The specified selector for the FlexGridGroupPanel's host element.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.FlexGridGroupPanelExtension.ShowGroupPanel(C1.Web.Mvc.Fluent.FlexGridBuilder{System.Object},System.Action{C1.Web.Mvc.Fluent.FlexGridGroupPanelBuilder{System.Object}},System.String)">
            <summary>
            Apply the FlexGridGroupPanel extender in FlexGrid.
            </summary>
            <param name="gridBuilder">the specified flexgrid builder.</param>
            <param name="gridGroupPanelBuilder">the specified flexgridgrouppanel builder</param>
            <param name="selector">The specified selector for the FlexGridGroupPanel's host element.</param>
            <returns></returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.HtmlHelperExtension">
            <summary>
            Extends the standard <see cref="T:HtmlHelper"/> class.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HtmlHelperExtension.C1(System.Web.Mvc.HtmlHelper)">
            <summary>
            Create the ControlBuilderFactory instance via <see cref="T:HtmlHelper"/>.
            </summary>
            <param name="helper">The specified <see cref="T:HtmlHelper"/> object</param>
            <returns>An instance of ControlBuilderFactory</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.HtmlHelperExtension.C1``1(System.Web.Mvc.HtmlHelper{``0})">
            <summary>
            Create the ControlBuilderFactory instance via html helper.
            </summary>
            <typeparam name="TModel">The specified model type</typeparam>
            <param name="helper">The specified html helper object</param>
            <returns>An instance of ControlBuilderFactory</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.IHtmlStringExtension">
            <summary>
            Define a static class to add the extension methods for <see cref="T:System.Web.IHtmlString"/>
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.IHtmlStringExtension.ToTemplate(System.Web.IHtmlString)">
            <summary>
            Render the html string in template mode.
            </summary>
            <param name="htmlString">The specified html string</param>
            <returns>An instance of html string with the template mode.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuItemFactory">
            <summary>
            A builder factory sub class for MenuItem.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemFactory.#ctor(System.Collections.Generic.IList{C1.Web.Mvc.MenuItem})">
            <summary>
            Create a MenuItemFactory instance.
            </summary>
            <param name="list">The list of MenuItem</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemFactory.Add(System.String,System.Object)">
            <summary>
            An override factory method for adding MenuItem.
            </summary>
            <param name="header">The header of the MenuItem</param>
            <param name="commandParameter">The command parameter of the MenuItem</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuItemFactory.AddSeparator">
            <summary>
            Add a MenuItem that is a separator.
            </summary>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.MenuBuilder">
            <summary>
            The builder for the Menu.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBuilder.#ctor(C1.Web.Mvc.Menu)">
            <summary>
            Create one MenuBuilder instance.
            </summary>
            <param name="control">The Menu control.</param>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBuilder.MenuItems(System.Action{C1.Web.Mvc.Fluent.MenuItemFactory})">
            <summary>
            Sets the MenuItems.
            </summary>
            <param name="build">The build action</param>
            <returns>Current builder</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.MenuBuilder.Command(System.String,System.String)">
            <summary>
            Sets the Command property.
            </summary>
            <param name="execute">The execute client function</param>
            <param name="canExecute">The canExecute client function</param>
            <returns>Current builder</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BasicBundlesBuilder">
            <summary>
            Defines the builder of the script bundles of the basic assembly.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.BundlesBuilder">
            <summary>
            Defines base builder of script bundles.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Chart(System.Action{C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder})">
            <summary>
            Registers chart related script bundles.
            </summary>
            <param name="build">The <see cref="T:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder"/>.</param>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Grid(System.Action{C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder})">
            <summary>
            Registers grid related script bundles.
            </summary>
            <param name="build">The <see cref="T:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder"/>.</param>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Input">
            <summary>
            Registers input script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.Gauge">
            <summary>
            Registers gauge script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.BasicBundlesBuilder.CollectionView">
            <summary>
            Registers collection view script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder">
            <summary>
            Defines the builder of grid extension script bundles.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder.Detail">
            <summary>
            Registers detail row extension script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder.Filter">
            <summary>
            Registers filter extension script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.GridExtensionBundlesBuilder.GroupPanel">
            <summary>
            Registers group panel extension script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder">
            <summary>
            Defines the builder of chart extension script bundles.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder.Annotation">
            <summary>
            Registers annotation extension script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder.LineMarker">
            <summary>
            Registers line marker extension script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ChartExtensionBundlesBuilder.Animation">
            <summary>
            Registers animation extension script bundle.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.StylesBuilder">
            <summary>
            Defines the builder of registering style sheets.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.StylesBuilder.Theme(System.String)">
            <summary>
            Sets the theme.
            </summary>
            <param name="theme">The theme.</param>
            <returns>The current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Fluent.ScriptsBuilder">
            <summary>
            Defines the builder of registering scripts.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScriptsBuilder.Basic">
            <summary>
            Registers all scripts in basic assembly.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScriptsBuilder.Basic(System.Action{C1.Web.Mvc.Fluent.BasicBundlesBuilder})">
            <summary>
            Registers the specified script bundle in basic assembly by <see cref="T:C1.Web.Mvc.Fluent.BasicBundlesBuilder"/>.
            </summary>
            <returns>The current builder.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Fluent.ScriptsBuilder.Culture(System.String)">
            <summary>
            Registers the specified the globalization script with culture name.
            </summary>
            <param name="culture">The culture name.</param>
            <returns>The current builder.</returns>
        </member>
        <member name="T:C1.Web.Mvc.LicenseDetector">
            <summary>
            Define a class for detecting license.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.LicenseDetector.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Localization.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseEvalValid">
            <summary>
              Looks up a localized string similar to Trial license, {0} days left..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseExpiredEval">
            <summary>
              Looks up a localized string similar to Your trial license is expired..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseExpiredFull">
            <summary>
              Looks up a localized string similar to Your license is expired..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseFullValid">
            <summary>
              Looks up a localized string similar to Valid license, {0} days left..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseInvalidCert">
            <summary>
              Looks up a localized string similar to Invalid certificate..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseNotSet">
            <summary>
              Looks up a localized string similar to Please set a valid license key by setting LicenseManager.Key..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.AppLicenseUnknown">
            <summary>
              Looks up a localized string similar to Unknown license..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonCreatingConstructorError">
            <summary>
              Looks up a localized string similar to Error creating constructor..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonDeserializeToTypeError">
            <summary>
              Looks up a localized string similar to The text cannot be deserialized into an instance of {0}..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonNoParameterizedConstructorNotFound">
            <summary>
              Looks up a localized string similar to No parameterless constructor defined..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonParameterizedConstructorNotFound">
            <summary>
              Looks up a localized string similar to No matching parameterized constructor found..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadInvalidJsonText">
            <summary>
              Looks up a localized string similar to Invalid JSON text..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadInvalidLiteral">
            <summary>
              Looks up a localized string similar to Invalid {0} literal..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadJsonTextIsEmpty">
            <summary>
              Looks up a localized string similar to The json text read is empty..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadUnexpectedLiteral">
            <summary>
              Looks up a localized string similar to Unexpected name/value pair syntax in object literal..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonReadUnterminatedLiteral">
            <summary>
              Looks up a localized string similar to Unterminated {0} literal..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonResultGetIsNotAllowed">
            <summary>
              Looks up a localized string similar to Get method is not allowed..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteEndScopeError">
            <summary>
              Looks up a localized string similar to No active scope to end..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteKeyTypeIsNotSupportedInHashtable">
            <summary>
              Looks up a localized string similar to Key of unsupported type contained in Hashtable..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteNamesWrittenError">
            <summary>
              Looks up a localized string similar to Names can only be written into Object scopes..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.C1JsonWriteNoScopeWriten">
            <summary>
              Looks up a localized string similar to No active scope to write into..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ChartAxisInvalidLogBase">
            <summary>
              Looks up a localized string similar to Value should be larger than 0, and should not equals to 1..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewBatchEditNotSupported">
            <summary>
              Looks up a localized string similar to BatchEditing is not supported..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewEditCommand">
            <summary>
              Looks up a localized string similar to Create, Delete and Update.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewEditNotSupported">
            <summary>
              Looks up a localized string similar to Editing is not supported..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewHandleActionTip">
            <summary>
              Looks up a localized string similar to Should handle action by the {0} property..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewInvalidCommand">
            <summary>
              Looks up a localized string similar to Only {0} operation is allowed to be executed in the {0} action..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewInvalidInitialItemsCount">
            <summary>
              Looks up a localized string similar to The value of the InitialItemsCount property should be a non-negative number or null..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewPageNotSupported">
            <summary>
              Looks up a localized string similar to Paging is not supported..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.CollectionViewUnknowCommand">
            <summary>
              Looks up a localized string similar to Unknown command..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterDeserializationIsNotImplemented">
            <summary>
              Looks up a localized string similar to The deserialization should never be implemented..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterInvalidTypeOfValue">
            <summary>
              Looks up a localized string similar to Invalid type of value..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterValueCanNotBeDeserialized">
            <summary>
              Looks up a localized string similar to The value cannot be deserialized..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.ConverterValueCanNotBeSerialized">
            <summary>
              Looks up a localized string similar to The value cannot be serialized..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.EvalInfoMessage">
            <summary>
              Looks up a localized string similar to ComponentOne Controls for ASP.NET MVC(Evaluation Version). Copyright (c), GrapeCity, Inc.  All rights reserved..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexGridCollectionViewNullError">
            <summary>
              Looks up a localized string similar to The grid&apos;s collectionview must be non null reference..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexGridFilterCompareError">
            <summary>
              Looks up a localized string similar to Cannot compare two instances which are not implemented the IComparable interface..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexGridInvalidColumnWidth">
            <summary>
              Looks up a localized string similar to Column widths should be positive numbers (column width in pixels), null or negative numbers (use the collection&apos;s default column width), or strings in the format &apos;{number}*&apos; (star sizing)..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.FlexPieInnerRadiusOutOfRangeError">
            <summary>
              Looks up a localized string similar to Value should be larger than or equals 0, and less than 1..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.InvalidC1Property">
            <summary>
              Looks up a localized string similar to The value of the c1-property attribute is invalid..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.InvalidValueException">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is an invalid value..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.NotSetC1Property">
            <summary>
              Looks up a localized string similar to Please set the c1-property attribute..
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Localization.Resources.NoAppEnvironment">
            <summary>
              Looks up a localized string similar to Please set the c1-property attribute..
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1ClientEventJsonResolver">
            <summary>
            The JsonResolver for serializing options of C1 MVC controls.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseResolver">
            <summary>
            Defines the base class for resolver.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseResolver.CanResolve(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
             <summary>
             Determines whether the object can use this resolver.
             </summary>
             <param name="name">The name of the object.</param>
             <param name="value">The object value.</param>
             <param name="type">The object type.</param>
             <param name="context">The context.</param>
             <returns>
             A <see cref="T:System.Boolean"/> value indicates whether to be resovled.
             If true, it means the object can be resolved.
             Otherwise, the resolver cannot support this object.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseResolver.ResolveConverter(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Gets the converter for this resolver.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="value">The object value.</param>
            <param name="type">The object type.</param>
            <param name="context">The context.</param>
            <returns>A converter.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseResolver.ResolvePropertyName(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Gets the name after being resolved.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="value">The object value.</param>
            <param name="type">The object type.</param>
            <param name="context">The context.</param>
            <returns>A string.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseReader">
            <summary>
            Defines the base class for deserializing.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.Operation">
            <summary>
            Defines the base class for serializing and deserializing.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.Operation.#ctor(C1.Web.Mvc.Serialization.IContext,C1.Web.Mvc.Serialization.IAttributeHelper)">
            <summary>
            Creates an instance of <see cref="T:C1.Web.Mvc.Serialization.Operation"/>.
            </summary>
            <param name="context">The context object.</param>
            <param name="helper">The attribute helper.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.Operation.Dispose">
            <summary>
            Dispose the resources.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.Operation.Context">
            <summary>
            Gets the context object.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseReader.#ctor(C1.Web.Mvc.Serialization.IContext,C1.Web.Mvc.Serialization.IAttributeHelper,System.IO.TextReader)">
            <summary>
            Creates an instance of <see cref="T:C1.Web.Mvc.Serialization.BaseReader"/>.
            </summary>
            <param name="context">The context.</param>
            <param name="helper">The attribute helper.</param>
            <param name="reader">The text reader.</param>
        </member>
        <member name="T:C1.JsonNet.Converters.EnumToStringConverter">
            <summary>
            Defines a class which converts the value of Enum type to String with or without camel case
            </summary>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.#ctor">
            <summary>
            Initializes a new instance of the EnumToStringConverter class.
            </summary>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.CanConvert(System.Type)">
            <summary>
            Gets whether the converter is supported.
            </summary>
            <param name="objectType">The object type.</param>
            <returns>
            A bool value indicates whether the converter is supported.
            If true, the converter is supported.
            Otherwise, it is not supported.
            </returns>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Deserialize the object.
            </summary>
            <param name="reader">The deserialization reader.</param>
            <param name="objectType">The object type.</param>
            <param name="existingValue">The existed value.</param>
            <returns>The object after deserialization.</returns>
        </member>
        <member name="M:C1.JsonNet.Converters.EnumToStringConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Serialize the value.
            </summary>
            <param name="writer">The serialization writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:C1.JsonNet.Converters.EnumToStringConverter.CamelCaseText">
            <summary>
            Gets or sets a value indicating whether the written enum text should be camel case.
            </summary>
            <value><c>true</c> if the written enum text will be camel case; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:C1.JsonNet.Converters.FunctionConverter">
            <summary>
            Define a converter which converts the client function name to string without quote.
            </summary>
        </member>
        <member name="M:C1.JsonNet.Converters.FunctionConverter.CanConvert(System.Type)">
            <summary>
            Gets whether the converter is supported.
            </summary>
            <param name="objectType">The object type.</param>
            <returns>
            A bool value indicates whether the converter is supported.
            If true, the converter is supported.
            Otherwise, it is not supported.
            </returns>
        </member>
        <member name="M:C1.JsonNet.Converters.FunctionConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Serialize the value.
            </summary>
            <param name="writer">The serialization writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:C1.JsonNet.Converters.FunctionConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Deserialize the object.
            </summary>
            <param name="reader">The deserialization reader.</param>
            <param name="objectType">The object type.</param>
            <param name="existingValue">The existed value.</param>
            <returns>The object after deserialization.</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime"/> or <seealso cref="T:System.DateTimeOffset"/> to a JavaScript date constructor (e.g. new Date(52231943)).
            </summary>
            <remarks>
            This converter is used to convert a <see cref="T:System.DateTime"/> or <seealso cref="T:System.DateTimeOffset"/> instance to a javascript date constructor.
            It is always used to serialize the value when the page is loaded at the first time.
            This converter is only used to serialize.
            </remarks>
            <summary>
            Define the service converter.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter.CanConvert(System.Type)">
            <summary>
            Gets whether an object supports serialization or deserialization with current converter.
            </summary>
            <param name="objectType">The object type.</param>
            <returns>If true, the converter is supported. Otherwise, it is not supported.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Serialize the object.
            </summary>
            <param name="writer">The serialization writer.</param>
            <param name="value">The value to be serialized.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.JavascriptDateTimeConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Overrides to not support deserialization with this converter.
            </summary>
            <param name="reader">The deserialization reader.</param>
            <param name="objectType">The object type.</param>
            <param name="existedValue">The existed value.</param>
            <returns>The object.</returns>
        </member>
        <member name="T:C1.JsonNet.Converters.HtmlColorConverter">
            <summary>
            The converter for converting color to html.
            </summary>
        </member>
        <member name="M:C1.JsonNet.Converters.HtmlColorConverter.WriteJson(C1.JsonNet.JsonWriter,System.Object)">
            <summary>
            Write value to json string.
            </summary>
            <param name="writer">The json writer</param>
            <param name="value">The value</param>
        </member>
        <member name="M:C1.JsonNet.Converters.HtmlColorConverter.ReadJson(C1.JsonNet.JsonReader,System.Type,System.Object)">
            <summary>
            Read value from json string.
            </summary>
            <param name="reader">The json reader</param>
            <param name="objectType">The object type</param>
            <param name="existedValue">The existed value</param>
            <returns></returns>
        </member>
        <member name="M:C1.JsonNet.Converters.HtmlColorConverter.CanConvert(System.Type)">
            <summary>
            A bool value indicates whether the type can be converted.
            </summary>
            <param name="objectType">The object type</param>
            <returns>A bool value indicates whether the type can be converted</returns>
        </member>
        <member name="P:C1.JsonNet.Converters.HtmlColorConverter.Instance">
            <summary>
            Gets the instance of <see cref="T:C1.JsonNet.Converters.HtmlColorConverter"/> object.
            </summary>
        </member>
        <member name="T:C1.JsonNet.JsonAttribute">
            <summary>
            Defines the attribute for json serialization and deserialization.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1NameAttribute">
            <summary>
            Defines the base attribute for customizing the name.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1NameAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:C1.Web.Mvc.Serialization.C1NameAttribute"/>.
            </summary>
            <param name="name">The specified name.</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.C1NameAttribute.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.JsonNet.JsonAttribute"/> class.
            </summary>
            <param name="order">A <see cref="T:System.Int32"/> value indicating the order of serialization or deserialization.</param>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.JsonNet.JsonAttribute"/> class.
            </summary>
            <param name="skipIfDefault">A flag indicating whether the default value should be serialized or deserialized.</param>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.JsonNet.JsonAttribute"/> class.
            </summary>
            <param name="propertyName">The specified name the property would be serialized.</param>
        </member>
        <member name="M:C1.JsonNet.JsonAttribute.#ctor(System.Boolean,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.JsonNet.JsonAttribute"/> class.
            </summary>
            <param name="skipIfDefault">A flag indicating whether the default value should be serialized or deserialized.</param>
            <param name="order">A <see cref="T:System.Int32"/> value indicating the order of serialization or deserialization.</param>
            <param name="propertyName">The specified name the property would be serialized.</param>
        </member>
        <member name="P:C1.JsonNet.JsonAttribute.Order">
            <summary>
            Gets a value indicates the order of the seriailization or deserialization.
            </summary>
            <remarks>
            The property which has greater order, it will be serialized or deserialized earlier. 
            </remarks>
        </member>
        <member name="P:C1.JsonNet.JsonAttribute.SkipIfDefault">
            <summary>
            Gets a value indicates whether to serialize or deserialize the default value.
            </summary>
        </member>
        <member name="P:C1.JsonNet.JsonAttribute.PropertyName">
            <summary>
            Gets a value indicates the serialized property name.
            </summary>
        </member>
        <member name="T:C1.JsonNet.IgnoreAttribute">
            <summary>
            Defines the attribute which represents the proerty should not be serialized.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1IgnoreAttribute">
            <summary>
            Defines the base attribute for ignore serialization or deserialization.
            </summary>
        </member>
        <member name="T:C1.JsonNet.JsonConverterAttribute">
            <summary>
            Instructs the <see cref="T:C1.JsonNet.JsonConverterAttribute"/> to use the specified <see cref="T:C1.JsonNet.JsonConverter"/> when serializing the member or class.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1ConverterAttribute">
            <summary>
            Instructs the <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute"/> to use the specified <see cref="T:C1.Web.Mvc.Serialization.BaseConverter"/> when serializing the member or class.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1ConverterAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute"/> class.
            </summary>
            <param name="converterType">Type of the converter.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1ConverterAttribute.#ctor(System.Type,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute"/> class.
            </summary>
            <param name="converterType">Type of the converter.</param>
            <param name="converterParameters">Parameter list to use when constructing the JsonConverter.  Can be null.</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.C1ConverterAttribute.ConverterType">
            <summary>
            Gets the type of the converter.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.C1ConverterAttribute.ConverterParameters">
            <summary>
            The parameter list to use when constructing the JsonConverter described by ConverterType.  
            If null, the default constructor is used.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonConverterAttribute.#ctor(System.Type)">
            <summary>
            Creates an instance of <see cref="T:C1.JsonNet.JsonConverterAttribute"/>.
            </summary>
            <param name="converterType">The converter type.</param>
        </member>
        <member name="M:C1.JsonNet.JsonConverterAttribute.#ctor(System.Type,System.Object[])">
            <summary>
            Creates an instance of <see cref="T:C1.JsonNet.JsonConverterAttribute"/>.
            </summary>
            <param name="converterType">The converter type.</param>
            <param name="converterParameters">The parameters which used to create the converter instance.</param>
        </member>
        <member name="T:C1.JsonNet.CollectionItemTypeAttribute">
            <summary>
            Defines the attribute which specifies the item type of a collection.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute">
            <summary>
            Defines the attribute to specify the collection item converter.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute.#ctor(System.Type)">
            <summary>
            Creates an instance of <see cref="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute"/>.
            </summary>
            <param name="converterType">The converter type.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute.#ctor(System.Type,System.Object[])">
            <summary>
            Creates an instance of <see cref="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute"/>.
            </summary>
            <param name="converterType">The converter type.</param>
            <param name="converterParameters">The parameters used to create the converter instance.</param>
        </member>
        <member name="M:C1.JsonNet.CollectionItemTypeAttribute.#ctor(System.Type,System.Type,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.JsonNet.CollectionItemTypeAttribute"/> class.
            </summary>
            <param name="collectionItemType">The item type</param>
            <param name="itemConverterType">The converter type of item</param>
            <param name="itemConverterParameters">The parameter list to use when constructing the item converter</param>
        </member>
        <member name="M:C1.JsonNet.CollectionItemTypeAttribute.#ctor(System.Type,System.Object[])">
            <summary>
            Creates an instance of <see cref="T:C1.JsonNet.CollectionItemTypeAttribute"/>.
            </summary>
            <param name="itemConverterType">The converter type.</param>
            <param name="itemConverterParameters">The parameters used to create the converter.</param>
        </member>
        <member name="M:C1.JsonNet.CollectionItemTypeAttribute.#ctor(System.Type)">
            <summary>
            Creates an instance of <see cref="T:C1.JsonNet.CollectionItemTypeAttribute"/>.
            </summary>
            <param name="itemConverterType">The converter type.</param>
        </member>
        <member name="P:C1.JsonNet.CollectionItemTypeAttribute.CollectionItemType">
            <summary>
            Gets the type of the item.
            </summary>
        </member>
        <member name="P:C1.JsonNet.CollectionItemTypeAttribute.ItemConverterType">
            <summary>
            Gets the converter type of item.
            </summary>
        </member>
        <member name="P:C1.JsonNet.CollectionItemTypeAttribute.ItemConverterParameters">
            <summary>
            Gets parameter list to use when constructing the JsonConverter described by <see cref="P:C1.JsonNet.CollectionItemTypeAttribute.ItemConverterType"/>.
            If null, the default constructor is used.
            </summary>
        </member>
        <member name="T:C1.JsonNet.JsonHelper">
            <summary>
            Defines utility methods for serialization or deserialization.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.SerializeObject(System.Object,C1.JsonNet.JsonSetting)">
            <summary>
            Serializes the specified object to a JSON string using <see cref="T:C1.JsonNet.JsonSetting"/>.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="js">The <see cref="T:C1.JsonNet.JsonSetting"/> used to serialize the object.
            If this is null, default serialization settings will be used.</param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.SerializeObject(System.Object,System.Collections.Generic.IList{C1.JsonNet.JsonConverter})">
            <summary>
             Serializes the specified object to a JSON string using a collection of <see cref="T:C1.JsonNet.JsonConverter"/>.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="jsCters">A collection of <see cref="T:C1.JsonNet.JsonConverter"/></param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.SerializeObject(System.Object,C1.JsonNet.JsonResolver)">
            <summary>
            Serializes the specified object to a JSON string using <see cref="T:C1.JsonNet.JsonResolver"/>.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="resolver">The object of <see cref="T:C1.JsonNet.JsonResolver"/></param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.DeserializeObject``1(System.String,C1.JsonNet.JsonSetting)">
            <summary>
            Deserializes the JSON to the specified .NET type using <see cref="T:C1.JsonNet.JsonSetting"/>.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="strJson">The object to deserialize.</param>
            <param name="js">
            The <see cref="T:C1.JsonNet.JsonSetting"/> used to deserialize the object.
            If this is null, default serialization settings will be used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.DeserializeObject(System.String,C1.JsonNet.JsonSetting)">
            <summary>
            Deserializes the JSON to the specified .NET type using <see cref="T:C1.JsonNet.JsonSetting"/>.
            </summary>
            <param name="strJson">The object to deserialize.</param>
            <param name="js">
            The <see cref="T:C1.JsonNet.JsonSetting"/> used to deserialize the object.
            If this is null, default serialization settings will be used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonHelper.DeserializeObject(System.String,System.Type,C1.JsonNet.JsonSetting)">
            <summary>
            Deserializes the JSON to the specified type using <see cref="T:C1.JsonNet.JsonSetting"/>.
            </summary>
            <param name="strJson">The object to deserialize.</param>
            <param name="type">The type the json will be deserialized.</param>
            <param name="js">
            The <see cref="T:C1.JsonNet.JsonSetting"/> used to deserialize the object.
            If this is null, default serialization settings will be used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="T:C1.JsonNet.JsonReader">
            <summary>
            Represents a reader that provides access to serialized Json data.
            </summary>
        </member>
        <member name="T:C1.JsonNet.IJsonOperation">
            <summary>
            Defines interface for the json operation.
            </summary>
        </member>
        <member name="P:C1.JsonNet.IJsonOperation.JsonSetting">
            <summary>
            Gets the json settings.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonReader.#ctor(System.IO.TextReader,C1.JsonNet.JsonSetting)">
            <summary>
            Initializes a new instance of the JsonReader class.
            </summary>
            <param name="reader">The text reader.</param>
            <param name="setting">The json setting.</param>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadValue``1">
            <summary>
            Deserialize the text into an instance of the specified type which T stands.
            </summary>
            <typeparam name="T">The object type</typeparam>
            <returns>An instance of T</returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadValue(System.Type)">
            <summary>
             Deserialize the text into an instance of the specified type
            </summary>
            <param name="type">The specified type</param>
            <returns>An instance of the specified type.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadName(System.String)">
            <summary>
            Read the field from the data according to the specified name
            </summary>
            <param name="name">The specified name of the field you want to read.</param>
            <returns>True, if the field is read successfully. Otherwise, the field doesn't exist in the data. </returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.ReadJsonValue">
            <summary>
            Read the simple value directly from the json string.
            </summary>
            <returns>Hashtable, string, number, boolean, null, array, datetime or an exception</returns>
        </member>
        <member name="M:C1.JsonNet.JsonReader.Dispose">
            <summary>
            Dispose all the resources used.
            </summary>
        </member>
        <member name="P:C1.JsonNet.JsonReader.Current">
            <summary>
            Gets or sets the current value which need be deserialized.
            </summary>
            <remarks>
            It is maybe a <see cref="T:System.Collections.ArrayList"/>, a <see cref="T:System.Collections.Hashtable"/>, a <see cref="T:System.DateTime"/>,
            a <see cref="T:System.String"/>, a <see cref="T:System.Boolean"/>, a <see cref="T:System.Int32"/>, 
            a <see cref="T:System.Double"/> or null.
            </remarks>
        </member>
        <member name="P:C1.JsonNet.JsonReader.JsonSetting">
            <summary>
            Gets the json settings.
            </summary>
        </member>
        <member name="T:C1.JsonNet.JsonResolver">
            <summary>
            Defines a class for json resolver.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.CanResolve(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
             <summary>
             Determines whether the object can use this resolver.
             </summary>
             <param name="name">The name of the object.</param>
             <param name="value">The object value.</param>
             <param name="type">The object type.</param>
             <param name="context">The context.</param>
             <returns>
             A <see cref="T:System.Boolean"/> value indicates whether to be resovled.
             If true, it means the object can be resolved.
             Otherwise, the resolver cannot support this object.
            </returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResolvePropertyName(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Gets the name after being resolved.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="value">The object value.</param>
            <param name="type">The object type.</param>
            <param name="context">The context.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResolveConverter(System.String,System.Object,System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Gets the converter for this resolver.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="value">The object value.</param>
            <param name="type">The object type.</param>
            <param name="context">The context.</param>
            <returns>A converter.</returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.CanResolve(System.String,System.Object,System.Type)">
             <summary>
             Gets whether the specified object can be serialized or deserialized.
             </summary>
             <param name="name">The property name.</param>
             <param name="value">The value of the object.</param>
             <param name="type">The type of the object.</param>
             <returns>
             A <see cref="T:System.Boolean"/> value indicates whether to be resovled.
             If true, it means the object can be serialized or deserialized.
             The object doesn't support serialization or deserialization.
            </returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResolvePropertyName(System.String)">
            <summary>
            Gets the property name for deserialization.
            </summary>
            <param name="name">The specified property name.</param>
            <returns></returns>
        </member>
        <member name="M:C1.JsonNet.JsonResolver.ResovleJsonConverter(System.String,System.Object,System.Type)">
            <summary>
            Gets the converter to be used for deserialization.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The value of the object.</param>
            <param name="objectType">The type of the object.</param>
            <returns>A converter.</returns>
        </member>
        <member name="T:C1.JsonNet.JsonSetting">
            <summary>
            Represents the serialization and deserialization setting.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseSetting">
            <summary>
            Defines the class for settings.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.ISetting">
            <summary>
            Defines the interface for setting.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.ISetting.Converters">
            <summary>
            Gets the converter collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.ISetting.Resolvers">
            <summary>
            Gets the resolver collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseSetting.Converters">
            <summary>
            Gets the converter collection.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseSetting.Resolvers">
            <summary>
            Gets the resolver collection.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.JsonNet.JsonSetting"/> class.
            </summary>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.IsPropertyNameCamel">
            <summary>
            Gets or sets a boolean value indicates whether the property name should be serialzied with camel case.
            </summary>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.SkipIsDefault">
            <summary>
            Gets or sets a value indicates how to serialize or deserialize the default value.
            If True, the default value will not be serialized or deserialized.
            Otherwise, it will be serialized or deserialized.
            </summary>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.IsJavascriptFormat">
            <summary>
            Gets or sets a value indicates whether to serialize to javascript format.
            </summary>
            <remarks>
            If some property type is string in server side, but its type is Function in client side,
            when IsJavascriptFormat is set to true, it will be serialzed to a string without quote.
            For example, the value of property A is "btnClick", it will be serialized to "{a: btnClick}".
            Otherwise, it will be serialized to "{a: 'btnClick'}". 
            Normally when the page is loaded in the first time and the properties are transfered to the client side, this property should be set to True.
            For callback, it will be set to false.
            </remarks>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.SkipReferenceLoop">
            <summary>
            Gets or sets a value indicates how reference loop is handled.
            </summary>
            <remarks>
            The object may has reference loop (e.g. a class referencing itself).
            The default is true which means does not serialize the member if it cause a reference loop.
            </remarks>
        </member>
        <member name="P:C1.JsonNet.JsonSetting.Resolver">
            <summary>
            Gets or sets the resolver.
            </summary>
        </member>
        <member name="T:C1.JsonNet.JsonWriter">
            <summary>
            Serialize an object to a json text.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseWriter">
            <summary>
            Defines the base class for Writer.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.#ctor(C1.Web.Mvc.Serialization.IContext,C1.Web.Mvc.Serialization.IAttributeHelper,System.IO.TextWriter)">
            <summary>
            Creates an instance of <see cref="T:C1.Web.Mvc.Serialization.BaseWriter"/>
            </summary>
            <param name="context">The context object.</param>
            <param name="helper">The attribute helper instance.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.WriteText(System.String)">
            <summary>
            Writes a text value.
            </summary>
            <param name="value">The text value.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.WriteObject(System.Object,C1.Web.Mvc.Serialization.BaseConverter)">
            <summary>
            Writes the object.
            </summary>
            <param name="value">The object to be written.</param>
            <param name="converter">The converter used to write.</param>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseWriter.WriteRawCollectionItem(System.Object,System.Object,System.Object)">
            <summary>
            Write the collection item without any converter.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.#ctor(System.IO.TextWriter,C1.JsonNet.JsonSetting)">
            <summary>
            Initializes a new instance of the JsonWriter class.
            </summary>
            <param name="writer">The output text writer.</param>
            <param name="setting">The setting for serialization.</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteRawValue(System.String)">
            <summary>
            Serialize a text.
            </summary>
            <param name="value">The specified text.</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteValue(System.Object,System.Boolean)">
            <summary>
            Serialize the specified object.
            </summary>
            <param name="obj">The specified object.</param>
            <param name="useConverter">A <see cref="T:System.Boolean"/> value indicates whether to use a converter for serialization.</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.StartObjectScope(System.Object)">
            <summary>
            Start the scope for a new object.
            </summary>
            <param name="obj">The specified object.</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.StartArrayScope(System.Object)">
            <summary>
            Start the scope for an array.
            </summary>
            <param name="arr">The specified array.</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.EndScope">
            <summary>
            End the scope.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteName(System.String)">
            <summary>
            Serialize a name for a property.
            </summary>
            <param name="name">The specified name.</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.WriteRawName(System.String)">
            <summary>
            Serialize a name for a property.
            </summary>
            <param name="name">The specified name.</param>
        </member>
        <member name="M:C1.JsonNet.JsonWriter.CheckReferenceLoop(System.Object,System.Object)">
            <summary>
            Checks whether there is a reference loop for the specified object.
            </summary>
            <returns>true if there is a reference loop for the specified object; otherwise, false.</returns>
        </member>
        <member name="P:C1.JsonNet.JsonWriter.JsonSetting">
            <summary>
            Gets the json settings.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.IAttributeHelper">
            <summary>
            Defines the interface for attribute helper used to get the attribute.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.IAttributeHelper.GetConverterAttribute(System.Object,System.Object)">
            <summary>
            Gets the attribute for the converter.
            </summary>
            <param name="memberInfo">The member information.</param>
            <param name="value">The member value.</param>
            <returns>Returns an instance of <see cref="T:C1.Web.Mvc.Serialization.C1ConverterAttribute"/></returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.IAttributeHelper.GetNameAttribute(System.Object,System.Object)">
            <summary>
            Gets the attribute for the name.
            </summary>
            <param name="memberInfo">The member information.</param>
            <param name="value">The member value.</param>
            <returns>Returns an instance of <see cref="T:C1.Web.Mvc.Serialization.C1NameAttribute"/>.</returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.IAttributeHelper.GetCollectionItemConverterAttribute(System.Object,System.Object)">
            <summary>
            Gets the attribute for the collection item converter.
            </summary>
            <param name="memberInfo">The member information.</param>
            <param name="collection">The collection value.</param>
            <returns>Returns an instance of <see cref="T:C1.Web.Mvc.Serialization.C1CollectionItemConverterAttribute"/></returns>
        </member>
        <member name="T:C1.JsonNet.JsonOperation">
            <summary>
            Defines a base class for serialization or deserialization.
            </summary>
        </member>
        <member name="M:C1.JsonNet.JsonOperation.#ctor(C1.JsonNet.JsonSetting)">
            <summary>
            Initializes a new instance of the JsonOperation class.
            </summary>
            <param name="setting">The json setting.</param>
        </member>
        <member name="M:C1.JsonNet.JsonOperation.Dispose">
            <summary>
            Dispose the current instance.
            </summary>
        </member>
        <member name="P:C1.JsonNet.JsonOperation.JsonSetting">
            <summary>
            Gets the json setting.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.C1WebMvcController">
            <summary>
            The controller for c1 web mvc controls.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.C1WebMvcController.WebResources(System.String)">
            <summary>
            Gets the js and css resources for the c1 web mvc controls by the specified key.
            </summary>
            <param name="r">The key of the resources</param>
            <returns>The resources</returns>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.IContext">
            <summary>
            Defines the interface for the context information.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.IContext.Setting">
            <summary>
            Gets the setting.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.IContext.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.BaseContext">
            <summary>
            Defines the class for the context.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.BaseContext.#ctor(C1.Web.Mvc.Serialization.ISetting,System.IServiceProvider)">
            <summary>
            Creates an instance of <see cref="T:C1.Web.Mvc.Serialization.IContext"/>.
            </summary>
            <param name="setting">The setting object.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseContext.Setting">
            <summary>
            Gets the setting.
            </summary>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.BaseContext.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
        </member>
        <member name="T:C1.Web.Mvc.Serialization.DefaultConverter">
            <summary>
            Defines the converter to remove the inherited converter.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.DefaultConverter.CanConvert(System.Type,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <param name="context">The context information.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.DefaultConverter.Write(C1.Web.Mvc.Serialization.BaseWriter,System.Object,C1.Web.Mvc.Serialization.IContext)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:C1.Web.Mvc.Serialization.Scope.NeedNewLine">
            <summary>
            Gets or sets whether to write in a new line.
            </summary>
        </member>
        <member name="M:C1.Web.Mvc.Serialization.Utility.GetCreator``1(System.Type)">
            <summary>
            Create a factory function that can be used to create instances of a JsonConverter described by the 
            argument type.  The returned function can then be used to either invoke the converter's default ctor, or any 
            parameterized constructors by way of an object array.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ControllerExtension">
            <summary>
            Extends the <see cref="T:System.Web.Mvc.Controller"/> for C1 MVC.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ControllerExtension.C1EnableDeferredScripts(System.Web.Mvc.Controller,System.Boolean)">
            <summary>
            Enable or disable deferred scripts feature in current controller or current action.
            </summary>
            <param name="controller">The controller.</param>
            <param name="enable">The value.</param>
        </member>
        <member name="T:System.Web.Mvc.WebViewPageExtensions">
            <summary>
            Extends the <see cref="T:System.Web.Mvc.WebViewPage"/> for C1 MVC.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.WebViewPageExtensions.C1EnableDeferredScripts(System.Web.Mvc.WebViewPage,System.Boolean)">
            <summary>
            Enable or disable deferred scripts feature in current view page.
            </summary>
            <param name="viewPage">The view page.</param>
            <param name="enable">The value.</param>
        </member>
    </members>
</doc>
